"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/input-otp";
exports.ids = ["vendor-chunks/input-otp"];
exports.modules = {

/***/ "(ssr)/./node_modules/input-otp/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/input-otp/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OTPInput: () => (/* binding */ Lt),\n/* harmony export */   OTPInputContext: () => (/* binding */ jt),\n/* harmony export */   REGEXP_ONLY_CHARS: () => (/* binding */ Jt),\n/* harmony export */   REGEXP_ONLY_DIGITS: () => (/* binding */ Kt),\n/* harmony export */   REGEXP_ONLY_DIGITS_AND_CHARS: () => (/* binding */ Qt)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar Bt = Object.defineProperty, At = Object.defineProperties;\nvar kt = Object.getOwnPropertyDescriptors;\nvar Y = Object.getOwnPropertySymbols;\nvar gt = Object.prototype.hasOwnProperty, Et = Object.prototype.propertyIsEnumerable;\nvar vt = (r, s, e)=>s in r ? Bt(r, s, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[s] = e, St = (r, s)=>{\n    for(var e in s || (s = {}))gt.call(s, e) && vt(r, e, s[e]);\n    if (Y) for (var e of Y(s))Et.call(s, e) && vt(r, e, s[e]);\n    return r;\n}, bt = (r, s)=>At(r, kt(s));\nvar Pt = (r, s)=>{\n    var e = {};\n    for(var u in r)gt.call(r, u) && s.indexOf(u) < 0 && (e[u] = r[u]);\n    if (r != null && Y) for (var u of Y(r))s.indexOf(u) < 0 && Et.call(r, u) && (e[u] = r[u]);\n    return e;\n};\n\nfunction ht(r) {\n    let s = setTimeout(r, 0), e = setTimeout(r, 10), u = setTimeout(r, 50);\n    return [\n        s,\n        e,\n        u\n    ];\n}\n\nfunction _t(r) {\n    let s = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        s.current = r;\n    }), s.current;\n}\n\nvar Ot = 18, wt = 40, Gt = `${wt}px`, xt = [\n    \"[data-lastpass-icon-root]\",\n    \"com-1password-button\",\n    \"[data-dashlanecreated]\",\n    '[style$=\"2147483647 !important;\"]'\n].join(\",\");\nfunction Tt({ containerRef: r, inputRef: s, pushPasswordManagerStrategy: e, isFocused: u }) {\n    let [P, D] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [G, H] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [F, W] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), Z = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>e === \"none\" ? !1 : (e === \"increase-width\" || e === \"experimental-no-flickering\") && P && G, [\n        P,\n        G,\n        e\n    ]), T = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        let f = r.current, h = s.current;\n        if (!f || !h || F || e === \"none\") return;\n        let a = f, B = a.getBoundingClientRect().left + a.offsetWidth, A = a.getBoundingClientRect().top + a.offsetHeight / 2, z = B - Ot, q = A;\n        document.querySelectorAll(xt).length === 0 && document.elementFromPoint(z, q) === f || (D(!0), W(!0));\n    }, [\n        r,\n        s,\n        F,\n        e\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let f = r.current;\n        if (!f || e === \"none\") return;\n        function h() {\n            let A = window.innerWidth - f.getBoundingClientRect().right;\n            H(A >= wt);\n        }\n        h();\n        let a = setInterval(h, 1e3);\n        return ()=>{\n            clearInterval(a);\n        };\n    }, [\n        r,\n        e\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let f = u || document.activeElement === s.current;\n        if (e === \"none\" || !f) return;\n        let h = setTimeout(T, 0), a = setTimeout(T, 2e3), B = setTimeout(T, 5e3), A = setTimeout(()=>{\n            W(!0);\n        }, 6e3);\n        return ()=>{\n            clearTimeout(h), clearTimeout(a), clearTimeout(B), clearTimeout(A);\n        };\n    }, [\n        s,\n        u,\n        e,\n        T\n    ]), {\n        hasPWMBadge: P,\n        willPushPWMBadge: Z,\n        PWM_BADGE_SPACE_WIDTH: Gt\n    };\n}\nvar jt = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext({}), Lt = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((A, B)=>{\n    var z = A, { value: r, onChange: s, maxLength: e, textAlign: u = \"left\", pattern: P, placeholder: D, inputMode: G = \"numeric\", onComplete: H, pushPasswordManagerStrategy: F = \"increase-width\", pasteTransformer: W, containerClassName: Z, noScriptCSSFallback: T = Nt, render: f, children: h } = z, a = Pt(z, [\n        \"value\",\n        \"onChange\",\n        \"maxLength\",\n        \"textAlign\",\n        \"pattern\",\n        \"placeholder\",\n        \"inputMode\",\n        \"onComplete\",\n        \"pushPasswordManagerStrategy\",\n        \"pasteTransformer\",\n        \"containerClassName\",\n        \"noScriptCSSFallback\",\n        \"render\",\n        \"children\"\n    ]);\n    var X, lt, ut, dt, ft;\n    let [q, nt] = react__WEBPACK_IMPORTED_MODULE_0__.useState(typeof a.defaultValue == \"string\" ? a.defaultValue : \"\"), i = r != null ? r : q, I = _t(i), x = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((t)=>{\n        s == null || s(t), nt(t);\n    }, [\n        s\n    ]), m = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>P ? typeof P == \"string\" ? new RegExp(P) : P : null, [\n        P\n    ]), l = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), K = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), J = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        value: i,\n        onChange: x,\n        isIOS:  false && (0)\n    }), V = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n        prev: [\n            (ut = l.current) == null ? void 0 : ut.selectionStart,\n            (dt = l.current) == null ? void 0 : dt.selectionEnd,\n            (ft = l.current) == null ? void 0 : ft.selectionDirection\n        ]\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(B, ()=>l.current, []), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let t = l.current, o = K.current;\n        if (!t || !o) return;\n        J.current.value !== t.value && J.current.onChange(t.value), V.current.prev = [\n            t.selectionStart,\n            t.selectionEnd,\n            t.selectionDirection\n        ];\n        function d() {\n            if (document.activeElement !== t) {\n                L(null), N(null);\n                return;\n            }\n            let c = t.selectionStart, b = t.selectionEnd, mt = t.selectionDirection, v = t.maxLength, C = t.value, _ = V.current.prev, g = -1, E = -1, w;\n            if (C.length !== 0 && c !== null && b !== null) {\n                let Dt = c === b, Ht = c === C.length && C.length < v;\n                if (Dt && !Ht) {\n                    let y = c;\n                    if (y === 0) g = 0, E = 1, w = \"forward\";\n                    else if (y === v) g = y - 1, E = y, w = \"backward\";\n                    else if (v > 1 && C.length > 1) {\n                        let et = 0;\n                        if (_[0] !== null && _[1] !== null) {\n                            w = y < _[1] ? \"backward\" : \"forward\";\n                            let Wt = _[0] === _[1] && _[0] < v;\n                            w === \"backward\" && !Wt && (et = -1);\n                        }\n                        g = et + y, E = et + y + 1;\n                    }\n                }\n                g !== -1 && E !== -1 && g !== E && l.current.setSelectionRange(g, E, w);\n            }\n            let pt = g !== -1 ? g : c, Rt = E !== -1 ? E : b, yt = w != null ? w : mt;\n            L(pt), N(Rt), V.current.prev = [\n                pt,\n                Rt,\n                yt\n            ];\n        }\n        if (document.addEventListener(\"selectionchange\", d, {\n            capture: !0\n        }), d(), document.activeElement === t && Q(!0), !document.getElementById(\"input-otp-style\")) {\n            let c = document.createElement(\"style\");\n            if (c.id = \"input-otp-style\", document.head.appendChild(c), c.sheet) {\n                let b = \"background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;\";\n                $(c.sheet, \"[data-input-otp]::selection { background: transparent !important; color: transparent !important; }\"), $(c.sheet, `[data-input-otp]:autofill { ${b} }`), $(c.sheet, `[data-input-otp]:-webkit-autofill { ${b} }`), $(c.sheet, \"@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }\"), $(c.sheet, \"[data-input-otp] + * { pointer-events: all !important; }\");\n            }\n        }\n        let R = ()=>{\n            o && o.style.setProperty(\"--root-height\", `${t.clientHeight}px`);\n        };\n        R();\n        let p = new ResizeObserver(R);\n        return p.observe(t), ()=>{\n            document.removeEventListener(\"selectionchange\", d, {\n                capture: !0\n            }), p.disconnect();\n        };\n    }, []);\n    let [ot, rt] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [j, Q] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1), [M, L] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null), [k, N] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        ht(()=>{\n            var R, p, c, b;\n            (R = l.current) == null || R.dispatchEvent(new Event(\"input\"));\n            let t = (p = l.current) == null ? void 0 : p.selectionStart, o = (c = l.current) == null ? void 0 : c.selectionEnd, d = (b = l.current) == null ? void 0 : b.selectionDirection;\n            t !== null && o !== null && (L(t), N(o), V.current.prev = [\n                t,\n                o,\n                d\n            ]);\n        });\n    }, [\n        i,\n        j\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        I !== void 0 && i !== I && I.length < e && i.length === e && (H == null || H(i));\n    }, [\n        e,\n        H,\n        I,\n        i\n    ]);\n    let O = Tt({\n        containerRef: K,\n        inputRef: l,\n        pushPasswordManagerStrategy: F,\n        isFocused: j\n    }), st = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((t)=>{\n        let o = t.currentTarget.value.slice(0, e);\n        if (o.length > 0 && m && !m.test(o)) {\n            t.preventDefault();\n            return;\n        }\n        typeof I == \"string\" && o.length < I.length && document.dispatchEvent(new Event(\"selectionchange\")), x(o);\n    }, [\n        e,\n        x,\n        I,\n        m\n    ]), at = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        var t;\n        if (l.current) {\n            let o = Math.min(l.current.value.length, e - 1), d = l.current.value.length;\n            (t = l.current) == null || t.setSelectionRange(o, d), L(o), N(d);\n        }\n        Q(!0);\n    }, [\n        e\n    ]), ct = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((t)=>{\n        var g, E;\n        let o = l.current;\n        if (!W && (!J.current.isIOS || !t.clipboardData || !o)) return;\n        let d = t.clipboardData.getData(\"text/plain\"), R = W ? W(d) : d;\n        t.preventDefault();\n        let p = (g = l.current) == null ? void 0 : g.selectionStart, c = (E = l.current) == null ? void 0 : E.selectionEnd, v = (p !== c ? i.slice(0, p) + R + i.slice(c) : i.slice(0, p) + R + i.slice(p)).slice(0, e);\n        if (v.length > 0 && m && !m.test(v)) return;\n        o.value = v, x(v);\n        let C = Math.min(v.length, e - 1), _ = v.length;\n        o.setSelectionRange(C, _), L(C), N(_);\n    }, [\n        e,\n        x,\n        m,\n        i\n    ]), It = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            position: \"relative\",\n            cursor: a.disabled ? \"default\" : \"text\",\n            userSelect: \"none\",\n            WebkitUserSelect: \"none\",\n            pointerEvents: \"none\"\n        }), [\n        a.disabled\n    ]), it = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            position: \"absolute\",\n            inset: 0,\n            width: O.willPushPWMBadge ? `calc(100% + ${O.PWM_BADGE_SPACE_WIDTH})` : \"100%\",\n            clipPath: O.willPushPWMBadge ? `inset(0 ${O.PWM_BADGE_SPACE_WIDTH} 0 0)` : void 0,\n            height: \"100%\",\n            display: \"flex\",\n            textAlign: u,\n            opacity: \"1\",\n            color: \"transparent\",\n            pointerEvents: \"all\",\n            background: \"transparent\",\n            caretColor: \"transparent\",\n            border: \"0 solid transparent\",\n            outline: \"0 solid transparent\",\n            boxShadow: \"none\",\n            lineHeight: \"1\",\n            letterSpacing: \"-.5em\",\n            fontSize: \"var(--root-height)\",\n            fontFamily: \"monospace\",\n            fontVariantNumeric: \"tabular-nums\"\n        }), [\n        O.PWM_BADGE_SPACE_WIDTH,\n        O.willPushPWMBadge,\n        u\n    ]), Mt = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", bt(St({\n            autoComplete: a.autoComplete || \"one-time-code\"\n        }, a), {\n            \"data-input-otp\": !0,\n            \"data-input-otp-placeholder-shown\": i.length === 0 || void 0,\n            \"data-input-otp-mss\": M,\n            \"data-input-otp-mse\": k,\n            inputMode: G,\n            pattern: m == null ? void 0 : m.source,\n            \"aria-placeholder\": D,\n            style: it,\n            maxLength: e,\n            value: i,\n            ref: l,\n            onPaste: (t)=>{\n                var o;\n                ct(t), (o = a.onPaste) == null || o.call(a, t);\n            },\n            onChange: st,\n            onMouseOver: (t)=>{\n                var o;\n                rt(!0), (o = a.onMouseOver) == null || o.call(a, t);\n            },\n            onMouseLeave: (t)=>{\n                var o;\n                rt(!1), (o = a.onMouseLeave) == null || o.call(a, t);\n            },\n            onFocus: (t)=>{\n                var o;\n                at(), (o = a.onFocus) == null || o.call(a, t);\n            },\n            onBlur: (t)=>{\n                var o;\n                Q(!1), (o = a.onBlur) == null || o.call(a, t);\n            }\n        })), [\n        st,\n        at,\n        ct,\n        G,\n        it,\n        e,\n        k,\n        M,\n        a,\n        m == null ? void 0 : m.source,\n        i\n    ]), tt = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            slots: Array.from({\n                length: e\n            }).map((t, o)=>{\n                var c;\n                let d = j && M !== null && k !== null && (M === k && o === M || o >= M && o < k), R = i[o] !== void 0 ? i[o] : null, p = i[0] !== void 0 ? null : (c = D == null ? void 0 : D[o]) != null ? c : null;\n                return {\n                    char: R,\n                    placeholderChar: p,\n                    isActive: d,\n                    hasFakeCaret: d && R === null\n                };\n            }),\n            isFocused: j,\n            isHovering: !a.disabled && ot\n        }), [\n        j,\n        ot,\n        e,\n        k,\n        M,\n        a.disabled,\n        i\n    ]), Ct = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>f ? f(tt) : /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(jt.Provider, {\n            value: tt\n        }, h), [\n        h,\n        tt,\n        f\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, T !== null && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"noscript\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"style\", null, T)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: K,\n        \"data-input-otp-container\": !0,\n        style: It,\n        className: Z\n    }, Ct, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: {\n            position: \"absolute\",\n            inset: 0,\n            pointerEvents: \"none\"\n        }\n    }, Mt)));\n});\nLt.displayName = \"Input\";\nfunction $(r, s) {\n    try {\n        r.insertRule(s);\n    } catch (e) {\n        console.error(\"input-otp could not insert CSS rule:\", s);\n    }\n}\nvar Nt = `\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`;\nvar Kt = \"^\\\\d+$\", Jt = \"^[a-zA-Z]+$\", Qt = \"^[a-zA-Z0-9]+$\";\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/input-otp/dist/index.mjs\n");

/***/ })

};
;