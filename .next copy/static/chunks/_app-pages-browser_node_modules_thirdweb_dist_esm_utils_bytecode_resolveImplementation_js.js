"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_utils_bytecode_resolveImplementation_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getStorageAt.js":
/*!************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_getStorageAt.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_getStorageAt: function() { return /* binding */ eth_getStorageAt; }\n/* harmony export */ });\n/**\n * Retrieves the value stored at a specific position in the storage of a contract.\n * @param request - The EIP1193 request function.\n * @param params - The parameters for the eth_getStorageAt method.\n * @returns A promise that resolves to the value stored at the specified position.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_getStorageAt } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const storageValue = await eth_getStorageAt(rpcRequest, {\n * address: \"0x...\",\n *  position: 0n,\n * });\n * ```\n */ async function eth_getStorageAt(request, params) {\n    var _params_blockTag;\n    return await request({\n        method: \"eth_getStorageAt\",\n        params: [\n            params.address,\n            params.position,\n            (_params_blockTag = params.blockTag) !== null && _params_blockTag !== void 0 ? _params_blockTag : \"latest\"\n        ]\n    });\n} //# sourceMappingURL=eth_getStorageAt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfZ2V0U3RvcmFnZUF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxlQUFlQSxpQkFBaUJDLE9BQU8sRUFBRUMsTUFBTTtRQUdKQTtJQUY5QyxPQUFPLE1BQU1ELFFBQVE7UUFDakJFLFFBQVE7UUFDUkQsUUFBUTtZQUFDQSxPQUFPRSxPQUFPO1lBQUVGLE9BQU9HLFFBQVE7WUFBRUgsQ0FBQUEsbUJBQUFBLE9BQU9JLFFBQVEsY0FBZkosOEJBQUFBLG1CQUFtQjtTQUFTO0lBQzFFO0FBQ0osRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3JwYy9hY3Rpb25zL2V0aF9nZXRTdG9yYWdlQXQuanM/NjIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHJpZXZlcyB0aGUgdmFsdWUgc3RvcmVkIGF0IGEgc3BlY2lmaWMgcG9zaXRpb24gaW4gdGhlIHN0b3JhZ2Ugb2YgYSBjb250cmFjdC5cbiAqIEBwYXJhbSByZXF1ZXN0IC0gVGhlIEVJUDExOTMgcmVxdWVzdCBmdW5jdGlvbi5cbiAqIEBwYXJhbSBwYXJhbXMgLSBUaGUgcGFyYW1ldGVycyBmb3IgdGhlIGV0aF9nZXRTdG9yYWdlQXQgbWV0aG9kLlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHZhbHVlIHN0b3JlZCBhdCB0aGUgc3BlY2lmaWVkIHBvc2l0aW9uLlxuICogQHJwY1xuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBnZXRScGNDbGllbnQsIGV0aF9nZXRTdG9yYWdlQXQgfSBmcm9tIFwidGhpcmR3ZWIvcnBjXCI7XG4gKiBjb25zdCBycGNSZXF1ZXN0ID0gZ2V0UnBjQ2xpZW50KHsgY2xpZW50LCBjaGFpbiB9KTtcbiAqIGNvbnN0IHN0b3JhZ2VWYWx1ZSA9IGF3YWl0IGV0aF9nZXRTdG9yYWdlQXQocnBjUmVxdWVzdCwge1xuICogYWRkcmVzczogXCIweC4uLlwiLFxuICogIHBvc2l0aW9uOiAwbixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBldGhfZ2V0U3RvcmFnZUF0KHJlcXVlc3QsIHBhcmFtcykge1xuICAgIHJldHVybiBhd2FpdCByZXF1ZXN0KHtcbiAgICAgICAgbWV0aG9kOiBcImV0aF9nZXRTdG9yYWdlQXRcIixcbiAgICAgICAgcGFyYW1zOiBbcGFyYW1zLmFkZHJlc3MsIHBhcmFtcy5wb3NpdGlvbiwgcGFyYW1zLmJsb2NrVGFnID8/IFwibGF0ZXN0XCJdLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXRoX2dldFN0b3JhZ2VBdC5qcy5tYXAiXSwibmFtZXMiOlsiZXRoX2dldFN0b3JhZ2VBdCIsInJlcXVlc3QiLCJwYXJhbXMiLCJtZXRob2QiLCJhZGRyZXNzIiwicG9zaXRpb24iLCJibG9ja1RhZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getStorageAt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractMinimalProxyImplementationAddress: function() { return /* binding */ extractMinimalProxyImplementationAddress; }\n/* harmony export */ });\n/**\n * Extracts the implementation address from a given bytecode string if it matches any of the known minimal proxy patterns.\n * @param bytecode The bytecode string to extract the implementation address from.\n * @returns The implementation address as a string if a match is found, otherwise undefined.\n * @example\n * ```ts\n * import { extractMinimalProxyImplementationAddress } from \"thirdweb/utils\";\n * const bytecode = \"0x363d3d373d3d3d363d73...\";\n * const implementationAddress = extractMinimalProxyImplementationAddress(bytecode);\n * ```\n * @utils\n */ function extractMinimalProxyImplementationAddress(bytecode) {\n    if (!bytecode.startsWith(\"0x\")) {\n        // biome-ignore lint/style/noParameterAssign: perf\n        bytecode = \"0x\".concat(bytecode);\n    }\n    // EIP-1167 clone minimal proxy - https://eips.ethereum.org/EIPS/eip-1167\n    if (bytecode.startsWith(\"0x363d3d373d3d3d363d73\")) {\n        const implementationAddress = bytecode.slice(22, 62);\n        return \"0x\".concat(implementationAddress);\n    }\n    // Minimal Proxy with receive() from 0xSplits - https://github.com/0xSplits/splits-contracts/blob/c7b741926ec9746182d0d1e2c4c2046102e5d337/contracts/libraries/Clones.sol\n    if (bytecode.startsWith(\"0x36603057343d5230\")) {\n        // +40 = size of addr\n        const implementationAddress = bytecode.slice(122, 122 + 40);\n        return \"0x\".concat(implementationAddress);\n    }\n    // 0age's minimal proxy - https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n    if (bytecode.startsWith(\"0x3d3d3d3d363d3d37363d73\")) {\n        // +40 = size of addr\n        const implementationAddress = bytecode.slice(24, 24 + 40);\n        return \"0x\".concat(implementationAddress);\n    }\n    // vyper's minimal proxy (uniswap v1) - https://etherscan.io/address/0x09cabec1ead1c0ba254b09efb3ee13841712be14#code\n    if (bytecode.startsWith(\"0x366000600037611000600036600073\")) {\n        const implementationAddress = bytecode.slice(32, 32 + 40);\n        return \"0x\".concat(implementationAddress);\n    }\n    if (bytecode.startsWith(\"0x36600080376020600036600073\")) {\n        const implementationAddress = bytecode.slice(28, 28 + 40);\n        return \"0x\".concat(implementationAddress);\n    }\n    // EIP-7511 minimal proxy with PUSH0 opcode - https://eips.ethereum.org/EIPS/eip-7511\n    if (bytecode.startsWith(\"0x365f5f375f5f365f73\")) {\n        const implementationAddress = bytecode.slice(20, 60);\n        return \"0x\".concat(implementationAddress);\n    }\n    return undefined;\n} //# sourceMappingURL=extractMinimalProxyImplementationAddress.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9ieXRlY29kZS9leHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Q0FXQyxHQUNNLFNBQVNBLHlDQUF5Q0MsUUFBUTtJQUM3RCxJQUFJLENBQUNBLFNBQVNDLFVBQVUsQ0FBQyxPQUFPO1FBQzVCLGtEQUFrRDtRQUNsREQsV0FBVyxLQUFjLE9BQVRBO0lBQ3BCO0lBQ0EseUVBQXlFO0lBQ3pFLElBQUlBLFNBQVNDLFVBQVUsQ0FBQywyQkFBMkI7UUFDL0MsTUFBTUMsd0JBQXdCRixTQUFTRyxLQUFLLENBQUMsSUFBSTtRQUNqRCxPQUFPLEtBQTJCLE9BQXRCRDtJQUNoQjtJQUNBLHlLQUF5SztJQUN6SyxJQUFJRixTQUFTQyxVQUFVLENBQUMsdUJBQXVCO1FBQzNDLHFCQUFxQjtRQUNyQixNQUFNQyx3QkFBd0JGLFNBQVNHLEtBQUssQ0FBQyxLQUFLLE1BQU07UUFDeEQsT0FBTyxLQUEyQixPQUF0QkQ7SUFDaEI7SUFDQSwwRkFBMEY7SUFDMUYsSUFBSUYsU0FBU0MsVUFBVSxDQUFDLDZCQUE2QjtRQUNqRCxxQkFBcUI7UUFDckIsTUFBTUMsd0JBQXdCRixTQUFTRyxLQUFLLENBQUMsSUFBSSxLQUFLO1FBQ3RELE9BQU8sS0FBMkIsT0FBdEJEO0lBQ2hCO0lBQ0Esb0hBQW9IO0lBQ3BILElBQUlGLFNBQVNDLFVBQVUsQ0FBQyxxQ0FBcUM7UUFDekQsTUFBTUMsd0JBQXdCRixTQUFTRyxLQUFLLENBQUMsSUFBSSxLQUFLO1FBQ3RELE9BQU8sS0FBMkIsT0FBdEJEO0lBQ2hCO0lBQ0EsSUFBSUYsU0FBU0MsVUFBVSxDQUFDLGlDQUFpQztRQUNyRCxNQUFNQyx3QkFBd0JGLFNBQVNHLEtBQUssQ0FBQyxJQUFJLEtBQUs7UUFDdEQsT0FBTyxLQUEyQixPQUF0QkQ7SUFDaEI7SUFDQSxxRkFBcUY7SUFDckYsSUFBSUYsU0FBU0MsVUFBVSxDQUFDLHlCQUF5QjtRQUM3QyxNQUFNQyx3QkFBd0JGLFNBQVNHLEtBQUssQ0FBQyxJQUFJO1FBQ2pELE9BQU8sS0FBMkIsT0FBdEJEO0lBQ2hCO0lBQ0EsT0FBT0U7QUFDWCxFQUNBLG9FQUFvRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvYnl0ZWNvZGUvZXh0cmFjdE1pbmltYWxQcm94eUltcGxlbWVudGF0aW9uQWRkcmVzcy5qcz8yZDYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0cmFjdHMgdGhlIGltcGxlbWVudGF0aW9uIGFkZHJlc3MgZnJvbSBhIGdpdmVuIGJ5dGVjb2RlIHN0cmluZyBpZiBpdCBtYXRjaGVzIGFueSBvZiB0aGUga25vd24gbWluaW1hbCBwcm94eSBwYXR0ZXJucy5cbiAqIEBwYXJhbSBieXRlY29kZSBUaGUgYnl0ZWNvZGUgc3RyaW5nIHRvIGV4dHJhY3QgdGhlIGltcGxlbWVudGF0aW9uIGFkZHJlc3MgZnJvbS5cbiAqIEByZXR1cm5zIFRoZSBpbXBsZW1lbnRhdGlvbiBhZGRyZXNzIGFzIGEgc3RyaW5nIGlmIGEgbWF0Y2ggaXMgZm91bmQsIG90aGVyd2lzZSB1bmRlZmluZWQuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MgfSBmcm9tIFwidGhpcmR3ZWIvdXRpbHNcIjtcbiAqIGNvbnN0IGJ5dGVjb2RlID0gXCIweDM2M2QzZDM3M2QzZDNkMzYzZDczLi4uXCI7XG4gKiBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBleHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzKGJ5dGVjb2RlKTtcbiAqIGBgYFxuICogQHV0aWxzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzKGJ5dGVjb2RlKSB7XG4gICAgaWYgKCFieXRlY29kZS5zdGFydHNXaXRoKFwiMHhcIikpIHtcbiAgICAgICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3R5bGUvbm9QYXJhbWV0ZXJBc3NpZ246IHBlcmZcbiAgICAgICAgYnl0ZWNvZGUgPSBgMHgke2J5dGVjb2RlfWA7XG4gICAgfVxuICAgIC8vIEVJUC0xMTY3IGNsb25lIG1pbmltYWwgcHJveHkgLSBodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTExNjdcbiAgICBpZiAoYnl0ZWNvZGUuc3RhcnRzV2l0aChcIjB4MzYzZDNkMzczZDNkM2QzNjNkNzNcIikpIHtcbiAgICAgICAgY29uc3QgaW1wbGVtZW50YXRpb25BZGRyZXNzID0gYnl0ZWNvZGUuc2xpY2UoMjIsIDYyKTtcbiAgICAgICAgcmV0dXJuIGAweCR7aW1wbGVtZW50YXRpb25BZGRyZXNzfWA7XG4gICAgfVxuICAgIC8vIE1pbmltYWwgUHJveHkgd2l0aCByZWNlaXZlKCkgZnJvbSAweFNwbGl0cyAtIGh0dHBzOi8vZ2l0aHViLmNvbS8weFNwbGl0cy9zcGxpdHMtY29udHJhY3RzL2Jsb2IvYzdiNzQxOTI2ZWM5NzQ2MTgyZDBkMWUyYzRjMjA0NjEwMmU1ZDMzNy9jb250cmFjdHMvbGlicmFyaWVzL0Nsb25lcy5zb2xcbiAgICBpZiAoYnl0ZWNvZGUuc3RhcnRzV2l0aChcIjB4MzY2MDMwNTczNDNkNTIzMFwiKSkge1xuICAgICAgICAvLyArNDAgPSBzaXplIG9mIGFkZHJcbiAgICAgICAgY29uc3QgaW1wbGVtZW50YXRpb25BZGRyZXNzID0gYnl0ZWNvZGUuc2xpY2UoMTIyLCAxMjIgKyA0MCk7XG4gICAgICAgIHJldHVybiBgMHgke2ltcGxlbWVudGF0aW9uQWRkcmVzc31gO1xuICAgIH1cbiAgICAvLyAwYWdlJ3MgbWluaW1hbCBwcm94eSAtIGh0dHBzOi8vbWVkaXVtLmNvbS9jb2lubW9ua3MvdGhlLW1vcmUtbWluaW1hbC1wcm94eS01NzU2YWUwOGVlNDhcbiAgICBpZiAoYnl0ZWNvZGUuc3RhcnRzV2l0aChcIjB4M2QzZDNkM2QzNjNkM2QzNzM2M2Q3M1wiKSkge1xuICAgICAgICAvLyArNDAgPSBzaXplIG9mIGFkZHJcbiAgICAgICAgY29uc3QgaW1wbGVtZW50YXRpb25BZGRyZXNzID0gYnl0ZWNvZGUuc2xpY2UoMjQsIDI0ICsgNDApO1xuICAgICAgICByZXR1cm4gYDB4JHtpbXBsZW1lbnRhdGlvbkFkZHJlc3N9YDtcbiAgICB9XG4gICAgLy8gdnlwZXIncyBtaW5pbWFsIHByb3h5ICh1bmlzd2FwIHYxKSAtIGh0dHBzOi8vZXRoZXJzY2FuLmlvL2FkZHJlc3MvMHgwOWNhYmVjMWVhZDFjMGJhMjU0YjA5ZWZiM2VlMTM4NDE3MTJiZTE0I2NvZGVcbiAgICBpZiAoYnl0ZWNvZGUuc3RhcnRzV2l0aChcIjB4MzY2MDAwNjAwMDM3NjExMDAwNjAwMDM2NjAwMDczXCIpKSB7XG4gICAgICAgIGNvbnN0IGltcGxlbWVudGF0aW9uQWRkcmVzcyA9IGJ5dGVjb2RlLnNsaWNlKDMyLCAzMiArIDQwKTtcbiAgICAgICAgcmV0dXJuIGAweCR7aW1wbGVtZW50YXRpb25BZGRyZXNzfWA7XG4gICAgfVxuICAgIGlmIChieXRlY29kZS5zdGFydHNXaXRoKFwiMHgzNjYwMDA4MDM3NjAyMDYwMDAzNjYwMDA3M1wiKSkge1xuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSgyOCwgMjggKyA0MCk7XG4gICAgICAgIHJldHVybiBgMHgke2ltcGxlbWVudGF0aW9uQWRkcmVzc31gO1xuICAgIH1cbiAgICAvLyBFSVAtNzUxMSBtaW5pbWFsIHByb3h5IHdpdGggUFVTSDAgb3Bjb2RlIC0gaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC03NTExXG4gICAgaWYgKGJ5dGVjb2RlLnN0YXJ0c1dpdGgoXCIweDM2NWY1ZjM3NWY1ZjM2NWY3M1wiKSkge1xuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSgyMCwgNjApO1xuICAgICAgICByZXR1cm4gYDB4JHtpbXBsZW1lbnRhdGlvbkFkZHJlc3N9YDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbImV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MiLCJieXRlY29kZSIsInN0YXJ0c1dpdGgiLCJpbXBsZW1lbnRhdGlvbkFkZHJlc3MiLCJzbGljZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveImplementation: function() { return /* binding */ resolveImplementation; }\n/* harmony export */ });\n/* harmony import */ var _contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../contract/actions/get-bytecode.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/actions/get-bytecode.js\");\n/* harmony import */ var _rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../rpc/actions/eth_getStorageAt.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getStorageAt.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../transaction/read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _extractMinimalProxyImplementationAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extractMinimalProxyImplementationAddress.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js\");\n\n\n\n\n\n\n// TODO: move to const exports\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst ZERO_BYTES32 = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n/**\n * Resolves the implementation address and bytecode for a given proxy contract.\n * @param contract The contract to resolve the implementation for.\n * @returns A promise that resolves to an object containing the implementation address and bytecode.\n * @example\n * ```ts\n * import { resolveImplementation } from \"thirdweb\";\n * const implementation = await resolveImplementation(contract);\n * ```\n * @contract\n */ async function resolveImplementation(// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    const [originalBytecode, beacon] = await Promise.all([\n        (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)(contract),\n        getBeaconFromStorageSlot(contract)\n    ]);\n    // check minimal proxy first synchronously\n    const minimalProxyImplementationAddress = (0,_extractMinimalProxyImplementationAddress_js__WEBPACK_IMPORTED_MODULE_1__.extractMinimalProxyImplementationAddress)(originalBytecode);\n    if (minimalProxyImplementationAddress) {\n        return {\n            address: minimalProxyImplementationAddress,\n            bytecode: await (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)({\n                ...contract,\n                address: minimalProxyImplementationAddress\n            })\n        };\n    }\n    // check other proxy types\n    let implementationAddress;\n    if (beacon && beacon !== AddressZero) {\n        // In case of a BeaconProxy, it is setup as BeaconProxy --> Beacon --> Implementation\n        // Hence we replace the proxy address with Beacon address, and continue further resolving below\n        // biome-ignore lint/style/noParameterAssign: we purposefully mutate the contract object here\n        contract = {\n            ...contract,\n            address: beacon\n        };\n        implementationAddress = await getImplementationFromContractCall(contract);\n    } else {\n        implementationAddress = await getImplementationFromStorageSlot(contract);\n    }\n    if (implementationAddress && (0,_address_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(implementationAddress) && implementationAddress !== AddressZero) {\n        const implementationBytecode = await (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)({\n            ...contract,\n            address: implementationAddress\n        });\n        // return the original contract bytecode if the implementation bytecode is empty\n        if (implementationBytecode === \"0x\") {\n            return {\n                address: contract.address,\n                bytecode: originalBytecode\n            };\n        }\n        return {\n            address: implementationAddress,\n            bytecode: implementationBytecode\n        };\n    }\n    return {\n        address: contract.address,\n        bytecode: originalBytecode\n    };\n}\nasync function getBeaconFromStorageSlot(// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    /**\n     * The storage slot of the Beacon as defined in EIP-1967\n     * See https://eips.ethereum.org/EIPS/eip-1967#beacon-contract-address\n     *\n     * bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1))\n     */ const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_3__.getRpcClient)({\n        client: contract.client,\n        chain: contract.chain\n    });\n    try {\n        const proxyStorage = await (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_4__.eth_getStorageAt)(rpcRequest, {\n            address: contract.address,\n            position: \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\"\n        });\n        return \"0x\".concat(proxyStorage.slice(-40));\n    } catch (e) {\n        return undefined;\n    }\n}\nasync function getImplementationFromStorageSlot(// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_3__.getRpcClient)({\n        client: contract.client,\n        chain: contract.chain\n    });\n    try {\n        const proxyStoragePromises = [\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_4__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            }),\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_4__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: // keccak256(\"matic.network.proxy.implementation\") - used in polygon USDT proxy: https://polygonscan.com/address/0xc2132d05d31c914a87c6611c10748aeb04b58e8f#code\n                \"0xbaab7dbf64751104133af04abc7d9979f0fda3b059a322a8333f533d3f32bf7f\"\n            }),\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_4__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: // keccak256(\"org.zeppelinos.proxy.implementation\") - e.g. base USDC proxy: https://basescan.org/address/0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913#code\n                \"0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\"\n            })\n        ];\n        const proxyStorages = await Promise.all(proxyStoragePromises);\n        const proxyStorage = proxyStorages.find((storage)=>storage !== ZERO_BYTES32);\n        return proxyStorage ? \"0x\".concat(proxyStorage.slice(-40)) : AddressZero;\n    } catch (e) {\n        return undefined;\n    }\n}\nconst UPGRADEABLE_PROXY_ABI = {\n    type: \"function\",\n    name: \"implementation\",\n    inputs: [],\n    outputs: [\n        {\n            type: \"address\",\n            name: \"\",\n            internalType: \"address\"\n        }\n    ],\n    stateMutability: \"view\"\n};\nasync function getImplementationFromContractCall(// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    try {\n        return await (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_5__.readContract)({\n            contract,\n            method: UPGRADEABLE_PROXY_ABI\n        });\n    } catch (e) {\n        return undefined;\n    }\n} //# sourceMappingURL=resolveImplementation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js\n"));

/***/ })

}]);