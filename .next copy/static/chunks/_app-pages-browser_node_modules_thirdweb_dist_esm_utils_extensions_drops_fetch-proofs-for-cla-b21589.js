"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_utils_extensions_drops_fetch-proofs-for-cla-b21589"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js":
/*!*****************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MerkleTree: function() { return /* binding */ MerkleTree; }\n/* harmony export */ });\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/encoding/to-bytes.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js\");\n/* harmony import */ var _utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/hashing/keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/uint8-array.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js\");\n// ADAPTED FROM https://github.com/merkletreejs/merkletreejs\n\n\n\n\n/**\n * Class reprensenting a Merkle Tree\n * @namespace MerkleTree\n */ class MerkleTree {\n    getHexRoot() {\n        return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(this.getRoot());\n    }\n    getHexProof(leaf, index) {\n        return this.getProof(leaf, index).map((item)=>(0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.uint8ArrayToHex)(item.data));\n    }\n    // private below\n    createHashes(nodes) {\n        this.layers = [\n            nodes\n        ];\n        while(nodes.length > 1){\n            const layerIndex = this.layers.length;\n            this.layers.push([]);\n            const layerLimit = nodes.length;\n            for(let i = 0; i < nodes.length; i += 2){\n                if (i >= layerLimit) {\n                    // biome-ignore lint/style/noNonNullAssertion: in bounds\n                    this.layers[layerIndex].push(...nodes.slice(layerLimit));\n                    break;\n                }\n                if (i + 1 === nodes.length) {\n                    if (nodes.length % 2 === 1) {\n                        // push copy of hash and continue iteration\n                        // biome-ignore lint/style/noNonNullAssertion: in bounds\n                        this.layers[layerIndex].push(nodes[i]);\n                        continue;\n                    }\n                }\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                const left = nodes[i];\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                const right = i + 1 === nodes.length ? left : nodes[i + 1];\n                const combined = [\n                    left,\n                    right\n                ];\n                combined.sort(_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.compareUint8Arrays);\n                const hash = (0,_utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_2__.keccak256)((0,_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.concatUint8Arrays)(combined), \"bytes\");\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                this.layers[layerIndex].push(hash);\n            }\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            // biome-ignore lint/style/noNonNullAssertion: in bounds\n            nodes = this.layers[layerIndex];\n        }\n    }\n    getRoot() {\n        if (this.layers.length === 0) {\n            return new Uint8Array();\n        }\n        // biome-ignore lint/style/noNonNullAssertion: in bounds\n        return this.layers[this.layers.length - 1][0] || new Uint8Array();\n    }\n    getProof(leaf, index) {\n        if (typeof leaf === \"undefined\") {\n            throw new Error(\"leaf is required\");\n        }\n        // biome-ignore lint/style/noParameterAssign: part of the functionality\n        leaf = leaf instanceof Uint8Array ? leaf : (0,_utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(leaf);\n        const proof = [];\n        if (!Number.isInteger(index)) {\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            index = -1;\n            for(let i = 0; i < this.leaves.length; i++){\n                // biome-ignore lint/style/noNonNullAssertion: within bounds\n                if ((0,_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.areUint8ArraysEqual)(leaf, this.leaves[i])) {\n                    // biome-ignore lint/style/noParameterAssign: part of the functionality\n                    index = i;\n                }\n            }\n        }\n        // @ts-expect-error - issue from original code\n        if (index <= -1) {\n            return [];\n        }\n        for(let i = 0; i < this.layers.length; i++){\n            // biome-ignore lint/style/noNonNullAssertion: in bounds\n            const layer = this.layers[i];\n            // @ts-expect-error - issue from original code\n            const isRightNode = index % 2;\n            const pairIndex = isRightNode ? index - 1 : // @ts-expect-error - issue from original code\n            index + 1;\n            if (pairIndex < layer.length) {\n                proof.push({\n                    position: isRightNode ? \"left\" : \"right\",\n                    data: layer[pairIndex]\n                });\n            }\n            // set index to parent index\n            // @ts-expect-error - issue from original code\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            index = index / 2 | 0;\n        }\n        // @ts-expect-error - issue from original code\n        return proof;\n    }\n    constructor(leaves){\n        Object.defineProperty(this, \"leaves\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"layers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.leaves = leaves.map((el)=>el instanceof Uint8Array ? el : (0,_utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_3__.hexToBytes)(el));\n        this.leaves = this.leaves.sort(_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.compareUint8Arrays);\n        this.createHashes(this.leaves);\n    }\n} //# sourceMappingURL=MerkleTree.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertQuantity: function() { return /* binding */ convertQuantity; }\n/* harmony export */ });\n/* harmony import */ var ox_Solidity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ox/Solidity */ \"(app-pages-browser)/./node_modules/ox/_esm/core/Solidity.js\");\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../units.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/units.js\");\n\n\nfunction convertQuantity(options) {\n    const { quantity, tokenDecimals } = options;\n    if (quantity === \"unlimited\") {\n        return ox_Solidity__WEBPACK_IMPORTED_MODULE_0__.maxUint256;\n    }\n    return (0,_units_js__WEBPACK_IMPORTED_MODULE_1__.toUnits)(quantity, tokenDecimals);\n} //# sourceMappingURL=convert-quantity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9leHRlbnNpb25zL2Ryb3BzL2NvbnZlcnQtcXVhbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ0E7QUFDbEMsU0FBU0UsZ0JBQWdCQyxPQUFPO0lBQ25DLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxhQUFhLEVBQUUsR0FBR0Y7SUFDcEMsSUFBSUMsYUFBYSxhQUFhO1FBQzFCLE9BQU9KLG1EQUFVQTtJQUNyQjtJQUNBLE9BQU9DLGtEQUFPQSxDQUFDRyxVQUFVQztBQUM3QixFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9jb252ZXJ0LXF1YW50aXR5LmpzP2QxMTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWF4VWludDI1NiB9IGZyb20gXCJveC9Tb2xpZGl0eVwiO1xuaW1wb3J0IHsgdG9Vbml0cyB9IGZyb20gXCIuLi8uLi91bml0cy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRRdWFudGl0eShvcHRpb25zKSB7XG4gICAgY29uc3QgeyBxdWFudGl0eSwgdG9rZW5EZWNpbWFscyB9ID0gb3B0aW9ucztcbiAgICBpZiAocXVhbnRpdHkgPT09IFwidW5saW1pdGVkXCIpIHtcbiAgICAgICAgcmV0dXJuIG1heFVpbnQyNTY7XG4gICAgfVxuICAgIHJldHVybiB0b1VuaXRzKHF1YW50aXR5LCB0b2tlbkRlY2ltYWxzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnQtcXVhbnRpdHkuanMubWFwIl0sIm5hbWVzIjpbIm1heFVpbnQyNTYiLCJ0b1VuaXRzIiwiY29udmVydFF1YW50aXR5Iiwib3B0aW9ucyIsInF1YW50aXR5IiwidG9rZW5EZWNpbWFscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchProofsForClaimer: function() { return /* binding */ fetchProofsForClaimer; }\n/* harmony export */ });\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../constants/addresses.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _merkletree_MerkleTree_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../merkletree/MerkleTree.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js\");\n/* harmony import */ var _storage_download_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../storage/download.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/storage/download.js\");\n/* harmony import */ var _convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convert-quantity.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\");\n/* harmony import */ var _hash_entry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hash-entry.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js\");\n\n\n\n\n\nasync function fetchProofsForClaimer(options) {\n    const { contract, merkleTreeUri, claimer } = options;\n    const hashEntryFn = options.hashEntry || _hash_entry_js__WEBPACK_IMPORTED_MODULE_0__.hashEntry;\n    // 2. download snapshot data\n    const response = await (0,_storage_download_js__WEBPACK_IMPORTED_MODULE_1__.download)({\n        client: contract.client,\n        uri: merkleTreeUri\n    });\n    const merkleInfo = await response.json();\n    // 3. download shard data based off the user address\n    const shardId = claimer.slice(2, 2 + merkleInfo.shardNybbles).toLowerCase();\n    const uri = merkleInfo.baseUri.endsWith(\"/\") ? merkleInfo.baseUri : \"\".concat(merkleInfo.baseUri, \"/\");\n    let shardData;\n    try {\n        const constructedShardUri = \"\".concat(uri).concat(shardId, \".json\");\n        const shard = await (0,_storage_download_js__WEBPACK_IMPORTED_MODULE_1__.download)({\n            client: contract.client,\n            uri: constructedShardUri\n        });\n        shardData = await shard.json();\n    } catch (e) {\n        // if the file can't be fetched it means claimer not in merkle tree\n        return null;\n    }\n    // 4. hash all the entries in that shard and construct the sub merkle tree\n    const hashedEntries = await Promise.all(shardData.entries.map(async (entry)=>{\n        return hashEntryFn({\n            entry,\n            chain: contract.chain,\n            client: contract.client,\n            tokenDecimals: options.tokenDecimals\n        });\n    }));\n    // 5. get the proof for the claimer + the sub merkle tree root\n    const tree = new _merkletree_MerkleTree_js__WEBPACK_IMPORTED_MODULE_2__.MerkleTree(hashedEntries);\n    const entry = shardData.entries.find((i)=>i.address.toLowerCase() === claimer.toLowerCase());\n    if (!entry) {\n        return null;\n    }\n    const proof = tree.getHexProof(await hashEntryFn({\n        entry,\n        chain: contract.chain,\n        client: contract.client,\n        tokenDecimals: options.tokenDecimals\n    })).concat(shardData.proofs);\n    // 6. return the proof and the entry data for the contract call\n    const currencyAddress = entry.currencyAddress || _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.ZERO_ADDRESS;\n    const currencyDecimals = await (async ()=>{\n        if ((0,_constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.isNativeTokenAddress)(currencyAddress) || currencyAddress === _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.ZERO_ADDRESS) {\n            return 18;\n        }\n        const [{ getContract }, { decimals: getDecimals }] = await Promise.all([\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../contract/contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/contract.js\")),\n            __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_thirdweb_dist_esm_extensions_erc20_read_decimals_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../extensions/erc20/read/decimals.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js\"))\n        ]);\n        const currencyContract = getContract({\n            address: currencyAddress,\n            chain: contract.chain,\n            client: contract.client\n        });\n        return await getDecimals({\n            contract: currencyContract\n        });\n    })();\n    return {\n        proof,\n        quantityLimitPerWallet: (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: entry.maxClaimable || \"unlimited\",\n            tokenDecimals: options.tokenDecimals\n        }),\n        pricePerToken: (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: entry.price || \"unlimited\",\n            tokenDecimals: currencyDecimals\n        }),\n        currency: currencyAddress\n    };\n} //# sourceMappingURL=fetch-proofs-for-claimers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashEntry: function() { return /* binding */ hashEntry; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodePacked.js\");\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../constants/addresses.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hashing/keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _convert_quantity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./convert-quantity.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\");\n\n\n\n\nasync function hashEntry(options) {\n    const currencyAddress = options.entry.currencyAddress || _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.ZERO_ADDRESS;\n    const currencyDecimals = await (async ()=>{\n        if ((0,_constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.isNativeTokenAddress)(currencyAddress) || currencyAddress === _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.ZERO_ADDRESS) {\n            return 18;\n        }\n        const [{ getContract }, { decimals: getDecimals }] = await Promise.all([\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../contract/contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/contract.js\")),\n            __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_thirdweb_dist_esm_extensions_erc20_read_decimals_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../extensions/erc20/read/decimals.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js\"))\n        ]);\n        const currencyContract = getContract({\n            address: currencyAddress,\n            chain: options.chain,\n            client: options.client\n        });\n        return await getDecimals({\n            contract: currencyContract\n        });\n    })();\n    return (0,_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,viem__WEBPACK_IMPORTED_MODULE_2__.encodePacked)([\n        \"address\",\n        \"uint256\",\n        \"uint256\",\n        \"address\"\n    ], [\n        options.entry.address,\n        (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_3__.convertQuantity)({\n            quantity: options.entry.maxClaimable || \"unlimited\",\n            tokenDecimals: options.tokenDecimals\n        }),\n        (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_3__.convertQuantity)({\n            quantity: options.entry.price || \"unlimited\",\n            tokenDecimals: currencyDecimals\n        }),\n        currencyAddress\n    ]));\n} //# sourceMappingURL=hash-entry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9leHRlbnNpb25zL2Ryb3BzL2hhc2gtZW50cnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBb0M7QUFDa0Q7QUFDL0I7QUFDQztBQUNqRCxlQUFlSyxVQUFVQyxPQUFPO0lBQ25DLE1BQU1DLGtCQUFrQkQsUUFBUUUsS0FBSyxDQUFDRCxlQUFlLElBQUlOLGlFQUFZQTtJQUNyRSxNQUFNUSxtQkFBbUIsTUFBTSxDQUFDO1FBQzVCLElBQUlQLDZFQUFvQkEsQ0FBQ0ssb0JBQ3JCQSxvQkFBb0JOLGlFQUFZQSxFQUFFO1lBQ2xDLE9BQU87UUFDWDtRQUNBLE1BQU0sQ0FBQyxFQUFFUyxXQUFXLEVBQUUsRUFBRSxFQUFFQyxVQUFVQyxXQUFXLEVBQUUsQ0FBQyxHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztZQUNuRSxzTUFBdUM7WUFDdkMsNFRBQW9EO1NBQ3ZEO1FBQ0QsTUFBTUMsbUJBQW1CTCxZQUFZO1lBQ2pDTSxTQUFTVDtZQUNUVSxPQUFPWCxRQUFRVyxLQUFLO1lBQ3BCQyxRQUFRWixRQUFRWSxNQUFNO1FBQzFCO1FBQ0EsT0FBTyxNQUFNTixZQUFZO1lBQUVPLFVBQVVKO1FBQWlCO0lBQzFEO0lBQ0EsT0FBT1osZ0VBQVNBLENBQUNILGtEQUFZQSxDQUFDO1FBQUM7UUFBVztRQUFXO1FBQVc7S0FBVSxFQUFFO1FBQ3hFTSxRQUFRRSxLQUFLLENBQUNRLE9BQU87UUFDckJaLHFFQUFlQSxDQUFDO1lBQ1pnQixVQUFVZCxRQUFRRSxLQUFLLENBQUNhLFlBQVksSUFBSTtZQUN4Q0MsZUFBZWhCLFFBQVFnQixhQUFhO1FBQ3hDO1FBQ0FsQixxRUFBZUEsQ0FBQztZQUNaZ0IsVUFBVWQsUUFBUUUsS0FBSyxDQUFDZSxLQUFLLElBQUk7WUFDakNELGVBQWViO1FBQ25CO1FBQ0FGO0tBQ0g7QUFDTCxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9oYXNoLWVudHJ5LmpzPzIwODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlUGFja2VkIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IFpFUk9fQUREUkVTUywgaXNOYXRpdmVUb2tlbkFkZHJlc3MsIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50cy9hZGRyZXNzZXMuanNcIjtcbmltcG9ydCB7IGtlY2NhazI1NiB9IGZyb20gXCIuLi8uLi9oYXNoaW5nL2tlY2NhazI1Ni5qc1wiO1xuaW1wb3J0IHsgY29udmVydFF1YW50aXR5IH0gZnJvbSBcIi4vY29udmVydC1xdWFudGl0eS5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGhhc2hFbnRyeShvcHRpb25zKSB7XG4gICAgY29uc3QgY3VycmVuY3lBZGRyZXNzID0gb3B0aW9ucy5lbnRyeS5jdXJyZW5jeUFkZHJlc3MgfHwgWkVST19BRERSRVNTO1xuICAgIGNvbnN0IGN1cnJlbmN5RGVjaW1hbHMgPSBhd2FpdCAoYXN5bmMgKCkgPT4ge1xuICAgICAgICBpZiAoaXNOYXRpdmVUb2tlbkFkZHJlc3MoY3VycmVuY3lBZGRyZXNzKSB8fFxuICAgICAgICAgICAgY3VycmVuY3lBZGRyZXNzID09PSBaRVJPX0FERFJFU1MpIHtcbiAgICAgICAgICAgIHJldHVybiAxODtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbeyBnZXRDb250cmFjdCB9LCB7IGRlY2ltYWxzOiBnZXREZWNpbWFscyB9XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIGltcG9ydChcIi4uLy4uLy4uL2NvbnRyYWN0L2NvbnRyYWN0LmpzXCIpLFxuICAgICAgICAgICAgaW1wb3J0KFwiLi4vLi4vLi4vZXh0ZW5zaW9ucy9lcmMyMC9yZWFkL2RlY2ltYWxzLmpzXCIpLFxuICAgICAgICBdKTtcbiAgICAgICAgY29uc3QgY3VycmVuY3lDb250cmFjdCA9IGdldENvbnRyYWN0KHtcbiAgICAgICAgICAgIGFkZHJlc3M6IGN1cnJlbmN5QWRkcmVzcyxcbiAgICAgICAgICAgIGNoYWluOiBvcHRpb25zLmNoYWluLFxuICAgICAgICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhd2FpdCBnZXREZWNpbWFscyh7IGNvbnRyYWN0OiBjdXJyZW5jeUNvbnRyYWN0IH0pO1xuICAgIH0pKCk7XG4gICAgcmV0dXJuIGtlY2NhazI1NihlbmNvZGVQYWNrZWQoW1wiYWRkcmVzc1wiLCBcInVpbnQyNTZcIiwgXCJ1aW50MjU2XCIsIFwiYWRkcmVzc1wiXSwgW1xuICAgICAgICBvcHRpb25zLmVudHJ5LmFkZHJlc3MsXG4gICAgICAgIGNvbnZlcnRRdWFudGl0eSh7XG4gICAgICAgICAgICBxdWFudGl0eTogb3B0aW9ucy5lbnRyeS5tYXhDbGFpbWFibGUgfHwgXCJ1bmxpbWl0ZWRcIixcbiAgICAgICAgICAgIHRva2VuRGVjaW1hbHM6IG9wdGlvbnMudG9rZW5EZWNpbWFscyxcbiAgICAgICAgfSksXG4gICAgICAgIGNvbnZlcnRRdWFudGl0eSh7XG4gICAgICAgICAgICBxdWFudGl0eTogb3B0aW9ucy5lbnRyeS5wcmljZSB8fCBcInVubGltaXRlZFwiLFxuICAgICAgICAgICAgdG9rZW5EZWNpbWFsczogY3VycmVuY3lEZWNpbWFscyxcbiAgICAgICAgfSksXG4gICAgICAgIGN1cnJlbmN5QWRkcmVzcyxcbiAgICBdKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLWVudHJ5LmpzLm1hcCJdLCJuYW1lcyI6WyJlbmNvZGVQYWNrZWQiLCJaRVJPX0FERFJFU1MiLCJpc05hdGl2ZVRva2VuQWRkcmVzcyIsImtlY2NhazI1NiIsImNvbnZlcnRRdWFudGl0eSIsImhhc2hFbnRyeSIsIm9wdGlvbnMiLCJjdXJyZW5jeUFkZHJlc3MiLCJlbnRyeSIsImN1cnJlbmN5RGVjaW1hbHMiLCJnZXRDb250cmFjdCIsImRlY2ltYWxzIiwiZ2V0RGVjaW1hbHMiLCJQcm9taXNlIiwiYWxsIiwiY3VycmVuY3lDb250cmFjdCIsImFkZHJlc3MiLCJjaGFpbiIsImNsaWVudCIsImNvbnRyYWN0IiwicXVhbnRpdHkiLCJtYXhDbGFpbWFibGUiLCJ0b2tlbkRlY2ltYWxzIiwicHJpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodePacked.js":
/*!**********************************************************!*\
  !*** ./node_modules/viem/_esm/utils/abi/encodePacked.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacked: function() { return /* binding */ encodePacked; }\n/* harmony export */ });\n/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors/abi.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/abi.js\");\n/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors/address.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/address.js\");\n/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../address/isAddress.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/address/isAddress.js\");\n/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/concat.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/concat.js\");\n/* harmony import */ var _data_pad_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../data/pad.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/pad.js\");\n/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../encoding/toHex.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../regex.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/regex.js\");\n\n\n\n\n\n\n\nfunction encodePacked(types, values) {\n    if (types.length !== values.length) throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.AbiEncodingLengthMismatchError({\n        expectedLength: types.length,\n        givenLength: values.length\n    });\n    const data = [];\n    for(let i = 0; i < types.length; i++){\n        const type = types[i];\n        const value = values[i];\n        data.push(encode(type, value));\n    }\n    return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_1__.concatHex)(data);\n}\nfunction encode(type, value) {\n    let isArray = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    if (type === \"address\") {\n        const address = value;\n        if (!(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address)) throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError({\n            address\n        });\n        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)(address.toLowerCase(), {\n            size: isArray ? 32 : null\n        });\n    }\n    if (type === \"string\") return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.stringToHex)(value);\n    if (type === \"bytes\") return value;\n    if (type === \"bool\") return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.boolToHex)(value), {\n        size: isArray ? 32 : 1\n    });\n    const intMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.integerRegex);\n    if (intMatch) {\n        const [_type, baseType, bits = \"256\"] = intMatch;\n        const size = Number.parseInt(bits) / 8;\n        return (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_5__.numberToHex)(value, {\n            size: isArray ? 32 : size,\n            signed: baseType === \"int\"\n        });\n    }\n    const bytesMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.bytesRegex);\n    if (bytesMatch) {\n        const [_type, size] = bytesMatch;\n        if (Number.parseInt(size) !== (value.length - 2) / 2) throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size),\n            givenSize: (value.length - 2) / 2\n        });\n        return (0,_data_pad_js__WEBPACK_IMPORTED_MODULE_4__.pad)(value, {\n            dir: \"right\",\n            size: isArray ? 32 : null\n        });\n    }\n    const arrayMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_6__.arrayRegex);\n    if (arrayMatch && Array.isArray(value)) {\n        const [_type, childType] = arrayMatch;\n        const data = [];\n        for(let i = 0; i < value.length; i++){\n            data.push(encode(childType, value[i], true));\n        }\n        if (data.length === 0) return \"0x\";\n        return (0,_data_concat_js__WEBPACK_IMPORTED_MODULE_1__.concatHex)(data);\n    }\n    throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_0__.UnsupportedPackedAbiType(type);\n} //# sourceMappingURL=encodePacked.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vdXRpbHMvYWJpL2VuY29kZVBhY2tlZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3SDtBQUN6RDtBQUNYO0FBQ047QUFDVDtBQUN1QztBQUNUO0FBQzVELFNBQVNhLGFBQWFDLEtBQUssRUFBRUMsTUFBTTtJQUN0QyxJQUFJRCxNQUFNRSxNQUFNLEtBQUtELE9BQU9DLE1BQU0sRUFDOUIsTUFBTSxJQUFJaEIsMEVBQThCQSxDQUFDO1FBQ3JDaUIsZ0JBQWdCSCxNQUFNRSxNQUFNO1FBQzVCRSxhQUFhSCxPQUFPQyxNQUFNO0lBQzlCO0lBQ0osTUFBTUcsT0FBTyxFQUFFO0lBQ2YsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlOLE1BQU1FLE1BQU0sRUFBRUksSUFBSztRQUNuQyxNQUFNQyxPQUFPUCxLQUFLLENBQUNNLEVBQUU7UUFDckIsTUFBTUUsUUFBUVAsTUFBTSxDQUFDSyxFQUFFO1FBQ3ZCRCxLQUFLSSxJQUFJLENBQUNDLE9BQU9ILE1BQU1DO0lBQzNCO0lBQ0EsT0FBT2pCLDBEQUFTQSxDQUFDYztBQUNyQjtBQUNBLFNBQVNLLE9BQU9ILElBQUksRUFBRUMsS0FBSztRQUFFRyxVQUFBQSxpRUFBVTtJQUNuQyxJQUFJSixTQUFTLFdBQVc7UUFDcEIsTUFBTUssVUFBVUo7UUFDaEIsSUFBSSxDQUFDbEIsZ0VBQVNBLENBQUNzQixVQUNYLE1BQU0sSUFBSXZCLG1FQUFtQkEsQ0FBQztZQUFFdUI7UUFBUTtRQUM1QyxPQUFPcEIsaURBQUdBLENBQUNvQixRQUFRQyxXQUFXLElBQUk7WUFDOUJDLE1BQU1ILFVBQVUsS0FBSztRQUN6QjtJQUNKO0lBQ0EsSUFBSUosU0FBUyxVQUNULE9BQU9aLCtEQUFXQSxDQUFDYTtJQUN2QixJQUFJRCxTQUFTLFNBQ1QsT0FBT0M7SUFDWCxJQUFJRCxTQUFTLFFBQ1QsT0FBT2YsaURBQUdBLENBQUNDLDZEQUFTQSxDQUFDZSxRQUFRO1FBQUVNLE1BQU1ILFVBQVUsS0FBSztJQUFFO0lBQzFELE1BQU1JLFdBQVdSLEtBQUtTLEtBQUssQ0FBQ2xCLG1EQUFZQTtJQUN4QyxJQUFJaUIsVUFBVTtRQUNWLE1BQU0sQ0FBQ0UsT0FBT0MsVUFBVUMsT0FBTyxLQUFLLENBQUMsR0FBR0o7UUFDeEMsTUFBTUQsT0FBT00sT0FBT0MsUUFBUSxDQUFDRixRQUFRO1FBQ3JDLE9BQU96QiwrREFBV0EsQ0FBQ2MsT0FBTztZQUN0Qk0sTUFBTUgsVUFBVSxLQUFLRztZQUNyQlEsUUFBUUosYUFBYTtRQUN6QjtJQUNKO0lBQ0EsTUFBTUssYUFBYWhCLEtBQUtTLEtBQUssQ0FBQ25CLGlEQUFVQTtJQUN4QyxJQUFJMEIsWUFBWTtRQUNaLE1BQU0sQ0FBQ04sT0FBT0gsS0FBSyxHQUFHUztRQUN0QixJQUFJSCxPQUFPQyxRQUFRLENBQUNQLFVBQVUsQ0FBQ04sTUFBTU4sTUFBTSxHQUFHLEtBQUssR0FDL0MsTUFBTSxJQUFJZixrRUFBc0JBLENBQUM7WUFDN0JxQyxjQUFjSixPQUFPQyxRQUFRLENBQUNQO1lBQzlCVyxXQUFXLENBQUNqQixNQUFNTixNQUFNLEdBQUcsS0FBSztRQUNwQztRQUNKLE9BQU9WLGlEQUFHQSxDQUFDZ0IsT0FBTztZQUFFa0IsS0FBSztZQUFTWixNQUFNSCxVQUFVLEtBQUs7UUFBSztJQUNoRTtJQUNBLE1BQU1nQixhQUFhcEIsS0FBS1MsS0FBSyxDQUFDcEIsaURBQVVBO0lBQ3hDLElBQUkrQixjQUFjQyxNQUFNakIsT0FBTyxDQUFDSCxRQUFRO1FBQ3BDLE1BQU0sQ0FBQ1MsT0FBT1ksVUFBVSxHQUFHRjtRQUMzQixNQUFNdEIsT0FBTyxFQUFFO1FBQ2YsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlFLE1BQU1OLE1BQU0sRUFBRUksSUFBSztZQUNuQ0QsS0FBS0ksSUFBSSxDQUFDQyxPQUFPbUIsV0FBV3JCLEtBQUssQ0FBQ0YsRUFBRSxFQUFFO1FBQzFDO1FBQ0EsSUFBSUQsS0FBS0gsTUFBTSxLQUFLLEdBQ2hCLE9BQU87UUFDWCxPQUFPWCwwREFBU0EsQ0FBQ2M7SUFDckI7SUFDQSxNQUFNLElBQUlqQixvRUFBd0JBLENBQUNtQjtBQUN2QyxFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL3V0aWxzL2FiaS9lbmNvZGVQYWNrZWQuanM/N2ZiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBYmlFbmNvZGluZ0xlbmd0aE1pc21hdGNoRXJyb3IsIEJ5dGVzU2l6ZU1pc21hdGNoRXJyb3IsIFVuc3VwcG9ydGVkUGFja2VkQWJpVHlwZSwgfSBmcm9tICcuLi8uLi9lcnJvcnMvYWJpLmpzJztcbmltcG9ydCB7IEludmFsaWRBZGRyZXNzRXJyb3IsIH0gZnJvbSAnLi4vLi4vZXJyb3JzL2FkZHJlc3MuanMnO1xuaW1wb3J0IHsgaXNBZGRyZXNzIH0gZnJvbSAnLi4vYWRkcmVzcy9pc0FkZHJlc3MuanMnO1xuaW1wb3J0IHsgY29uY2F0SGV4IH0gZnJvbSAnLi4vZGF0YS9jb25jYXQuanMnO1xuaW1wb3J0IHsgcGFkIH0gZnJvbSAnLi4vZGF0YS9wYWQuanMnO1xuaW1wb3J0IHsgYm9vbFRvSGV4LCBudW1iZXJUb0hleCwgc3RyaW5nVG9IZXgsIH0gZnJvbSAnLi4vZW5jb2RpbmcvdG9IZXguanMnO1xuaW1wb3J0IHsgYXJyYXlSZWdleCwgYnl0ZXNSZWdleCwgaW50ZWdlclJlZ2V4IH0gZnJvbSAnLi4vcmVnZXguanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVBhY2tlZCh0eXBlcywgdmFsdWVzKSB7XG4gICAgaWYgKHR5cGVzLmxlbmd0aCAhPT0gdmFsdWVzLmxlbmd0aClcbiAgICAgICAgdGhyb3cgbmV3IEFiaUVuY29kaW5nTGVuZ3RoTWlzbWF0Y2hFcnJvcih7XG4gICAgICAgICAgICBleHBlY3RlZExlbmd0aDogdHlwZXMubGVuZ3RoLFxuICAgICAgICAgICAgZ2l2ZW5MZW5ndGg6IHZhbHVlcy5sZW5ndGgsXG4gICAgICAgIH0pO1xuICAgIGNvbnN0IGRhdGEgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHR5cGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlc1tpXTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB2YWx1ZXNbaV07XG4gICAgICAgIGRhdGEucHVzaChlbmNvZGUodHlwZSwgdmFsdWUpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmNhdEhleChkYXRhKTtcbn1cbmZ1bmN0aW9uIGVuY29kZSh0eXBlLCB2YWx1ZSwgaXNBcnJheSA9IGZhbHNlKSB7XG4gICAgaWYgKHR5cGUgPT09ICdhZGRyZXNzJykge1xuICAgICAgICBjb25zdCBhZGRyZXNzID0gdmFsdWU7XG4gICAgICAgIGlmICghaXNBZGRyZXNzKGFkZHJlc3MpKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRBZGRyZXNzRXJyb3IoeyBhZGRyZXNzIH0pO1xuICAgICAgICByZXR1cm4gcGFkKGFkZHJlc3MudG9Mb3dlckNhc2UoKSwge1xuICAgICAgICAgICAgc2l6ZTogaXNBcnJheSA/IDMyIDogbnVsbCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIHN0cmluZ1RvSGV4KHZhbHVlKTtcbiAgICBpZiAodHlwZSA9PT0gJ2J5dGVzJylcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIGlmICh0eXBlID09PSAnYm9vbCcpXG4gICAgICAgIHJldHVybiBwYWQoYm9vbFRvSGV4KHZhbHVlKSwgeyBzaXplOiBpc0FycmF5ID8gMzIgOiAxIH0pO1xuICAgIGNvbnN0IGludE1hdGNoID0gdHlwZS5tYXRjaChpbnRlZ2VyUmVnZXgpO1xuICAgIGlmIChpbnRNYXRjaCkge1xuICAgICAgICBjb25zdCBbX3R5cGUsIGJhc2VUeXBlLCBiaXRzID0gJzI1NiddID0gaW50TWF0Y2g7XG4gICAgICAgIGNvbnN0IHNpemUgPSBOdW1iZXIucGFyc2VJbnQoYml0cykgLyA4O1xuICAgICAgICByZXR1cm4gbnVtYmVyVG9IZXgodmFsdWUsIHtcbiAgICAgICAgICAgIHNpemU6IGlzQXJyYXkgPyAzMiA6IHNpemUsXG4gICAgICAgICAgICBzaWduZWQ6IGJhc2VUeXBlID09PSAnaW50JyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IGJ5dGVzTWF0Y2ggPSB0eXBlLm1hdGNoKGJ5dGVzUmVnZXgpO1xuICAgIGlmIChieXRlc01hdGNoKSB7XG4gICAgICAgIGNvbnN0IFtfdHlwZSwgc2l6ZV0gPSBieXRlc01hdGNoO1xuICAgICAgICBpZiAoTnVtYmVyLnBhcnNlSW50KHNpemUpICE9PSAodmFsdWUubGVuZ3RoIC0gMikgLyAyKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEJ5dGVzU2l6ZU1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgICAgIGV4cGVjdGVkU2l6ZTogTnVtYmVyLnBhcnNlSW50KHNpemUpLFxuICAgICAgICAgICAgICAgIGdpdmVuU2l6ZTogKHZhbHVlLmxlbmd0aCAtIDIpIC8gMixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcGFkKHZhbHVlLCB7IGRpcjogJ3JpZ2h0Jywgc2l6ZTogaXNBcnJheSA/IDMyIDogbnVsbCB9KTtcbiAgICB9XG4gICAgY29uc3QgYXJyYXlNYXRjaCA9IHR5cGUubWF0Y2goYXJyYXlSZWdleCk7XG4gICAgaWYgKGFycmF5TWF0Y2ggJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgY29uc3QgW190eXBlLCBjaGlsZFR5cGVdID0gYXJyYXlNYXRjaDtcbiAgICAgICAgY29uc3QgZGF0YSA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBkYXRhLnB1c2goZW5jb2RlKGNoaWxkVHlwZSwgdmFsdWVbaV0sIHRydWUpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPT09IDApXG4gICAgICAgICAgICByZXR1cm4gJzB4JztcbiAgICAgICAgcmV0dXJuIGNvbmNhdEhleChkYXRhKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFVuc3VwcG9ydGVkUGFja2VkQWJpVHlwZSh0eXBlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVuY29kZVBhY2tlZC5qcy5tYXAiXSwibmFtZXMiOlsiQWJpRW5jb2RpbmdMZW5ndGhNaXNtYXRjaEVycm9yIiwiQnl0ZXNTaXplTWlzbWF0Y2hFcnJvciIsIlVuc3VwcG9ydGVkUGFja2VkQWJpVHlwZSIsIkludmFsaWRBZGRyZXNzRXJyb3IiLCJpc0FkZHJlc3MiLCJjb25jYXRIZXgiLCJwYWQiLCJib29sVG9IZXgiLCJudW1iZXJUb0hleCIsInN0cmluZ1RvSGV4IiwiYXJyYXlSZWdleCIsImJ5dGVzUmVnZXgiLCJpbnRlZ2VyUmVnZXgiLCJlbmNvZGVQYWNrZWQiLCJ0eXBlcyIsInZhbHVlcyIsImxlbmd0aCIsImV4cGVjdGVkTGVuZ3RoIiwiZ2l2ZW5MZW5ndGgiLCJkYXRhIiwiaSIsInR5cGUiLCJ2YWx1ZSIsInB1c2giLCJlbmNvZGUiLCJpc0FycmF5IiwiYWRkcmVzcyIsInRvTG93ZXJDYXNlIiwic2l6ZSIsImludE1hdGNoIiwibWF0Y2giLCJfdHlwZSIsImJhc2VUeXBlIiwiYml0cyIsIk51bWJlciIsInBhcnNlSW50Iiwic2lnbmVkIiwiYnl0ZXNNYXRjaCIsImV4cGVjdGVkU2l6ZSIsImdpdmVuU2l6ZSIsImRpciIsImFycmF5TWF0Y2giLCJBcnJheSIsImNoaWxkVHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodePacked.js\n"));

/***/ })

}]);