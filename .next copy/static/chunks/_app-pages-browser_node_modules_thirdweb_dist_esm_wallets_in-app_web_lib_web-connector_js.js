"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_in-app_web_lib_web-connector_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/create-login-message.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/auth/core/create-login-message.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLoginMessage: function() { return /* binding */ createLoginMessage; }\n/* harmony export */ });\n/**\n * Create an EIP-4361 & CAIP-122 compliant message to sign based on the login payload\n * @param payload - The login payload containing the necessary information.\n * @returns The generated login message.\n * @internal\n */ function createLoginMessage(payload) {\n    const typeField = \"Ethereum\";\n    const header = \"\".concat(payload.domain, \" wants you to sign in with your \").concat(typeField, \" account:\");\n    let prefix = [\n        header,\n        payload.address\n    ].join(\"\\n\");\n    prefix = [\n        prefix,\n        payload.statement\n    ].join(\"\\n\\n\");\n    if (payload.statement) {\n        prefix += \"\\n\";\n    }\n    const suffixArray = [];\n    if (payload.uri) {\n        const uriField = \"URI: \".concat(payload.uri);\n        suffixArray.push(uriField);\n    }\n    const versionField = \"Version: \".concat(payload.version);\n    suffixArray.push(versionField);\n    if (payload.chain_id) {\n        const chainField = \"Chain ID: \".concat(payload.chain_id) || 0;\n        suffixArray.push(chainField);\n    }\n    const nonceField = \"Nonce: \".concat(payload.nonce);\n    suffixArray.push(nonceField);\n    const issuedAtField = \"Issued At: \".concat(payload.issued_at);\n    suffixArray.push(issuedAtField);\n    const expiryField = \"Expiration Time: \".concat(payload.expiration_time);\n    suffixArray.push(expiryField);\n    if (payload.invalid_before) {\n        const invalidBeforeField = \"Not Before: \".concat(payload.invalid_before);\n        suffixArray.push(invalidBeforeField);\n    }\n    if (payload.resources) {\n        suffixArray.push([\n            \"Resources:\",\n            ...payload.resources.map((x)=>\"- \".concat(x))\n        ].join(\"\\n\"));\n    }\n    const suffix = suffixArray.join(\"\\n\");\n    return [\n        prefix,\n        suffix\n    ].join(\"\\n\");\n} //# sourceMappingURL=create-login-message.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9hdXRoL2NvcmUvY3JlYXRlLWxvZ2luLW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBQ00sU0FBU0EsbUJBQW1CQyxPQUFPO0lBQ3RDLE1BQU1DLFlBQVk7SUFDbEIsTUFBTUMsU0FBUyxHQUFvREQsT0FBakRELFFBQVFHLE1BQU0sRUFBQyxvQ0FBNEMsT0FBVkYsV0FBVTtJQUM3RSxJQUFJRyxTQUFTO1FBQUNGO1FBQVFGLFFBQVFLLE9BQU87S0FBQyxDQUFDQyxJQUFJLENBQUM7SUFDNUNGLFNBQVM7UUFBQ0E7UUFBUUosUUFBUU8sU0FBUztLQUFDLENBQUNELElBQUksQ0FBQztJQUMxQyxJQUFJTixRQUFRTyxTQUFTLEVBQUU7UUFDbkJILFVBQVU7SUFDZDtJQUNBLE1BQU1JLGNBQWMsRUFBRTtJQUN0QixJQUFJUixRQUFRUyxHQUFHLEVBQUU7UUFDYixNQUFNQyxXQUFXLFFBQW9CLE9BQVpWLFFBQVFTLEdBQUc7UUFDcENELFlBQVlHLElBQUksQ0FBQ0Q7SUFDckI7SUFDQSxNQUFNRSxlQUFlLFlBQTRCLE9BQWhCWixRQUFRYSxPQUFPO0lBQ2hETCxZQUFZRyxJQUFJLENBQUNDO0lBQ2pCLElBQUlaLFFBQVFjLFFBQVEsRUFBRTtRQUNsQixNQUFNQyxhQUFhLGFBQThCLE9BQWpCZixRQUFRYyxRQUFRLEtBQU0sQ0FBRztRQUN6RE4sWUFBWUcsSUFBSSxDQUFDSTtJQUNyQjtJQUNBLE1BQU1DLGFBQWEsVUFBd0IsT0FBZGhCLFFBQVFpQixLQUFLO0lBQzFDVCxZQUFZRyxJQUFJLENBQUNLO0lBQ2pCLE1BQU1FLGdCQUFnQixjQUFnQyxPQUFsQmxCLFFBQVFtQixTQUFTO0lBQ3JEWCxZQUFZRyxJQUFJLENBQUNPO0lBQ2pCLE1BQU1FLGNBQWMsb0JBQTRDLE9BQXhCcEIsUUFBUXFCLGVBQWU7SUFDL0RiLFlBQVlHLElBQUksQ0FBQ1M7SUFDakIsSUFBSXBCLFFBQVFzQixjQUFjLEVBQUU7UUFDeEIsTUFBTUMscUJBQXFCLGVBQXNDLE9BQXZCdkIsUUFBUXNCLGNBQWM7UUFDaEVkLFlBQVlHLElBQUksQ0FBQ1k7SUFDckI7SUFDQSxJQUFJdkIsUUFBUXdCLFNBQVMsRUFBRTtRQUNuQmhCLFlBQVlHLElBQUksQ0FBQztZQUFDO2VBQWlCWCxRQUFRd0IsU0FBUyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsSUFBTSxLQUFPLE9BQUZBO1NBQUssQ0FBQ3BCLElBQUksQ0FBQztJQUNwRjtJQUNBLE1BQU1xQixTQUFTbkIsWUFBWUYsSUFBSSxDQUFDO0lBQ2hDLE9BQU87UUFBQ0Y7UUFBUXVCO0tBQU8sQ0FBQ3JCLElBQUksQ0FBQztBQUNqQyxFQUNBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vYXV0aC9jb3JlL2NyZWF0ZS1sb2dpbi1tZXNzYWdlLmpzP2M1ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGUgYW4gRUlQLTQzNjEgJiBDQUlQLTEyMiBjb21wbGlhbnQgbWVzc2FnZSB0byBzaWduIGJhc2VkIG9uIHRoZSBsb2dpbiBwYXlsb2FkXG4gKiBAcGFyYW0gcGF5bG9hZCAtIFRoZSBsb2dpbiBwYXlsb2FkIGNvbnRhaW5pbmcgdGhlIG5lY2Vzc2FyeSBpbmZvcm1hdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBnZW5lcmF0ZWQgbG9naW4gbWVzc2FnZS5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTG9naW5NZXNzYWdlKHBheWxvYWQpIHtcbiAgICBjb25zdCB0eXBlRmllbGQgPSBcIkV0aGVyZXVtXCI7XG4gICAgY29uc3QgaGVhZGVyID0gYCR7cGF5bG9hZC5kb21haW59IHdhbnRzIHlvdSB0byBzaWduIGluIHdpdGggeW91ciAke3R5cGVGaWVsZH0gYWNjb3VudDpgO1xuICAgIGxldCBwcmVmaXggPSBbaGVhZGVyLCBwYXlsb2FkLmFkZHJlc3NdLmpvaW4oXCJcXG5cIik7XG4gICAgcHJlZml4ID0gW3ByZWZpeCwgcGF5bG9hZC5zdGF0ZW1lbnRdLmpvaW4oXCJcXG5cXG5cIik7XG4gICAgaWYgKHBheWxvYWQuc3RhdGVtZW50KSB7XG4gICAgICAgIHByZWZpeCArPSBcIlxcblwiO1xuICAgIH1cbiAgICBjb25zdCBzdWZmaXhBcnJheSA9IFtdO1xuICAgIGlmIChwYXlsb2FkLnVyaSkge1xuICAgICAgICBjb25zdCB1cmlGaWVsZCA9IGBVUkk6ICR7cGF5bG9hZC51cml9YDtcbiAgICAgICAgc3VmZml4QXJyYXkucHVzaCh1cmlGaWVsZCk7XG4gICAgfVxuICAgIGNvbnN0IHZlcnNpb25GaWVsZCA9IGBWZXJzaW9uOiAke3BheWxvYWQudmVyc2lvbn1gO1xuICAgIHN1ZmZpeEFycmF5LnB1c2godmVyc2lvbkZpZWxkKTtcbiAgICBpZiAocGF5bG9hZC5jaGFpbl9pZCkge1xuICAgICAgICBjb25zdCBjaGFpbkZpZWxkID0gYENoYWluIElEOiAke3BheWxvYWQuY2hhaW5faWR9YCB8fCBcIjFcIjtcbiAgICAgICAgc3VmZml4QXJyYXkucHVzaChjaGFpbkZpZWxkKTtcbiAgICB9XG4gICAgY29uc3Qgbm9uY2VGaWVsZCA9IGBOb25jZTogJHtwYXlsb2FkLm5vbmNlfWA7XG4gICAgc3VmZml4QXJyYXkucHVzaChub25jZUZpZWxkKTtcbiAgICBjb25zdCBpc3N1ZWRBdEZpZWxkID0gYElzc3VlZCBBdDogJHtwYXlsb2FkLmlzc3VlZF9hdH1gO1xuICAgIHN1ZmZpeEFycmF5LnB1c2goaXNzdWVkQXRGaWVsZCk7XG4gICAgY29uc3QgZXhwaXJ5RmllbGQgPSBgRXhwaXJhdGlvbiBUaW1lOiAke3BheWxvYWQuZXhwaXJhdGlvbl90aW1lfWA7XG4gICAgc3VmZml4QXJyYXkucHVzaChleHBpcnlGaWVsZCk7XG4gICAgaWYgKHBheWxvYWQuaW52YWxpZF9iZWZvcmUpIHtcbiAgICAgICAgY29uc3QgaW52YWxpZEJlZm9yZUZpZWxkID0gYE5vdCBCZWZvcmU6ICR7cGF5bG9hZC5pbnZhbGlkX2JlZm9yZX1gO1xuICAgICAgICBzdWZmaXhBcnJheS5wdXNoKGludmFsaWRCZWZvcmVGaWVsZCk7XG4gICAgfVxuICAgIGlmIChwYXlsb2FkLnJlc291cmNlcykge1xuICAgICAgICBzdWZmaXhBcnJheS5wdXNoKFtcIlJlc291cmNlczpcIiwgLi4ucGF5bG9hZC5yZXNvdXJjZXMubWFwKCh4KSA9PiBgLSAke3h9YCldLmpvaW4oXCJcXG5cIikpO1xuICAgIH1cbiAgICBjb25zdCBzdWZmaXggPSBzdWZmaXhBcnJheS5qb2luKFwiXFxuXCIpO1xuICAgIHJldHVybiBbcHJlZml4LCBzdWZmaXhdLmpvaW4oXCJcXG5cIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGUtbG9naW4tbWVzc2FnZS5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlTG9naW5NZXNzYWdlIiwicGF5bG9hZCIsInR5cGVGaWVsZCIsImhlYWRlciIsImRvbWFpbiIsInByZWZpeCIsImFkZHJlc3MiLCJqb2luIiwic3RhdGVtZW50Iiwic3VmZml4QXJyYXkiLCJ1cmkiLCJ1cmlGaWVsZCIsInB1c2giLCJ2ZXJzaW9uRmllbGQiLCJ2ZXJzaW9uIiwiY2hhaW5faWQiLCJjaGFpbkZpZWxkIiwibm9uY2VGaWVsZCIsIm5vbmNlIiwiaXNzdWVkQXRGaWVsZCIsImlzc3VlZF9hdCIsImV4cGlyeUZpZWxkIiwiZXhwaXJhdGlvbl90aW1lIiwiaW52YWxpZF9iZWZvcmUiLCJpbnZhbGlkQmVmb3JlRmllbGQiLCJyZXNvdXJjZXMiLCJtYXAiLCJ4Iiwic3VmZml4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/create-login-message.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/sign-login-payload.js":
/*!************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/auth/core/sign-login-payload.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signLoginPayload: function() { return /* binding */ signLoginPayload; }\n/* harmony export */ });\n/* harmony import */ var _create_login_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-login-message.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/create-login-message.js\");\n\n/**\n * Signs the login payload using the provided account.\n * @param options - The options for signing the login payload.\n * @returns An object containing the signature and the payload.\n * @example\n * ```ts\n * import { signLoginPayload } from 'thirdweb/auth';\n *\n * const { signature, payload } = await signLoginPayload({\n *  payload: loginPayload,\n *  account: account,\n * });\n * ```\n * @auth\n */ async function signLoginPayload(options) {\n    const { payload, account } = options;\n    const signature = await account.signMessage({\n        message: (0,_create_login_message_js__WEBPACK_IMPORTED_MODULE_0__.createLoginMessage)(payload)\n    });\n    return {\n        signature,\n        payload\n    };\n} //# sourceMappingURL=sign-login-payload.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9hdXRoL2NvcmUvc2lnbi1sb2dpbi1wYXlsb2FkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStEO0FBQy9EOzs7Ozs7Ozs7Ozs7OztDQWNDLEdBQ00sZUFBZUMsaUJBQWlCQyxPQUFPO0lBQzFDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUUsR0FBR0Y7SUFDN0IsTUFBTUcsWUFBWSxNQUFNRCxRQUFRRSxXQUFXLENBQUM7UUFDeENDLFNBQVNQLDRFQUFrQkEsQ0FBQ0c7SUFDaEM7SUFDQSxPQUFPO1FBQ0hFO1FBQ0FGO0lBQ0o7QUFDSixFQUNBLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vYXV0aC9jb3JlL3NpZ24tbG9naW4tcGF5bG9hZC5qcz8yMjE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUxvZ2luTWVzc2FnZSB9IGZyb20gXCIuL2NyZWF0ZS1sb2dpbi1tZXNzYWdlLmpzXCI7XG4vKipcbiAqIFNpZ25zIHRoZSBsb2dpbiBwYXlsb2FkIHVzaW5nIHRoZSBwcm92aWRlZCBhY2NvdW50LlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3Igc2lnbmluZyB0aGUgbG9naW4gcGF5bG9hZC5cbiAqIEByZXR1cm5zIEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBzaWduYXR1cmUgYW5kIHRoZSBwYXlsb2FkLlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBzaWduTG9naW5QYXlsb2FkIH0gZnJvbSAndGhpcmR3ZWIvYXV0aCc7XG4gKlxuICogY29uc3QgeyBzaWduYXR1cmUsIHBheWxvYWQgfSA9IGF3YWl0IHNpZ25Mb2dpblBheWxvYWQoe1xuICogIHBheWxvYWQ6IGxvZ2luUGF5bG9hZCxcbiAqICBhY2NvdW50OiBhY2NvdW50LFxuICogfSk7XG4gKiBgYGBcbiAqIEBhdXRoXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduTG9naW5QYXlsb2FkKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHBheWxvYWQsIGFjY291bnQgfSA9IG9wdGlvbnM7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgYWNjb3VudC5zaWduTWVzc2FnZSh7XG4gICAgICAgIG1lc3NhZ2U6IGNyZWF0ZUxvZ2luTWVzc2FnZShwYXlsb2FkKSxcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBzaWduYXR1cmUsXG4gICAgICAgIHBheWxvYWQsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ24tbG9naW4tcGF5bG9hZC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlTG9naW5NZXNzYWdlIiwic2lnbkxvZ2luUGF5bG9hZCIsIm9wdGlvbnMiLCJwYXlsb2FkIiwiYWNjb3VudCIsInNpZ25hdHVyZSIsInNpZ25NZXNzYWdlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/sign-login-payload.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js":
/*!******************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_sendRawTransaction: function() { return /* binding */ eth_sendRawTransaction; }\n/* harmony export */ });\n/**\n * Sends a raw transaction to the Ethereum network.\n * @param request - The EIP1193 request function.\n * @param signedTransaction - The signed transaction in hex format.\n * @returns A promise that resolves to the transaction hash.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_sendRawTransaction } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const transactionHash = await eth_sendRawTransaction(rpcRequest, \"0x...\");\n * ```\n */ async function eth_sendRawTransaction(request, signedTransaction) {\n    return await request({\n        method: \"eth_sendRawTransaction\",\n        params: [\n            signedTransaction\n        ]\n    });\n} //# sourceMappingURL=eth_sendRawTransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfc2VuZFJhd1RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxlQUFlQSx1QkFBdUJDLE9BQU8sRUFBRUMsaUJBQWlCO0lBQ25FLE9BQU8sTUFBTUQsUUFBUTtRQUNqQkUsUUFBUTtRQUNSQyxRQUFRO1lBQUNGO1NBQWtCO0lBQy9CO0FBQ0osRUFDQSxrREFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3JwYy9hY3Rpb25zL2V0aF9zZW5kUmF3VHJhbnNhY3Rpb24uanM/MGYyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlbmRzIGEgcmF3IHRyYW5zYWN0aW9uIHRvIHRoZSBFdGhlcmV1bSBuZXR3b3JrLlxuICogQHBhcmFtIHJlcXVlc3QgLSBUaGUgRUlQMTE5MyByZXF1ZXN0IGZ1bmN0aW9uLlxuICogQHBhcmFtIHNpZ25lZFRyYW5zYWN0aW9uIC0gVGhlIHNpZ25lZCB0cmFuc2FjdGlvbiBpbiBoZXggZm9ybWF0LlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHRyYW5zYWN0aW9uIGhhc2guXG4gKiBAcnBjXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGdldFJwY0NsaWVudCwgZXRoX3NlbmRSYXdUcmFuc2FjdGlvbiB9IGZyb20gXCJ0aGlyZHdlYi9ycGNcIjtcbiAqIGNvbnN0IHJwY1JlcXVlc3QgPSBnZXRScGNDbGllbnQoeyBjbGllbnQsIGNoYWluIH0pO1xuICogY29uc3QgdHJhbnNhY3Rpb25IYXNoID0gYXdhaXQgZXRoX3NlbmRSYXdUcmFuc2FjdGlvbihycGNSZXF1ZXN0LCBcIjB4Li4uXCIpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBldGhfc2VuZFJhd1RyYW5zYWN0aW9uKHJlcXVlc3QsIHNpZ25lZFRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIGF3YWl0IHJlcXVlc3Qoe1xuICAgICAgICBtZXRob2Q6IFwiZXRoX3NlbmRSYXdUcmFuc2FjdGlvblwiLFxuICAgICAgICBwYXJhbXM6IFtzaWduZWRUcmFuc2FjdGlvbl0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhfc2VuZFJhd1RyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJldGhfc2VuZFJhd1RyYW5zYWN0aW9uIiwicmVxdWVzdCIsInNpZ25lZFRyYW5zYWN0aW9uIiwibWV0aG9kIiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/generate-wallet.enclave.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/generate-wallet.enclave.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateWallet: function() { return /* binding */ generateWallet; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n\n\n/**\n * Generate a new enclave wallet using an auth token\n * @internal\n */ async function generateWallet(param) {\n    let { client, ecosystem, authToken } = param;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    const response = await clientFetch(\"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/v1/enclave-wallet/generate\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-thirdweb-client-id\": client.clientId,\n            Authorization: \"Bearer embedded-wallet-token:\".concat(authToken)\n        }\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to generate wallet - \".concat(response.status, \" \").concat(response.statusText));\n    }\n    const { wallet } = await response.json();\n    return wallet;\n} //# sourceMappingURL=generate-wallet.enclave.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvZ2VuZXJhdGUtd2FsbGV0LmVuY2xhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ047QUFDNUQ7OztDQUdDLEdBQ00sZUFBZUUsZUFBZSxLQUFpQztRQUFqQyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFHLEdBQWpDO0lBQ2pDLE1BQU1DLGNBQWNMLCtEQUFjQSxDQUFDRSxRQUFRQztJQUMzQyxNQUFNRyxXQUFXLE1BQU1ELFlBQVksR0FBcUMsT0FBbENOLHFFQUFrQkEsQ0FBQyxnQkFBZSxvQ0FBa0M7UUFDdEdRLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtZQUNoQix3QkFBd0JOLE9BQU9PLFFBQVE7WUFDdkNDLGVBQWUsZ0NBQTBDLE9BQVZOO1FBQ25EO0lBQ0o7SUFDQSxJQUFJLENBQUNFLFNBQVNLLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSUMsTUFBTSwrQkFBa0ROLE9BQW5CQSxTQUFTTyxNQUFNLEVBQUMsS0FBdUIsT0FBcEJQLFNBQVNRLFVBQVU7SUFDekY7SUFDQSxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFJLE1BQU1ULFNBQVNVLElBQUk7SUFDdkMsT0FBT0Q7QUFDWCxFQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvY29yZS9hY3Rpb25zL2dlbmVyYXRlLXdhbGxldC5lbmNsYXZlLmpzPzIxMjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VGhpcmR3ZWJCYXNlVXJsIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2RvbWFpbnMuanNcIjtcbmltcG9ydCB7IGdldENsaWVudEZldGNoIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2ZldGNoLmpzXCI7XG4vKipcbiAqIEdlbmVyYXRlIGEgbmV3IGVuY2xhdmUgd2FsbGV0IHVzaW5nIGFuIGF1dGggdG9rZW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVXYWxsZXQoeyBjbGllbnQsIGVjb3N5c3RlbSwgYXV0aFRva2VuLCB9KSB7XG4gICAgY29uc3QgY2xpZW50RmV0Y2ggPSBnZXRDbGllbnRGZXRjaChjbGllbnQsIGVjb3N5c3RlbSk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRGZXRjaChgJHtnZXRUaGlyZHdlYkJhc2VVcmwoXCJpbkFwcFdhbGxldFwiKX0vYXBpL3YxL2VuY2xhdmUtd2FsbGV0L2dlbmVyYXRlYCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIFwieC10aGlyZHdlYi1jbGllbnQtaWRcIjogY2xpZW50LmNsaWVudElkLFxuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciBlbWJlZGRlZC13YWxsZXQtdG9rZW46JHthdXRoVG9rZW59YCxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGdlbmVyYXRlIHdhbGxldCAtICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuICAgIGNvbnN0IHsgd2FsbGV0IH0gPSAoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICByZXR1cm4gd2FsbGV0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VuZXJhdGUtd2FsbGV0LmVuY2xhdmUuanMubWFwIl0sIm5hbWVzIjpbImdldFRoaXJkd2ViQmFzZVVybCIsImdldENsaWVudEZldGNoIiwiZ2VuZXJhdGVXYWxsZXQiLCJjbGllbnQiLCJlY29zeXN0ZW0iLCJhdXRoVG9rZW4iLCJjbGllbnRGZXRjaCIsInJlc3BvbnNlIiwibWV0aG9kIiwiaGVhZGVycyIsImNsaWVudElkIiwiQXV0aG9yaXphdGlvbiIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwid2FsbGV0IiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/generate-wallet.enclave.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserStatus: function() { return /* binding */ getUserStatus; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n\n\n/**\n * Gets the user's status from the backend.\n *\n * @internal\n */ async function getUserStatus(param) {\n    let { authToken, client, ecosystem } = param;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    const response = await clientFetch(\"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/2024-05-05/accounts\"), {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-thirdweb-client-id\": client.clientId,\n            Authorization: \"Bearer embedded-wallet-token:\".concat(authToken)\n        }\n    });\n    if (!response.ok) {\n        if (response.status === 401) {\n            // 401 response indicates there is no user logged in, so we return undefined\n            return undefined;\n        }\n        const result = await response.json();\n        throw new Error(\"Failed to get user status: \".concat(result.message));\n    }\n    return await response.json();\n} //# sourceMappingURL=get-enclave-user-status.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvZ2V0LWVuY2xhdmUtdXNlci1zdGF0dXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtFO0FBQ047QUFDNUQ7Ozs7Q0FJQyxHQUNNLGVBQWVFLGNBQWMsS0FBaUM7UUFBakMsRUFBRUMsU0FBUyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRyxHQUFqQztJQUNoQyxNQUFNQyxjQUFjTCwrREFBY0EsQ0FBQ0csUUFBUUM7SUFDM0MsTUFBTUUsV0FBVyxNQUFNRCxZQUFZLEdBQXFDLE9BQWxDTixxRUFBa0JBLENBQUMsZ0JBQWUsNkJBQTJCO1FBQy9GUSxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxnQkFBZ0I7WUFDaEIsd0JBQXdCTCxPQUFPTSxRQUFRO1lBQ3ZDQyxlQUFlLGdDQUEwQyxPQUFWUjtRQUNuRDtJQUNKO0lBQ0EsSUFBSSxDQUFDSSxTQUFTSyxFQUFFLEVBQUU7UUFDZCxJQUFJTCxTQUFTTSxNQUFNLEtBQUssS0FBSztZQUN6Qiw0RUFBNEU7WUFDNUUsT0FBT0M7UUFDWDtRQUNBLE1BQU1DLFNBQVMsTUFBTVIsU0FBU1MsSUFBSTtRQUNsQyxNQUFNLElBQUlDLE1BQU0sOEJBQTZDLE9BQWZGLE9BQU9HLE9BQU87SUFDaEU7SUFDQSxPQUFRLE1BQU1YLFNBQVNTLElBQUk7QUFDL0IsRUFDQSxtREFBbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL2NvcmUvYWN0aW9ucy9nZXQtZW5jbGF2ZS11c2VyLXN0YXR1cy5qcz83MjJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFRoaXJkd2ViQmFzZVVybCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9kb21haW5zLmpzXCI7XG5pbXBvcnQgeyBnZXRDbGllbnRGZXRjaCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9mZXRjaC5qc1wiO1xuLyoqXG4gKiBHZXRzIHRoZSB1c2VyJ3Mgc3RhdHVzIGZyb20gdGhlIGJhY2tlbmQuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVc2VyU3RhdHVzKHsgYXV0aFRva2VuLCBjbGllbnQsIGVjb3N5c3RlbSwgfSkge1xuICAgIGNvbnN0IGNsaWVudEZldGNoID0gZ2V0Q2xpZW50RmV0Y2goY2xpZW50LCBlY29zeXN0ZW0pO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7Z2V0VGhpcmR3ZWJCYXNlVXJsKFwiaW5BcHBXYWxsZXRcIil9L2FwaS8yMDI0LTA1LTA1L2FjY291bnRzYCwge1xuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgXCJ4LXRoaXJkd2ViLWNsaWVudC1pZFwiOiBjbGllbnQuY2xpZW50SWQsXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyIGVtYmVkZGVkLXdhbGxldC10b2tlbjoke2F1dGhUb2tlbn1gLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgICAgICAvLyA0MDEgcmVzcG9uc2UgaW5kaWNhdGVzIHRoZXJlIGlzIG5vIHVzZXIgbG9nZ2VkIGluLCBzbyB3ZSByZXR1cm4gdW5kZWZpbmVkXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZ2V0IHVzZXIgc3RhdHVzOiAke3Jlc3VsdC5tZXNzYWdlfWApO1xuICAgIH1cbiAgICByZXR1cm4gKGF3YWl0IHJlc3BvbnNlLmpzb24oKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtZW5jbGF2ZS11c2VyLXN0YXR1cy5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0VGhpcmR3ZWJCYXNlVXJsIiwiZ2V0Q2xpZW50RmV0Y2giLCJnZXRVc2VyU3RhdHVzIiwiYXV0aFRva2VuIiwiY2xpZW50IiwiZWNvc3lzdGVtIiwiY2xpZW50RmV0Y2giLCJyZXNwb25zZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJjbGllbnRJZCIsIkF1dGhvcml6YXRpb24iLCJvayIsInN0YXR1cyIsInVuZGVmaW5lZCIsInJlc3VsdCIsImpzb24iLCJFcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-message.enclave.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-message.enclave.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signMessage: function() { return /* binding */ signMessage; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\n\n\nasync function signMessage(param) {\n    let { client, payload: { message, isRaw }, storage } = param;\n    const authToken = await storage.getAuthCookie();\n    const ecosystem = storage.ecosystem;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    if (!authToken) {\n        throw new Error(\"No auth token found when signing message\");\n    }\n    const response = await clientFetch(\"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/v1/enclave-wallet/sign-message\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-thirdweb-client-id\": client.clientId,\n            Authorization: \"Bearer embedded-wallet-token:\".concat(authToken)\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            messagePayload: {\n                message,\n                isRaw\n            }\n        })\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to sign message - \".concat(response.status, \" \").concat(response.statusText));\n    }\n    const signedMessage = await response.json();\n    return signedMessage;\n} //# sourceMappingURL=sign-message.enclave.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvc2lnbi1tZXNzYWdlLmVuY2xhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRTtBQUNOO0FBQ047QUFDL0MsZUFBZUcsWUFBWSxLQUFpRDtRQUFqRCxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxLQUFLLEVBQUUsRUFBRUMsT0FBTyxFQUFHLEdBQWpEO0lBQzlCLE1BQU1DLFlBQVksTUFBTUQsUUFBUUUsYUFBYTtJQUM3QyxNQUFNQyxZQUFZSCxRQUFRRyxTQUFTO0lBQ25DLE1BQU1DLGNBQWNYLCtEQUFjQSxDQUFDRyxRQUFRTztJQUMzQyxJQUFJLENBQUNGLFdBQVc7UUFDWixNQUFNLElBQUlJLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxXQUFXLE1BQU1GLFlBQVksR0FBcUMsT0FBbENaLHFFQUFrQkEsQ0FBQyxnQkFBZSx3Q0FBc0M7UUFDMUdlLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtZQUNoQix3QkFBd0JaLE9BQU9hLFFBQVE7WUFDdkNDLGVBQWUsZ0NBQTBDLE9BQVZUO1FBQ25EO1FBQ0FVLE1BQU1qQix5REFBU0EsQ0FBQztZQUNaa0IsZ0JBQWdCO2dCQUNaZDtnQkFDQUM7WUFDSjtRQUNKO0lBQ0o7SUFDQSxJQUFJLENBQUNPLFNBQVNPLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSVIsTUFBTSw0QkFBK0NDLE9BQW5CQSxTQUFTUSxNQUFNLEVBQUMsS0FBdUIsT0FBcEJSLFNBQVNTLFVBQVU7SUFDdEY7SUFDQSxNQUFNQyxnQkFBaUIsTUFBTVYsU0FBU1csSUFBSTtJQUMxQyxPQUFPRDtBQUNYLEVBQ0EsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvc2lnbi1tZXNzYWdlLmVuY2xhdmUuanM/YjhkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRUaGlyZHdlYkJhc2VVcmwgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZG9tYWlucy5qc1wiO1xuaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk1lc3NhZ2UoeyBjbGllbnQsIHBheWxvYWQ6IHsgbWVzc2FnZSwgaXNSYXcgfSwgc3RvcmFnZSwgfSkge1xuICAgIGNvbnN0IGF1dGhUb2tlbiA9IGF3YWl0IHN0b3JhZ2UuZ2V0QXV0aENvb2tpZSgpO1xuICAgIGNvbnN0IGVjb3N5c3RlbSA9IHN0b3JhZ2UuZWNvc3lzdGVtO1xuICAgIGNvbnN0IGNsaWVudEZldGNoID0gZ2V0Q2xpZW50RmV0Y2goY2xpZW50LCBlY29zeXN0ZW0pO1xuICAgIGlmICghYXV0aFRva2VuKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGF1dGggdG9rZW4gZm91bmQgd2hlbiBzaWduaW5nIG1lc3NhZ2VcIik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7Z2V0VGhpcmR3ZWJCYXNlVXJsKFwiaW5BcHBXYWxsZXRcIil9L2FwaS92MS9lbmNsYXZlLXdhbGxldC9zaWduLW1lc3NhZ2VgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgXCJ4LXRoaXJkd2ViLWNsaWVudC1pZFwiOiBjbGllbnQuY2xpZW50SWQsXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyIGVtYmVkZGVkLXdhbGxldC10b2tlbjoke2F1dGhUb2tlbn1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBzdHJpbmdpZnkoe1xuICAgICAgICAgICAgbWVzc2FnZVBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlLFxuICAgICAgICAgICAgICAgIGlzUmF3LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzaWduIG1lc3NhZ2UgLSAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICBjb25zdCBzaWduZWRNZXNzYWdlID0gKGF3YWl0IHJlc3BvbnNlLmpzb24oKSk7XG4gICAgcmV0dXJuIHNpZ25lZE1lc3NhZ2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduLW1lc3NhZ2UuZW5jbGF2ZS5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0VGhpcmR3ZWJCYXNlVXJsIiwiZ2V0Q2xpZW50RmV0Y2giLCJzdHJpbmdpZnkiLCJzaWduTWVzc2FnZSIsImNsaWVudCIsInBheWxvYWQiLCJtZXNzYWdlIiwiaXNSYXciLCJzdG9yYWdlIiwiYXV0aFRva2VuIiwiZ2V0QXV0aENvb2tpZSIsImVjb3N5c3RlbSIsImNsaWVudEZldGNoIiwiRXJyb3IiLCJyZXNwb25zZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJjbGllbnRJZCIsIkF1dGhvcml6YXRpb24iLCJib2R5IiwibWVzc2FnZVBheWxvYWQiLCJvayIsInN0YXR1cyIsInN0YXR1c1RleHQiLCJzaWduZWRNZXNzYWdlIiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-message.enclave.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-transaction.enclave.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-transaction.enclave.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signTransaction: function() { return /* binding */ signTransaction; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\n\n\nasync function signTransaction(param) {\n    let { client, payload, storage } = param;\n    const authToken = await storage.getAuthCookie();\n    const ecosystem = storage.ecosystem;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    if (!authToken) {\n        throw new Error(\"No auth token found when signing transaction\");\n    }\n    const response = await clientFetch(\"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/v1/enclave-wallet/sign-transaction\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-thirdweb-client-id\": client.clientId,\n            Authorization: \"Bearer embedded-wallet-token:\".concat(authToken)\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            transactionPayload: payload\n        })\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to sign transaction - \".concat(response.status, \" \").concat(response.statusText));\n    }\n    const signedTransaction = await response.json();\n    return signedTransaction.signature;\n} //# sourceMappingURL=sign-transaction.enclave.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvc2lnbi10cmFuc2FjdGlvbi5lbmNsYXZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0U7QUFDTjtBQUNOO0FBQy9DLGVBQWVHLGdCQUFnQixLQUE2QjtRQUE3QixFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFHLEdBQTdCO0lBQ2xDLE1BQU1DLFlBQVksTUFBTUQsUUFBUUUsYUFBYTtJQUM3QyxNQUFNQyxZQUFZSCxRQUFRRyxTQUFTO0lBQ25DLE1BQU1DLGNBQWNULCtEQUFjQSxDQUFDRyxRQUFRSztJQUMzQyxJQUFJLENBQUNGLFdBQVc7UUFDWixNQUFNLElBQUlJLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxXQUFXLE1BQU1GLFlBQVksR0FBcUMsT0FBbENWLHFFQUFrQkEsQ0FBQyxnQkFBZSw0Q0FBMEM7UUFDOUdhLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtZQUNoQix3QkFBd0JWLE9BQU9XLFFBQVE7WUFDdkNDLGVBQWUsZ0NBQTBDLE9BQVZUO1FBQ25EO1FBQ0FVLE1BQU1mLHlEQUFTQSxDQUFDO1lBQ1pnQixvQkFBb0JiO1FBQ3hCO0lBQ0o7SUFDQSxJQUFJLENBQUNPLFNBQVNPLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSVIsTUFBTSxnQ0FBbURDLE9BQW5CQSxTQUFTUSxNQUFNLEVBQUMsS0FBdUIsT0FBcEJSLFNBQVNTLFVBQVU7SUFDMUY7SUFDQSxNQUFNQyxvQkFBcUIsTUFBTVYsU0FBU1csSUFBSTtJQUM5QyxPQUFPRCxrQkFBa0JFLFNBQVM7QUFDdEMsRUFDQSxvREFBb0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL2NvcmUvYWN0aW9ucy9zaWduLXRyYW5zYWN0aW9uLmVuY2xhdmUuanM/M2E5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRUaGlyZHdlYkJhc2VVcmwgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZG9tYWlucy5qc1wiO1xuaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnblRyYW5zYWN0aW9uKHsgY2xpZW50LCBwYXlsb2FkLCBzdG9yYWdlLCB9KSB7XG4gICAgY29uc3QgYXV0aFRva2VuID0gYXdhaXQgc3RvcmFnZS5nZXRBdXRoQ29va2llKCk7XG4gICAgY29uc3QgZWNvc3lzdGVtID0gc3RvcmFnZS5lY29zeXN0ZW07XG4gICAgY29uc3QgY2xpZW50RmV0Y2ggPSBnZXRDbGllbnRGZXRjaChjbGllbnQsIGVjb3N5c3RlbSk7XG4gICAgaWYgKCFhdXRoVG9rZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gYXV0aCB0b2tlbiBmb3VuZCB3aGVuIHNpZ25pbmcgdHJhbnNhY3Rpb25cIik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7Z2V0VGhpcmR3ZWJCYXNlVXJsKFwiaW5BcHBXYWxsZXRcIil9L2FwaS92MS9lbmNsYXZlLXdhbGxldC9zaWduLXRyYW5zYWN0aW9uYCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIFwieC10aGlyZHdlYi1jbGllbnQtaWRcIjogY2xpZW50LmNsaWVudElkLFxuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciBlbWJlZGRlZC13YWxsZXQtdG9rZW46JHthdXRoVG9rZW59YCxcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uUGF5bG9hZDogcGF5bG9hZCxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzaWduIHRyYW5zYWN0aW9uIC0gJHtyZXNwb25zZS5zdGF0dXN9ICR7cmVzcG9uc2Uuc3RhdHVzVGV4dH1gKTtcbiAgICB9XG4gICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb24gPSAoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICByZXR1cm4gc2lnbmVkVHJhbnNhY3Rpb24uc2lnbmF0dXJlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbi10cmFuc2FjdGlvbi5lbmNsYXZlLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRUaGlyZHdlYkJhc2VVcmwiLCJnZXRDbGllbnRGZXRjaCIsInN0cmluZ2lmeSIsInNpZ25UcmFuc2FjdGlvbiIsImNsaWVudCIsInBheWxvYWQiLCJzdG9yYWdlIiwiYXV0aFRva2VuIiwiZ2V0QXV0aENvb2tpZSIsImVjb3N5c3RlbSIsImNsaWVudEZldGNoIiwiRXJyb3IiLCJyZXNwb25zZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJjbGllbnRJZCIsIkF1dGhvcml6YXRpb24iLCJib2R5IiwidHJhbnNhY3Rpb25QYXlsb2FkIiwib2siLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwic2lnbmVkVHJhbnNhY3Rpb24iLCJqc29uIiwic2lnbmF0dXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-transaction.enclave.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-typed-data.enclave.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-typed-data.enclave.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signTypedData: function() { return /* binding */ signTypedData; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\n\n\nasync function signTypedData(param) {\n    let { client, payload, storage } = param;\n    const authToken = await storage.getAuthCookie();\n    const ecosystem = storage.ecosystem;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    if (!authToken) {\n        throw new Error(\"No auth token found when signing typed data\");\n    }\n    const response = await clientFetch(\"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/v1/enclave-wallet/sign-typed-data\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-thirdweb-client-id\": client.clientId,\n            Authorization: \"Bearer embedded-wallet-token:\".concat(authToken)\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            ...payload\n        })\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to sign typed data - \".concat(response.status, \" \").concat(response.statusText));\n    }\n    const signedTypedData = await response.json();\n    return signedTypedData;\n} //# sourceMappingURL=sign-typed-data.enclave.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvc2lnbi10eXBlZC1kYXRhLmVuY2xhdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRTtBQUNOO0FBQ047QUFDL0MsZUFBZUcsY0FBYyxLQUE2QjtRQUE3QixFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFHLEdBQTdCO0lBQ2hDLE1BQU1DLFlBQVksTUFBTUQsUUFBUUUsYUFBYTtJQUM3QyxNQUFNQyxZQUFZSCxRQUFRRyxTQUFTO0lBQ25DLE1BQU1DLGNBQWNULCtEQUFjQSxDQUFDRyxRQUFRSztJQUMzQyxJQUFJLENBQUNGLFdBQVc7UUFDWixNQUFNLElBQUlJLE1BQU07SUFDcEI7SUFDQSxNQUFNQyxXQUFXLE1BQU1GLFlBQVksR0FBcUMsT0FBbENWLHFFQUFrQkEsQ0FBQyxnQkFBZSwyQ0FBeUM7UUFDN0dhLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtZQUNoQix3QkFBd0JWLE9BQU9XLFFBQVE7WUFDdkNDLGVBQWUsZ0NBQTBDLE9BQVZUO1FBQ25EO1FBQ0FVLE1BQU1mLHlEQUFTQSxDQUFDO1lBQ1osR0FBR0csT0FBTztRQUNkO0lBQ0o7SUFDQSxJQUFJLENBQUNPLFNBQVNNLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSVAsTUFBTSwrQkFBa0RDLE9BQW5CQSxTQUFTTyxNQUFNLEVBQUMsS0FBdUIsT0FBcEJQLFNBQVNRLFVBQVU7SUFDekY7SUFDQSxNQUFNQyxrQkFBbUIsTUFBTVQsU0FBU1UsSUFBSTtJQUM1QyxPQUFPRDtBQUNYLEVBQ0EsbURBQW1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2FjdGlvbnMvc2lnbi10eXBlZC1kYXRhLmVuY2xhdmUuanM/YzIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRUaGlyZHdlYkJhc2VVcmwgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZG9tYWlucy5qc1wiO1xuaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnblR5cGVkRGF0YSh7IGNsaWVudCwgcGF5bG9hZCwgc3RvcmFnZSwgfSkge1xuICAgIGNvbnN0IGF1dGhUb2tlbiA9IGF3YWl0IHN0b3JhZ2UuZ2V0QXV0aENvb2tpZSgpO1xuICAgIGNvbnN0IGVjb3N5c3RlbSA9IHN0b3JhZ2UuZWNvc3lzdGVtO1xuICAgIGNvbnN0IGNsaWVudEZldGNoID0gZ2V0Q2xpZW50RmV0Y2goY2xpZW50LCBlY29zeXN0ZW0pO1xuICAgIGlmICghYXV0aFRva2VuKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGF1dGggdG9rZW4gZm91bmQgd2hlbiBzaWduaW5nIHR5cGVkIGRhdGFcIik7XG4gICAgfVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7Z2V0VGhpcmR3ZWJCYXNlVXJsKFwiaW5BcHBXYWxsZXRcIil9L2FwaS92MS9lbmNsYXZlLXdhbGxldC9zaWduLXR5cGVkLWRhdGFgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgXCJ4LXRoaXJkd2ViLWNsaWVudC1pZFwiOiBjbGllbnQuY2xpZW50SWQsXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyIGVtYmVkZGVkLXdhbGxldC10b2tlbjoke2F1dGhUb2tlbn1gLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBzdHJpbmdpZnkoe1xuICAgICAgICAgICAgLi4ucGF5bG9hZCxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzaWduIHR5cGVkIGRhdGEgLSAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cbiAgICBjb25zdCBzaWduZWRUeXBlZERhdGEgPSAoYXdhaXQgcmVzcG9uc2UuanNvbigpKTtcbiAgICByZXR1cm4gc2lnbmVkVHlwZWREYXRhO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbi10eXBlZC1kYXRhLmVuY2xhdmUuanMubWFwIl0sIm5hbWVzIjpbImdldFRoaXJkd2ViQmFzZVVybCIsImdldENsaWVudEZldGNoIiwic3RyaW5naWZ5Iiwic2lnblR5cGVkRGF0YSIsImNsaWVudCIsInBheWxvYWQiLCJzdG9yYWdlIiwiYXV0aFRva2VuIiwiZ2V0QXV0aENvb2tpZSIsImVjb3N5c3RlbSIsImNsaWVudEZldGNoIiwiRXJyb3IiLCJyZXNwb25zZSIsIm1ldGhvZCIsImhlYWRlcnMiLCJjbGllbnRJZCIsIkF1dGhvcml6YXRpb24iLCJib2R5Iiwib2siLCJzdGF0dXMiLCJzdGF0dXNUZXh0Iiwic2lnbmVkVHlwZWREYXRhIiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-typed-data.enclave.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/authEndpoint.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/authEndpoint.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authEndpoint: function() { return /* binding */ authEndpoint; }\n/* harmony export */ });\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _native_helpers_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../native/helpers/constants.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/constants.js\");\n/* harmony import */ var _native_helpers_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../native/helpers/errors.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/errors.js\");\n\n\n\n\nasync function authEndpoint(args) {\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(args.client, args.ecosystem);\n    const res = await clientFetch(_native_helpers_constants_js__WEBPACK_IMPORTED_MODULE_1__.ROUTE_AUTH_ENDPOINT_CALLBACK, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            payload: args.payload,\n            developerClientId: args.client.clientId\n        })\n    });\n    if (!res.ok) {\n        const error = await res.json();\n        throw new Error(\"Custom auth endpoint authentication error: \".concat(error.message));\n    }\n    try {\n        const { verifiedToken } = await res.json();\n        return {\n            storedToken: verifiedToken\n        };\n    } catch (e) {\n        throw new Error((0,_native_helpers_errors_js__WEBPACK_IMPORTED_MODULE_3__.createErrorMessage)(\"Malformed response from post auth_endpoint authentication\", e));\n    }\n} //# sourceMappingURL=authEndpoint.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2F1dGhFbmRwb2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RDtBQUNOO0FBQzJCO0FBQ2I7QUFDN0QsZUFBZUksYUFBYUMsSUFBSTtJQUNuQyxNQUFNQyxjQUFjTiwrREFBY0EsQ0FBQ0ssS0FBS0UsTUFBTSxFQUFFRixLQUFLRyxTQUFTO0lBQzlELE1BQU1DLE1BQU0sTUFBTUgsWUFBWUosc0ZBQTRCQSxFQUFFO1FBQ3hEUSxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxnQkFBZ0I7UUFDcEI7UUFDQUMsTUFBTVgseURBQVNBLENBQUM7WUFDWlksU0FBU1IsS0FBS1EsT0FBTztZQUNyQkMsbUJBQW1CVCxLQUFLRSxNQUFNLENBQUNRLFFBQVE7UUFDM0M7SUFDSjtJQUNBLElBQUksQ0FBQ04sSUFBSU8sRUFBRSxFQUFFO1FBQ1QsTUFBTUMsUUFBUSxNQUFNUixJQUFJUyxJQUFJO1FBQzVCLE1BQU0sSUFBSUMsTUFBTSw4Q0FBNEQsT0FBZEYsTUFBTUcsT0FBTztJQUMvRTtJQUNBLElBQUk7UUFDQSxNQUFNLEVBQUVDLGFBQWEsRUFBRSxHQUFHLE1BQU1aLElBQUlTLElBQUk7UUFDeEMsT0FBTztZQUFFSSxhQUFhRDtRQUFjO0lBQ3hDLEVBQ0EsT0FBT0UsR0FBRztRQUNOLE1BQU0sSUFBSUosTUFBTWhCLDZFQUFrQkEsQ0FBQyw2REFBNkRvQjtJQUNwRztBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2F1dGhFbmRwb2ludC5qcz9hY2U1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldENsaWVudEZldGNoIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2ZldGNoLmpzXCI7XG5pbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvanNvbi5qc1wiO1xuaW1wb3J0IHsgUk9VVEVfQVVUSF9FTkRQT0lOVF9DQUxMQkFDSyB9IGZyb20gXCIuLi8uLi9uYXRpdmUvaGVscGVycy9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUVycm9yTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9uYXRpdmUvaGVscGVycy9lcnJvcnMuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhdXRoRW5kcG9pbnQoYXJncykge1xuICAgIGNvbnN0IGNsaWVudEZldGNoID0gZ2V0Q2xpZW50RmV0Y2goYXJncy5jbGllbnQsIGFyZ3MuZWNvc3lzdGVtKTtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnRGZXRjaChST1VURV9BVVRIX0VORFBPSU5UX0NBTExCQUNLLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBzdHJpbmdpZnkoe1xuICAgICAgICAgICAgcGF5bG9hZDogYXJncy5wYXlsb2FkLFxuICAgICAgICAgICAgZGV2ZWxvcGVyQ2xpZW50SWQ6IGFyZ3MuY2xpZW50LmNsaWVudElkLFxuICAgICAgICB9KSxcbiAgICB9KTtcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ3VzdG9tIGF1dGggZW5kcG9pbnQgYXV0aGVudGljYXRpb24gZXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgeyB2ZXJpZmllZFRva2VuIH0gPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgICByZXR1cm4geyBzdG9yZWRUb2tlbjogdmVyaWZpZWRUb2tlbiB9O1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoY3JlYXRlRXJyb3JNZXNzYWdlKFwiTWFsZm9ybWVkIHJlc3BvbnNlIGZyb20gcG9zdCBhdXRoX2VuZHBvaW50IGF1dGhlbnRpY2F0aW9uXCIsIGUpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoRW5kcG9pbnQuanMubWFwIl0sIm5hbWVzIjpbImdldENsaWVudEZldGNoIiwic3RyaW5naWZ5IiwiUk9VVEVfQVVUSF9FTkRQT0lOVF9DQUxMQkFDSyIsImNyZWF0ZUVycm9yTWVzc2FnZSIsImF1dGhFbmRwb2ludCIsImFyZ3MiLCJjbGllbnRGZXRjaCIsImNsaWVudCIsImVjb3N5c3RlbSIsInJlcyIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwicGF5bG9hZCIsImRldmVsb3BlckNsaWVudElkIiwiY2xpZW50SWQiLCJvayIsImVycm9yIiwianNvbiIsIkVycm9yIiwibWVzc2FnZSIsInZlcmlmaWVkVG9rZW4iLCJzdG9yZWRUb2tlbiIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/authEndpoint.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/backend.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/backend.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   backendAuthenticate: function() { return /* binding */ backendAuthenticate; }\n/* harmony export */ });\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _getLoginPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getLoginPath.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/getLoginPath.js\");\n\n\n\n/**\n * Authenticates via the wallet secret\n * @internal\n */ async function backendAuthenticate(args) {\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(args.client, args.ecosystem);\n    const path = (0,_getLoginPath_js__WEBPACK_IMPORTED_MODULE_1__.getLoginUrl)({\n        authOption: \"backend\",\n        client: args.client,\n        ecosystem: args.ecosystem\n    });\n    const res = await clientFetch(\"\".concat(path), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            walletSecret: args.walletSecret\n        })\n    });\n    if (!res.ok) {\n        throw new Error(\"Failed to generate backend account\");\n    }\n    return await res.json();\n} //# sourceMappingURL=backend.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2JhY2tlbmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0RDtBQUNOO0FBQ047QUFDaEQ7OztDQUdDLEdBQ00sZUFBZUcsb0JBQW9CQyxJQUFJO0lBQzFDLE1BQU1DLGNBQWNMLCtEQUFjQSxDQUFDSSxLQUFLRSxNQUFNLEVBQUVGLEtBQUtHLFNBQVM7SUFDOUQsTUFBTUMsT0FBT04sNkRBQVdBLENBQUM7UUFDckJPLFlBQVk7UUFDWkgsUUFBUUYsS0FBS0UsTUFBTTtRQUNuQkMsV0FBV0gsS0FBS0csU0FBUztJQUM3QjtJQUNBLE1BQU1HLE1BQU0sTUFBTUwsWUFBWSxHQUFRLE9BQUxHLE9BQVE7UUFDckNHLFFBQVE7UUFDUkMsU0FBUztZQUNMLGdCQUFnQjtRQUNwQjtRQUNBQyxNQUFNWix5REFBU0EsQ0FBQztZQUNaYSxjQUFjVixLQUFLVSxZQUFZO1FBQ25DO0lBQ0o7SUFDQSxJQUFJLENBQUNKLElBQUlLLEVBQUUsRUFBRTtRQUNULE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQVEsTUFBTU4sSUFBSU8sSUFBSTtBQUMxQixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvY29yZS9hdXRoZW50aWNhdGlvbi9iYWNrZW5kLmpzPzJhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyBnZXRMb2dpblVybCB9IGZyb20gXCIuL2dldExvZ2luUGF0aC5qc1wiO1xuLyoqXG4gKiBBdXRoZW50aWNhdGVzIHZpYSB0aGUgd2FsbGV0IHNlY3JldFxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBiYWNrZW5kQXV0aGVudGljYXRlKGFyZ3MpIHtcbiAgICBjb25zdCBjbGllbnRGZXRjaCA9IGdldENsaWVudEZldGNoKGFyZ3MuY2xpZW50LCBhcmdzLmVjb3N5c3RlbSk7XG4gICAgY29uc3QgcGF0aCA9IGdldExvZ2luVXJsKHtcbiAgICAgICAgYXV0aE9wdGlvbjogXCJiYWNrZW5kXCIsXG4gICAgICAgIGNsaWVudDogYXJncy5jbGllbnQsXG4gICAgICAgIGVjb3N5c3RlbTogYXJncy5lY29zeXN0ZW0sXG4gICAgfSk7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7cGF0aH1gLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBzdHJpbmdpZnkoe1xuICAgICAgICAgICAgd2FsbGV0U2VjcmV0OiBhcmdzLndhbGxldFNlY3JldCxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdlbmVyYXRlIGJhY2tlbmQgYWNjb3VudFwiKTtcbiAgICB9XG4gICAgcmV0dXJuIChhd2FpdCByZXMuanNvbigpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhY2tlbmQuanMubWFwIl0sIm5hbWVzIjpbImdldENsaWVudEZldGNoIiwic3RyaW5naWZ5IiwiZ2V0TG9naW5VcmwiLCJiYWNrZW5kQXV0aGVudGljYXRlIiwiYXJncyIsImNsaWVudEZldGNoIiwiY2xpZW50IiwiZWNvc3lzdGVtIiwicGF0aCIsImF1dGhPcHRpb24iLCJyZXMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIndhbGxldFNlY3JldCIsIm9rIiwiRXJyb3IiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/backend.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/guest.js":
/*!************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/guest.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   guestAuthenticate: function() { return /* binding */ guestAuthenticate; }\n/* harmony export */ });\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _utils_random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/random.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/random.js\");\n/* harmony import */ var _client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client-scoped-storage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/client-scoped-storage.js\");\n/* harmony import */ var _getLoginPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getLoginPath.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/getLoginPath.js\");\n\n\n\n\n\n/**\n * Does no real authentication, just issues a temporary token for the user.\n * @internal\n */ async function guestAuthenticate(args) {\n    const storage = new _client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_0__.ClientScopedStorage({\n        storage: args.storage,\n        clientId: args.client.clientId,\n        ecosystem: args.ecosystem\n    });\n    let sessionId = await storage.getGuestSessionId();\n    if (!sessionId) {\n        sessionId = (0,_utils_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytesHex)(32);\n        storage.saveGuestSessionId(sessionId);\n    }\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_2__.getClientFetch)(args.client, args.ecosystem);\n    const path = (0,_getLoginPath_js__WEBPACK_IMPORTED_MODULE_3__.getLoginCallbackUrl)({\n        authOption: \"guest\",\n        client: args.client,\n        ecosystem: args.ecosystem\n    });\n    const res = await clientFetch(\"\".concat(path), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_4__.stringify)({\n            sessionId\n        })\n    });\n    if (!res.ok) throw new Error(\"Failed to generate guest account\");\n    return await res.json();\n} //# sourceMappingURL=guest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2d1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0RDtBQUNOO0FBQ087QUFDSTtBQUNUO0FBQ3hEOzs7Q0FHQyxHQUNNLGVBQWVLLGtCQUFrQkMsSUFBSTtJQUN4QyxNQUFNQyxVQUFVLElBQUlKLDBFQUFtQkEsQ0FBQztRQUNwQ0ksU0FBU0QsS0FBS0MsT0FBTztRQUNyQkMsVUFBVUYsS0FBS0csTUFBTSxDQUFDRCxRQUFRO1FBQzlCRSxXQUFXSixLQUFLSSxTQUFTO0lBQzdCO0lBQ0EsSUFBSUMsWUFBWSxNQUFNSixRQUFRSyxpQkFBaUI7SUFDL0MsSUFBSSxDQUFDRCxXQUFXO1FBQ1pBLFlBQVlULGdFQUFjQSxDQUFDO1FBQzNCSyxRQUFRTSxrQkFBa0IsQ0FBQ0Y7SUFDL0I7SUFDQSxNQUFNRyxjQUFjZCwrREFBY0EsQ0FBQ00sS0FBS0csTUFBTSxFQUFFSCxLQUFLSSxTQUFTO0lBQzlELE1BQU1LLE9BQU9YLHFFQUFtQkEsQ0FBQztRQUM3QlksWUFBWTtRQUNaUCxRQUFRSCxLQUFLRyxNQUFNO1FBQ25CQyxXQUFXSixLQUFLSSxTQUFTO0lBQzdCO0lBQ0EsTUFBTU8sTUFBTSxNQUFNSCxZQUFZLEdBQVEsT0FBTEMsT0FBUTtRQUNyQ0csUUFBUTtRQUNSQyxTQUFTO1lBQ0wsZ0JBQWdCO1FBQ3BCO1FBQ0FDLE1BQU1uQix5REFBU0EsQ0FBQztZQUNaVTtRQUNKO0lBQ0o7SUFDQSxJQUFJLENBQUNNLElBQUlJLEVBQUUsRUFDUCxNQUFNLElBQUlDLE1BQU07SUFDcEIsT0FBUSxNQUFNTCxJQUFJTSxJQUFJO0FBQzFCLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2d1ZXN0LmpzP2Q4OGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyByYW5kb21CeXRlc0hleCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9yYW5kb20uanNcIjtcbmltcG9ydCB7IENsaWVudFNjb3BlZFN0b3JhZ2UgfSBmcm9tIFwiLi9jbGllbnQtc2NvcGVkLXN0b3JhZ2UuanNcIjtcbmltcG9ydCB7IGdldExvZ2luQ2FsbGJhY2tVcmwgfSBmcm9tIFwiLi9nZXRMb2dpblBhdGguanNcIjtcbi8qKlxuICogRG9lcyBubyByZWFsIGF1dGhlbnRpY2F0aW9uLCBqdXN0IGlzc3VlcyBhIHRlbXBvcmFyeSB0b2tlbiBmb3IgdGhlIHVzZXIuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGd1ZXN0QXV0aGVudGljYXRlKGFyZ3MpIHtcbiAgICBjb25zdCBzdG9yYWdlID0gbmV3IENsaWVudFNjb3BlZFN0b3JhZ2Uoe1xuICAgICAgICBzdG9yYWdlOiBhcmdzLnN0b3JhZ2UsXG4gICAgICAgIGNsaWVudElkOiBhcmdzLmNsaWVudC5jbGllbnRJZCxcbiAgICAgICAgZWNvc3lzdGVtOiBhcmdzLmVjb3N5c3RlbSxcbiAgICB9KTtcbiAgICBsZXQgc2Vzc2lvbklkID0gYXdhaXQgc3RvcmFnZS5nZXRHdWVzdFNlc3Npb25JZCgpO1xuICAgIGlmICghc2Vzc2lvbklkKSB7XG4gICAgICAgIHNlc3Npb25JZCA9IHJhbmRvbUJ5dGVzSGV4KDMyKTtcbiAgICAgICAgc3RvcmFnZS5zYXZlR3Vlc3RTZXNzaW9uSWQoc2Vzc2lvbklkKTtcbiAgICB9XG4gICAgY29uc3QgY2xpZW50RmV0Y2ggPSBnZXRDbGllbnRGZXRjaChhcmdzLmNsaWVudCwgYXJncy5lY29zeXN0ZW0pO1xuICAgIGNvbnN0IHBhdGggPSBnZXRMb2dpbkNhbGxiYWNrVXJsKHtcbiAgICAgICAgYXV0aE9wdGlvbjogXCJndWVzdFwiLFxuICAgICAgICBjbGllbnQ6IGFyZ3MuY2xpZW50LFxuICAgICAgICBlY29zeXN0ZW06IGFyZ3MuZWNvc3lzdGVtLFxuICAgIH0pO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNsaWVudEZldGNoKGAke3BhdGh9YCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHNlc3Npb25JZCxcbiAgICAgICAgfSksXG4gICAgfSk7XG4gICAgaWYgKCFyZXMub2spXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZW5lcmF0ZSBndWVzdCBhY2NvdW50XCIpO1xuICAgIHJldHVybiAoYXdhaXQgcmVzLmpzb24oKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ndWVzdC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q2xpZW50RmV0Y2giLCJzdHJpbmdpZnkiLCJyYW5kb21CeXRlc0hleCIsIkNsaWVudFNjb3BlZFN0b3JhZ2UiLCJnZXRMb2dpbkNhbGxiYWNrVXJsIiwiZ3Vlc3RBdXRoZW50aWNhdGUiLCJhcmdzIiwic3RvcmFnZSIsImNsaWVudElkIiwiY2xpZW50IiwiZWNvc3lzdGVtIiwic2Vzc2lvbklkIiwiZ2V0R3Vlc3RTZXNzaW9uSWQiLCJzYXZlR3Vlc3RTZXNzaW9uSWQiLCJjbGllbnRGZXRjaCIsInBhdGgiLCJhdXRoT3B0aW9uIiwicmVzIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJvayIsIkVycm9yIiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/guest.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/jwt.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/jwt.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customJwt: function() { return /* binding */ customJwt; }\n/* harmony export */ });\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _native_helpers_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../native/helpers/constants.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/constants.js\");\n/* harmony import */ var _native_helpers_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../native/helpers/errors.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/errors.js\");\n\n\n\n\nasync function customJwt(args) {\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(args.client, args.ecosystem);\n    const res = await clientFetch(_native_helpers_constants_js__WEBPACK_IMPORTED_MODULE_1__.ROUTE_AUTH_JWT_CALLBACK, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            jwt: args.jwt,\n            developerClientId: args.client.clientId\n        })\n    });\n    if (!res.ok) {\n        const error = await res.json();\n        throw new Error(\"JWT authentication error: \".concat(error.message));\n    }\n    try {\n        const { verifiedToken } = await res.json();\n        return {\n            storedToken: verifiedToken\n        };\n    } catch (e) {\n        throw new Error((0,_native_helpers_errors_js__WEBPACK_IMPORTED_MODULE_3__.createErrorMessage)(\"Malformed response from post jwt authentication\", e));\n    }\n} //# sourceMappingURL=jwt.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL2p3dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RDtBQUNOO0FBQ3NCO0FBQ1I7QUFDN0QsZUFBZUksVUFBVUMsSUFBSTtJQUNoQyxNQUFNQyxjQUFjTiwrREFBY0EsQ0FBQ0ssS0FBS0UsTUFBTSxFQUFFRixLQUFLRyxTQUFTO0lBQzlELE1BQU1DLE1BQU0sTUFBTUgsWUFBWUosaUZBQXVCQSxFQUFFO1FBQ25EUSxRQUFRO1FBQ1JDLFNBQVM7WUFDTCxnQkFBZ0I7UUFDcEI7UUFDQUMsTUFBTVgseURBQVNBLENBQUM7WUFDWlksS0FBS1IsS0FBS1EsR0FBRztZQUNiQyxtQkFBbUJULEtBQUtFLE1BQU0sQ0FBQ1EsUUFBUTtRQUMzQztJQUNKO0lBQ0EsSUFBSSxDQUFDTixJQUFJTyxFQUFFLEVBQUU7UUFDVCxNQUFNQyxRQUFRLE1BQU1SLElBQUlTLElBQUk7UUFDNUIsTUFBTSxJQUFJQyxNQUFNLDZCQUEyQyxPQUFkRixNQUFNRyxPQUFPO0lBQzlEO0lBQ0EsSUFBSTtRQUNBLE1BQU0sRUFBRUMsYUFBYSxFQUFFLEdBQUcsTUFBTVosSUFBSVMsSUFBSTtRQUN4QyxPQUFPO1lBQUVJLGFBQWFEO1FBQWM7SUFDeEMsRUFDQSxPQUFPRSxHQUFHO1FBQ04sTUFBTSxJQUFJSixNQUFNaEIsNkVBQWtCQSxDQUFDLG1EQUFtRG9CO0lBQzFGO0FBQ0osRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL2NvcmUvYXV0aGVudGljYXRpb24vand0LmpzPzViNmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyBST1VURV9BVVRIX0pXVF9DQUxMQkFDSyB9IGZyb20gXCIuLi8uLi9uYXRpdmUvaGVscGVycy9jb25zdGFudHMuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUVycm9yTWVzc2FnZSB9IGZyb20gXCIuLi8uLi9uYXRpdmUvaGVscGVycy9lcnJvcnMuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjdXN0b21Kd3QoYXJncykge1xuICAgIGNvbnN0IGNsaWVudEZldGNoID0gZ2V0Q2xpZW50RmV0Y2goYXJncy5jbGllbnQsIGFyZ3MuZWNvc3lzdGVtKTtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnRGZXRjaChST1VURV9BVVRIX0pXVF9DQUxMQkFDSywge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgfSxcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIGp3dDogYXJncy5qd3QsXG4gICAgICAgICAgICBkZXZlbG9wZXJDbGllbnRJZDogYXJncy5jbGllbnQuY2xpZW50SWQsXG4gICAgICAgIH0pLFxuICAgIH0pO1xuICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBKV1QgYXV0aGVudGljYXRpb24gZXJyb3I6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgeyB2ZXJpZmllZFRva2VuIH0gPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgICByZXR1cm4geyBzdG9yZWRUb2tlbjogdmVyaWZpZWRUb2tlbiB9O1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoY3JlYXRlRXJyb3JNZXNzYWdlKFwiTWFsZm9ybWVkIHJlc3BvbnNlIGZyb20gcG9zdCBqd3QgYXV0aGVudGljYXRpb25cIiwgZSkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWp3dC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q2xpZW50RmV0Y2giLCJzdHJpbmdpZnkiLCJST1VURV9BVVRIX0pXVF9DQUxMQkFDSyIsImNyZWF0ZUVycm9yTWVzc2FnZSIsImN1c3RvbUp3dCIsImFyZ3MiLCJjbGllbnRGZXRjaCIsImNsaWVudCIsImVjb3N5c3RlbSIsInJlcyIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5Iiwiand0IiwiZGV2ZWxvcGVyQ2xpZW50SWQiLCJjbGllbnRJZCIsIm9rIiwiZXJyb3IiLCJqc29uIiwiRXJyb3IiLCJtZXNzYWdlIiwidmVyaWZpZWRUb2tlbiIsInN0b3JlZFRva2VuIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/jwt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/linkAccount.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/linkAccount.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLinkedProfilesInternal: function() { return /* binding */ getLinkedProfilesInternal; },\n/* harmony export */   linkAccount: function() { return /* binding */ linkAccount; },\n/* harmony export */   unlinkAccount: function() { return /* binding */ unlinkAccount; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\n\n\n/**\n * @description\n * Links a new account to the current one using an auth token.\n * For the public-facing API, use `wallet.linkProfile` instead.\n *\n * @internal\n */ async function linkAccount(param) {\n    let { client, ecosystem, tokenToLink, storage } = param;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    const IN_APP_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\");\n    const currentAccountToken = await storage.getAuthCookie();\n    if (!currentAccountToken) {\n        throw new Error(\"Failed to link account, no user logged in\");\n    }\n    const headers = {\n        Authorization: \"Bearer iaw-auth-token:\".concat(currentAccountToken),\n        \"Content-Type\": \"application/json\"\n    };\n    const linkedDetailsResp = await clientFetch(\"\".concat(IN_APP_URL, \"/api/2024-05-05/account/connect\"), {\n        method: \"POST\",\n        headers,\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            accountAuthTokenToConnect: tokenToLink\n        })\n    });\n    if (!linkedDetailsResp.ok) {\n        const body = await linkedDetailsResp.json();\n        throw new Error(body.message || \"Failed to link account.\");\n    }\n    const { linkedAccounts } = await linkedDetailsResp.json();\n    return linkedAccounts !== null && linkedAccounts !== void 0 ? linkedAccounts : [];\n}\n/**\n * @description\n * Links a new account to the current one using an auth token.\n * For the public-facing API, use `wallet.linkProfile` instead.\n *\n * @internal\n */ async function unlinkAccount(param) {\n    let { client, ecosystem, profileToUnlink, storage } = param;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    const IN_APP_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\");\n    const currentAccountToken = await storage.getAuthCookie();\n    if (!currentAccountToken) {\n        throw new Error(\"Failed to unlink account, no user logged in\");\n    }\n    const headers = {\n        Authorization: \"Bearer iaw-auth-token:\".concat(currentAccountToken),\n        \"Content-Type\": \"application/json\"\n    };\n    const linkedDetailsResp = await clientFetch(\"\".concat(IN_APP_URL, \"/api/2024-05-05/account/disconnect\"), {\n        method: \"POST\",\n        headers,\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(profileToUnlink)\n    });\n    if (!linkedDetailsResp.ok) {\n        const body = await linkedDetailsResp.json();\n        throw new Error(body.message || \"Failed to unlink account.\");\n    }\n    const { linkedAccounts } = await linkedDetailsResp.json();\n    return linkedAccounts !== null && linkedAccounts !== void 0 ? linkedAccounts : [];\n}\n/**\n * @description\n * Gets the linked accounts for the current user.\n * For the public-facing API, use `wallet.getProfiles` instead.\n *\n * @internal\n */ async function getLinkedProfilesInternal(param) {\n    let { client, ecosystem, storage } = param;\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(client, ecosystem);\n    const IN_APP_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\");\n    const currentAccountToken = await storage.getAuthCookie();\n    if (!currentAccountToken) {\n        throw new Error(\"Failed to get linked accounts, no user logged in\");\n    }\n    const headers = {\n        Authorization: \"Bearer iaw-auth-token:\".concat(currentAccountToken),\n        \"Content-Type\": \"application/json\"\n    };\n    const linkedAccountsResp = await clientFetch(\"\".concat(IN_APP_URL, \"/api/2024-05-05/accounts\"), {\n        method: \"GET\",\n        headers\n    });\n    if (!linkedAccountsResp.ok) {\n        const body = await linkedAccountsResp.json();\n        throw new Error(body.message || \"Failed to get linked accounts.\");\n    }\n    const { linkedAccounts } = await linkedAccountsResp.json();\n    return linkedAccounts !== null && linkedAccounts !== void 0 ? linkedAccounts : [];\n} //# sourceMappingURL=linkAccount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/linkAccount.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/passkeys.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/passkeys.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loginWithPasskey: function() { return /* binding */ loginWithPasskey; },\n/* harmony export */   registerPasskey: function() { return /* binding */ registerPasskey; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\n\n\nfunction getVerificationPath() {\n    return \"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/2024-05-05/login/passkey/callback\");\n}\nfunction getChallengePath(type, username) {\n    return \"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/2024-05-05/login/passkey?type=\").concat(type).concat(username ? \"&username=\".concat(username) : \"\");\n}\nasync function registerPasskey(options) {\n    var _options_ecosystem, _options_ecosystem1, _options_storage;\n    if (!options.passkeyClient.isAvailable()) {\n        throw new Error(\"Passkeys are not available on this device\");\n    }\n    const fetchWithId = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_1__.getClientFetch)(options.client, options.ecosystem);\n    var _options_username;\n    const generatedName = (_options_username = options.username) !== null && _options_username !== void 0 ? _options_username : generateUsername(options.ecosystem);\n    // 1. request challenge from  server\n    const res = await fetchWithId(getChallengePath(\"sign-up\", generatedName));\n    const challengeData = await res.json();\n    if (!challengeData.challenge) {\n        throw new Error(\"No challenge received\");\n    }\n    const challenge = challengeData.challenge;\n    // 2. initiate registration\n    const registration = await options.passkeyClient.register({\n        name: generatedName,\n        challenge,\n        rp: options.rp\n    });\n    const customHeaders = {};\n    if ((_options_ecosystem = options.ecosystem) === null || _options_ecosystem === void 0 ? void 0 : _options_ecosystem.partnerId) {\n        customHeaders[\"x-ecosystem-partner-id\"] = options.ecosystem.partnerId;\n    }\n    if ((_options_ecosystem1 = options.ecosystem) === null || _options_ecosystem1 === void 0 ? void 0 : _options_ecosystem1.id) {\n        customHeaders[\"x-ecosystem-id\"] = options.ecosystem.id;\n    }\n    // 3. send the registration object to the server\n    const verifRes = await fetchWithId(getVerificationPath(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...customHeaders\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            type: \"sign-up\",\n            authenticatorData: registration.authenticatorData,\n            credentialId: registration.credentialId,\n            serverVerificationId: challengeData.serverVerificationId,\n            clientData: registration.clientData,\n            username: generatedName,\n            credential: {\n                publicKey: registration.credential.publicKey,\n                algorithm: registration.credential.algorithm\n            },\n            origin: registration.origin,\n            rpId: options.rp.id\n        })\n    });\n    const verifData = await verifRes.json();\n    if (!verifData || !verifData.storedToken) {\n        var _verifData_message;\n        throw new Error(\"Error verifying passkey: \".concat((_verifData_message = verifData.message) !== null && _verifData_message !== void 0 ? _verifData_message : \"unknown error\"));\n    }\n    // 4. store the credentialId in local storage\n    await ((_options_storage = options.storage) === null || _options_storage === void 0 ? void 0 : _options_storage.savePasskeyCredentialId(registration.credentialId));\n    // 5. returns back the IAW authentication token\n    return verifData;\n}\nasync function loginWithPasskey(options) {\n    var _options_storage, _options_ecosystem, _options_ecosystem1, _options_storage1;\n    if (!options.passkeyClient.isAvailable()) {\n        throw new Error(\"Passkeys are not available on this device\");\n    }\n    const fetchWithId = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_1__.getClientFetch)(options.client, options.ecosystem);\n    // 1. request challenge from  server/iframe\n    const [challengeData, credentialId] = await Promise.all([\n        fetchWithId(getChallengePath(\"sign-in\")).then((r)=>r.json()),\n        (_options_storage = options.storage) === null || _options_storage === void 0 ? void 0 : _options_storage.getPasskeyCredentialId()\n    ]);\n    if (!challengeData.challenge) {\n        throw new Error(\"No challenge received\");\n    }\n    const challenge = challengeData.challenge;\n    // 2. initiate login\n    const authentication = await options.passkeyClient.authenticate({\n        credentialId: credentialId !== null && credentialId !== void 0 ? credentialId : undefined,\n        challenge,\n        rp: options.rp\n    });\n    const customHeaders = {};\n    if ((_options_ecosystem = options.ecosystem) === null || _options_ecosystem === void 0 ? void 0 : _options_ecosystem.partnerId) {\n        customHeaders[\"x-ecosystem-partner-id\"] = options.ecosystem.partnerId;\n    }\n    if ((_options_ecosystem1 = options.ecosystem) === null || _options_ecosystem1 === void 0 ? void 0 : _options_ecosystem1.id) {\n        customHeaders[\"x-ecosystem-id\"] = options.ecosystem.id;\n    }\n    const verifRes = await fetchWithId(getVerificationPath(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...customHeaders\n        },\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_2__.stringify)({\n            type: \"sign-in\",\n            authenticatorData: authentication.authenticatorData,\n            credentialId: authentication.credentialId,\n            serverVerificationId: challengeData.serverVerificationId,\n            clientData: authentication.clientData,\n            signature: authentication.signature,\n            origin: authentication.origin,\n            rpId: options.rp.id\n        })\n    });\n    const verifData = await verifRes.json();\n    if (!verifData || !verifData.storedToken) {\n        var _verifData_message;\n        throw new Error(\"Error verifying passkey: \".concat((_verifData_message = verifData.message) !== null && _verifData_message !== void 0 ? _verifData_message : \"unknown error\"));\n    }\n    // 5. store the credentialId in local storage\n    await ((_options_storage1 = options.storage) === null || _options_storage1 === void 0 ? void 0 : _options_storage1.savePasskeyCredentialId(authentication.credentialId));\n    // 6. return the auth'd user type\n    return verifData;\n}\nfunction generateUsername(ecosystem) {\n    var _ecosystem_id;\n    return \"\".concat((_ecosystem_id = ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id) !== null && _ecosystem_id !== void 0 ? _ecosystem_id : \"wallet\", \"-\").concat(new Date().toISOString());\n} //# sourceMappingURL=passkeys.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/passkeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/siwe.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/siwe.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   siweAuthenticate: function() { return /* binding */ siweAuthenticate; }\n/* harmony export */ });\n/* harmony import */ var _auth_core_sign_login_payload_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../auth/core/sign-login-payload.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/auth/core/sign-login-payload.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _getLoginPath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getLoginPath.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/getLoginPath.js\");\n\n\n\n\n/**\n * @internal\n */ async function siweAuthenticate(args) {\n    const { wallet, chain } = args;\n    // only connect if the wallet doesn't already have an account\n    const account = wallet.getAccount() || await wallet.connect({\n        client: args.client\n    });\n    const clientFetch = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_0__.getClientFetch)(args.client, args.ecosystem);\n    const payload = await (async ()=>{\n        const path = (0,_getLoginPath_js__WEBPACK_IMPORTED_MODULE_1__.getLoginUrl)({\n            authOption: \"wallet\",\n            client: args.client,\n            ecosystem: args.ecosystem\n        });\n        const res = await clientFetch(\"\".concat(path, \"&address=\").concat(account.address, \"&chainId=\").concat(chain.id));\n        if (!res.ok) throw new Error(\"Failed to generate SIWE login payload\");\n        return await res.json();\n    })();\n    const { signature } = await (0,_auth_core_sign_login_payload_js__WEBPACK_IMPORTED_MODULE_2__.signLoginPayload)({\n        payload,\n        account\n    });\n    const authResult = await (async ()=>{\n        const path = (0,_getLoginPath_js__WEBPACK_IMPORTED_MODULE_1__.getLoginCallbackUrl)({\n            authOption: \"wallet\",\n            client: args.client,\n            ecosystem: args.ecosystem\n        });\n        const res = await clientFetch(\"\".concat(path, \"&signature=\").concat(signature, \"&payload=\").concat(encodeURIComponent(payload)), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_3__.stringify)({\n                signature,\n                payload\n            })\n        });\n        if (!res.ok) throw new Error(\"Failed to verify SIWE signature\");\n        return await res.json();\n    })();\n    return authResult;\n} //# sourceMappingURL=siwe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2F1dGhlbnRpY2F0aW9uL3Npd2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBK0U7QUFDbkI7QUFDTjtBQUNlO0FBQ3JFOztDQUVDLEdBQ00sZUFBZUssaUJBQWlCQyxJQUFJO0lBQ3ZDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR0Y7SUFDMUIsNkRBQTZEO0lBQzdELE1BQU1HLFVBQVVGLE9BQU9HLFVBQVUsTUFBTyxNQUFNSCxPQUFPSSxPQUFPLENBQUM7UUFBRUMsUUFBUU4sS0FBS00sTUFBTTtJQUFDO0lBQ25GLE1BQU1DLGNBQWNaLCtEQUFjQSxDQUFDSyxLQUFLTSxNQUFNLEVBQUVOLEtBQUtRLFNBQVM7SUFDOUQsTUFBTUMsVUFBVSxNQUFNLENBQUM7UUFDbkIsTUFBTUMsT0FBT1osNkRBQVdBLENBQUM7WUFDckJhLFlBQVk7WUFDWkwsUUFBUU4sS0FBS00sTUFBTTtZQUNuQkUsV0FBV1IsS0FBS1EsU0FBUztRQUM3QjtRQUNBLE1BQU1JLE1BQU0sTUFBTUwsWUFBWSxHQUFtQkosT0FBaEJPLE1BQUssYUFBc0NSLE9BQTNCQyxRQUFRVSxPQUFPLEVBQUMsYUFBb0IsT0FBVFgsTUFBTVksRUFBRTtRQUNwRixJQUFJLENBQUNGLElBQUlHLEVBQUUsRUFDUCxNQUFNLElBQUlDLE1BQU07UUFDcEIsT0FBUSxNQUFNSixJQUFJSyxJQUFJO0lBQzFCO0lBQ0EsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBRyxNQUFNeEIsa0ZBQWdCQSxDQUFDO1FBQUVlO1FBQVNOO0lBQVE7SUFDaEUsTUFBTWdCLGFBQWEsTUFBTSxDQUFDO1FBQ3RCLE1BQU1ULE9BQU9iLHFFQUFtQkEsQ0FBQztZQUM3QmMsWUFBWTtZQUNaTCxRQUFRTixLQUFLTSxNQUFNO1lBQ25CRSxXQUFXUixLQUFLUSxTQUFTO1FBQzdCO1FBQ0EsTUFBTUksTUFBTSxNQUFNTCxZQUFZLEdBQXFCVyxPQUFsQlIsTUFBSyxlQUFrQ1UsT0FBckJGLFdBQVUsYUFBdUMsT0FBNUJFLG1CQUFtQlgsV0FBWTtZQUNuR1ksUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGdCQUFnQjtZQUNwQjtZQUNBQyxNQUFNM0IseURBQVNBLENBQUM7Z0JBQ1pzQjtnQkFDQVQ7WUFDSjtRQUNKO1FBQ0EsSUFBSSxDQUFDRyxJQUFJRyxFQUFFLEVBQ1AsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCLE9BQVEsTUFBTUosSUFBSUssSUFBSTtJQUMxQjtJQUNBLE9BQU9FO0FBQ1gsRUFDQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL2NvcmUvYXV0aGVudGljYXRpb24vc2l3ZS5qcz9iMDM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNpZ25Mb2dpblBheWxvYWQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vYXV0aC9jb3JlL3NpZ24tbG9naW4tcGF5bG9hZC5qc1wiO1xuaW1wb3J0IHsgZ2V0Q2xpZW50RmV0Y2ggfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvZmV0Y2guanNcIjtcbmltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyBnZXRMb2dpbkNhbGxiYWNrVXJsLCBnZXRMb2dpblVybCB9IGZyb20gXCIuL2dldExvZ2luUGF0aC5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpd2VBdXRoZW50aWNhdGUoYXJncykge1xuICAgIGNvbnN0IHsgd2FsbGV0LCBjaGFpbiB9ID0gYXJncztcbiAgICAvLyBvbmx5IGNvbm5lY3QgaWYgdGhlIHdhbGxldCBkb2Vzbid0IGFscmVhZHkgaGF2ZSBhbiBhY2NvdW50XG4gICAgY29uc3QgYWNjb3VudCA9IHdhbGxldC5nZXRBY2NvdW50KCkgfHwgKGF3YWl0IHdhbGxldC5jb25uZWN0KHsgY2xpZW50OiBhcmdzLmNsaWVudCB9KSk7XG4gICAgY29uc3QgY2xpZW50RmV0Y2ggPSBnZXRDbGllbnRGZXRjaChhcmdzLmNsaWVudCwgYXJncy5lY29zeXN0ZW0pO1xuICAgIGNvbnN0IHBheWxvYWQgPSBhd2FpdCAoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBwYXRoID0gZ2V0TG9naW5Vcmwoe1xuICAgICAgICAgICAgYXV0aE9wdGlvbjogXCJ3YWxsZXRcIixcbiAgICAgICAgICAgIGNsaWVudDogYXJncy5jbGllbnQsXG4gICAgICAgICAgICBlY29zeXN0ZW06IGFyZ3MuZWNvc3lzdGVtLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgY2xpZW50RmV0Y2goYCR7cGF0aH0mYWRkcmVzcz0ke2FjY291bnQuYWRkcmVzc30mY2hhaW5JZD0ke2NoYWluLmlkfWApO1xuICAgICAgICBpZiAoIXJlcy5vaylcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZW5lcmF0ZSBTSVdFIGxvZ2luIHBheWxvYWRcIik7XG4gICAgICAgIHJldHVybiAoYXdhaXQgcmVzLmpzb24oKSk7XG4gICAgfSkoKTtcbiAgICBjb25zdCB7IHNpZ25hdHVyZSB9ID0gYXdhaXQgc2lnbkxvZ2luUGF5bG9hZCh7IHBheWxvYWQsIGFjY291bnQgfSk7XG4gICAgY29uc3QgYXV0aFJlc3VsdCA9IGF3YWl0IChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBnZXRMb2dpbkNhbGxiYWNrVXJsKHtcbiAgICAgICAgICAgIGF1dGhPcHRpb246IFwid2FsbGV0XCIsXG4gICAgICAgICAgICBjbGllbnQ6IGFyZ3MuY2xpZW50LFxuICAgICAgICAgICAgZWNvc3lzdGVtOiBhcmdzLmVjb3N5c3RlbSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGNsaWVudEZldGNoKGAke3BhdGh9JnNpZ25hdHVyZT0ke3NpZ25hdHVyZX0mcGF5bG9hZD0ke2VuY29kZVVSSUNvbXBvbmVudChwYXlsb2FkKX1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IHN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghcmVzLm9rKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHZlcmlmeSBTSVdFIHNpZ25hdHVyZVwiKTtcbiAgICAgICAgcmV0dXJuIChhd2FpdCByZXMuanNvbigpKTtcbiAgICB9KSgpO1xuICAgIHJldHVybiBhdXRoUmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2l3ZS5qcy5tYXAiXSwibmFtZXMiOlsic2lnbkxvZ2luUGF5bG9hZCIsImdldENsaWVudEZldGNoIiwic3RyaW5naWZ5IiwiZ2V0TG9naW5DYWxsYmFja1VybCIsImdldExvZ2luVXJsIiwic2l3ZUF1dGhlbnRpY2F0ZSIsImFyZ3MiLCJ3YWxsZXQiLCJjaGFpbiIsImFjY291bnQiLCJnZXRBY2NvdW50IiwiY29ubmVjdCIsImNsaWVudCIsImNsaWVudEZldGNoIiwiZWNvc3lzdGVtIiwicGF5bG9hZCIsInBhdGgiLCJhdXRoT3B0aW9uIiwicmVzIiwiYWRkcmVzcyIsImlkIiwib2siLCJFcnJvciIsImpzb24iLCJzaWduYXR1cmUiLCJhdXRoUmVzdWx0IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/siwe.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/wallet/enclave-wallet.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/wallet/enclave-wallet.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EnclaveWallet: function() { return /* binding */ EnclaveWallet; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../analytics/track/transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/analytics/track/transaction.js\");\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../rpc/actions/eth_sendRawTransaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../utils/signatures/helpers/parse-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parse-typed-data.js\");\n/* harmony import */ var _actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions/get-enclave-user-status.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js\");\n/* harmony import */ var _actions_sign_message_enclave_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../actions/sign-message.enclave.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-message.enclave.js\");\n/* harmony import */ var _actions_sign_transaction_enclave_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../actions/sign-transaction.enclave.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-transaction.enclave.js\");\n/* harmony import */ var _actions_sign_typed_data_enclave_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../actions/sign-typed-data.enclave.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/sign-typed-data.enclave.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass EnclaveWallet {\n    /**\n     * Store the auth token for use\n     * @returns `{walletAddress: string }` The user's wallet details\n     * @internal\n     */ async postWalletSetUp(authResult) {\n        await this.localStorage.saveAuthCookie(authResult.storedToken.cookieString);\n    }\n    /**\n     * Gets the current user's details\n     * @internal\n     */ async getUserWalletStatus() {\n        var _userStatus_linkedAccounts_find, _userStatus_linkedAccounts_find1;\n        const token = await this.localStorage.getAuthCookie();\n        if (!token) {\n            return {\n                status: \"Logged Out\"\n            };\n        }\n        const userStatus = await (0,_actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__.getUserStatus)({\n            authToken: token,\n            client: this.client,\n            ecosystem: this.ecosystem\n        });\n        if (!userStatus) {\n            return {\n                status: \"Logged Out\"\n            };\n        }\n        const wallet = userStatus.wallets[0];\n        const authDetails = {\n            email: (_userStatus_linkedAccounts_find = userStatus.linkedAccounts.find((account)=>account.details.email !== undefined)) === null || _userStatus_linkedAccounts_find === void 0 ? void 0 : _userStatus_linkedAccounts_find.details.email,\n            phoneNumber: (_userStatus_linkedAccounts_find1 = userStatus.linkedAccounts.find((account)=>account.details.phone !== undefined)) === null || _userStatus_linkedAccounts_find1 === void 0 ? void 0 : _userStatus_linkedAccounts_find1.details.phone,\n            userWalletId: userStatus.id || \"\",\n            recoveryShareManagement: \"ENCLAVE\"\n        };\n        if (!wallet) {\n            return {\n                status: \"Logged In, Wallet Uninitialized\",\n                authDetails\n            };\n        }\n        return {\n            status: \"Logged In, Wallet Initialized\",\n            walletAddress: wallet.address,\n            authDetails,\n            account: await this.getAccount()\n        };\n    }\n    /**\n     * Returns an account to perform wallet operations\n     * @internal\n     */ async getAccount() {\n        const client = this.client;\n        const storage = this.localStorage;\n        const address = this.address;\n        const ecosystem = this.ecosystem;\n        const _signTransaction = async (tx)=>{\n            const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_1__.getRpcClient)({\n                client,\n                chain: (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(tx.chainId)\n            });\n            const transaction = {\n                to: tx.to ? (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_3__.getAddress)(tx.to) : undefined,\n                data: tx.data,\n                value: typeof tx.value === \"bigint\" ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.value) : undefined,\n                gas: typeof tx.gas === \"bigint\" ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.gas + tx.gas / BigInt(10)) : undefined,\n                nonce: typeof tx.nonce === \"number\" ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.nonce) : (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_thirdweb_dist_esm_rpc_actions_eth_getTransactionCount_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../../rpc/actions/eth_getTransactionCount.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionCount.js\")).then((param)=>{\n                    let { eth_getTransactionCount } = param;\n                    return eth_getTransactionCount(rpcRequest, {\n                        address: this.address,\n                        blockTag: \"pending\"\n                    });\n                })),\n                chainId: (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.chainId)\n            };\n            if (typeof tx.maxFeePerGas === \"bigint\") {\n                transaction.maxFeePerGas = (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.maxFeePerGas);\n                transaction.maxPriorityFeePerGas = typeof tx.maxPriorityFeePerGas === \"bigint\" ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.maxPriorityFeePerGas) : undefined;\n                transaction.type = 2;\n            } else {\n                transaction.gasPrice = typeof tx.gasPrice === \"bigint\" ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(tx.gasPrice) : undefined;\n                transaction.type = 0;\n            }\n            return (0,_actions_sign_transaction_enclave_js__WEBPACK_IMPORTED_MODULE_5__.signTransaction)({\n                client,\n                storage,\n                payload: transaction\n            });\n        };\n        return {\n            address: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_3__.getAddress)(address),\n            async signTransaction (tx) {\n                if (!tx.chainId) {\n                    throw new Error(\"chainId required in tx to sign\");\n                }\n                return _signTransaction({\n                    chainId: tx.chainId,\n                    ...tx\n                });\n            },\n            async sendTransaction (tx) {\n                const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_1__.getRpcClient)({\n                    client,\n                    chain: (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(tx.chainId)\n                });\n                const signedTx = await _signTransaction(tx);\n                const transactionHash = await (0,_rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_6__.eth_sendRawTransaction)(rpcRequest, signedTx);\n                var _tx_to;\n                (0,_analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_7__.trackTransaction)({\n                    client,\n                    ecosystem,\n                    chainId: tx.chainId,\n                    walletAddress: address,\n                    walletType: \"inApp\",\n                    transactionHash,\n                    contractAddress: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                    gasPrice: tx.gasPrice\n                });\n                return {\n                    transactionHash\n                };\n            },\n            async signMessage (param) {\n                let { message } = param;\n                const messagePayload = (()=>{\n                    if (typeof message === \"string\") {\n                        return {\n                            message,\n                            isRaw: false\n                        };\n                    }\n                    return {\n                        message: typeof message.raw === \"string\" ? message.raw : (0,viem__WEBPACK_IMPORTED_MODULE_8__.bytesToHex)(message.raw),\n                        isRaw: true\n                    };\n                })();\n                const { signature } = await (0,_actions_sign_message_enclave_js__WEBPACK_IMPORTED_MODULE_9__.signMessage)({\n                    client,\n                    payload: messagePayload,\n                    storage\n                });\n                return signature;\n            },\n            async signTypedData (_typedData) {\n                const parsedTypedData = (0,_utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__.parseTypedData)(_typedData);\n                const { signature } = await (0,_actions_sign_typed_data_enclave_js__WEBPACK_IMPORTED_MODULE_11__.signTypedData)({\n                    client,\n                    payload: parsedTypedData,\n                    storage\n                });\n                return signature;\n            }\n        };\n    }\n    constructor({ client, ecosystem, address, storage }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"address\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.ecosystem = ecosystem;\n        this.address = address;\n        this.localStorage = storage;\n    }\n} //# sourceMappingURL=enclave-wallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/wallet/enclave-wallet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/constants.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/constants.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_SHARE_INDEX: function() { return /* binding */ AUTH_SHARE_INDEX; },\n/* harmony export */   AWS_REGION: function() { return /* binding */ AWS_REGION; },\n/* harmony export */   COGNITO_IDENTITY_POOL_ID: function() { return /* binding */ COGNITO_IDENTITY_POOL_ID; },\n/* harmony export */   DEVICE_SHARE_INDEX: function() { return /* binding */ DEVICE_SHARE_INDEX; },\n/* harmony export */   DEVICE_SHARE_MISSING_MESSAGE: function() { return /* binding */ DEVICE_SHARE_MISSING_MESSAGE; },\n/* harmony export */   ENCLAVE_KMS_KEY_ARN: function() { return /* binding */ ENCLAVE_KMS_KEY_ARN; },\n/* harmony export */   GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V1: function() { return /* binding */ GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V1; },\n/* harmony export */   GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V2: function() { return /* binding */ GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V2; },\n/* harmony export */   INVALID_DEVICE_SHARE_MESSAGE: function() { return /* binding */ INVALID_DEVICE_SHARE_MESSAGE; },\n/* harmony export */   RECOVERY_SHARE_INDEX: function() { return /* binding */ RECOVERY_SHARE_INDEX; },\n/* harmony export */   ROUTE_AUTH_COGNITO_ID_TOKEN_V1: function() { return /* binding */ ROUTE_AUTH_COGNITO_ID_TOKEN_V1; },\n/* harmony export */   ROUTE_AUTH_COGNITO_ID_TOKEN_V2: function() { return /* binding */ ROUTE_AUTH_COGNITO_ID_TOKEN_V2; },\n/* harmony export */   ROUTE_AUTH_ENDPOINT_CALLBACK: function() { return /* binding */ ROUTE_AUTH_ENDPOINT_CALLBACK; },\n/* harmony export */   ROUTE_AUTH_JWT_CALLBACK: function() { return /* binding */ ROUTE_AUTH_JWT_CALLBACK; },\n/* harmony export */   ROUTE_COGNITO_IDENTITY_POOL_URL: function() { return /* binding */ ROUTE_COGNITO_IDENTITY_POOL_URL; },\n/* harmony export */   ROUTE_EMBEDDED_WALLET_DETAILS: function() { return /* binding */ ROUTE_EMBEDDED_WALLET_DETAILS; },\n/* harmony export */   ROUTE_GET_USER_SHARES: function() { return /* binding */ ROUTE_GET_USER_SHARES; },\n/* harmony export */   ROUTE_STORE_USER_SHARES: function() { return /* binding */ ROUTE_STORE_USER_SHARES; },\n/* harmony export */   ROUTE_VERIFY_THIRDWEB_CLIENT_ID: function() { return /* binding */ ROUTE_VERIFY_THIRDWEB_CLIENT_ID; },\n/* harmony export */   THIRDWEB_SESSION_NONCE_HEADER: function() { return /* binding */ THIRDWEB_SESSION_NONCE_HEADER; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n\nconst AUTH_SHARE_ID = 3;\nconst AUTH_SHARE_INDEX = AUTH_SHARE_ID - 1;\nconst DEVICE_SHARE_ID = 1;\nconst DEVICE_SHARE_INDEX = DEVICE_SHARE_ID - 1;\nconst DEVICE_SHARE_MISSING_MESSAGE = \"Missing device share.\";\nconst INVALID_DEVICE_SHARE_MESSAGE = \"Invalid private key reconstructed from shares\";\nconst RECOVERY_SHARE_ID = 2;\nconst RECOVERY_SHARE_INDEX = RECOVERY_SHARE_ID - 1;\nconst AWS_REGION = \"us-west-2\";\nconst THIRDWEB_SESSION_NONCE_HEADER = \"x-session-nonce\";\nconst COGNITO_USER_POOL_ID = \"us-west-2_UFwLcZIpq\";\nconst COGNITO_IDENTITY_POOL_ID = \"us-west-2:2ad7ab1e-f48b-48a6-adfa-ac1090689c26\";\nconst GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V1 = \"arn:aws:lambda:us-west-2:324457261097:function:recovery-share-password-GenerateRecoverySharePassw-bbE5ZbVAToil\";\nconst GENERATE_RECOVERY_PASSWORD_LAMBDA_FUNCTION_V2 = \"arn:aws:lambda:us-west-2:324457261097:function:lambda-thirdweb-auth-enc-key-prod-ThirdwebAuthEncKeyFunction\";\nconst ENCLAVE_KMS_KEY_ARN = \"arn:aws:kms:us-west-2:324457261097:key/ccfb9ecd-f45d-4f37-864a-25fe72dcb49e\";\n// TODO allow overriding domain\nconst DOMAIN_URL_2023 = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebBaseUrl)(\"inAppWallet\");\nconst BASE_URL_2023 = \"\".concat(DOMAIN_URL_2023, \"/\");\nconst ROUTE_2023_10_20_API_BASE_PATH = \"\".concat(BASE_URL_2023, \"api/2023-10-20\");\nconst ROUTE_2024_05_05_API_BASE_PATH = \"\".concat(BASE_URL_2023, \"api/2024-05-05\");\nconst ROUTE_EMBEDDED_WALLET_DETAILS = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/embedded-wallet-user-details\");\nconst ROUTE_COGNITO_IDENTITY_POOL_URL = \"cognito-idp.\".concat(AWS_REGION, \".amazonaws.com/\").concat(COGNITO_USER_POOL_ID);\nconst ROUTE_STORE_USER_SHARES = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/embedded-wallet-shares\");\nconst ROUTE_GET_USER_SHARES = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/embedded-wallet-shares\");\nconst ROUTE_VERIFY_THIRDWEB_CLIENT_ID = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/verify-thirdweb-client-id\");\nconst ROUTE_AUTH_JWT_CALLBACK = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/validate-custom-jwt\");\nconst ROUTE_AUTH_ENDPOINT_CALLBACK = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/validate-custom-auth-endpoint\");\nconst ROUTE_AUTH_COGNITO_ID_TOKEN_V1 = \"\".concat(ROUTE_2023_10_20_API_BASE_PATH, \"/embedded-wallet/cognito-id-token\");\nconst ROUTE_AUTH_COGNITO_ID_TOKEN_V2 = \"\".concat(ROUTE_2024_05_05_API_BASE_PATH, \"/login/web-token-exchange\"); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9uYXRpdmUvaGVscGVycy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWtFO0FBQ2xFLE1BQU1DLGdCQUFnQjtBQUNmLE1BQU1DLG1CQUFtQkQsZ0JBQWdCLEVBQUU7QUFDbEQsTUFBTUUsa0JBQWtCO0FBQ2pCLE1BQU1DLHFCQUFxQkQsa0JBQWtCLEVBQUU7QUFDL0MsTUFBTUUsK0JBQStCLHdCQUF3QjtBQUM3RCxNQUFNQywrQkFBK0IsZ0RBQWdEO0FBQzVGLE1BQU1DLG9CQUFvQjtBQUNuQixNQUFNQyx1QkFBdUJELG9CQUFvQixFQUFFO0FBQ25ELE1BQU1FLGFBQWEsWUFBWTtBQUMvQixNQUFNQyxnQ0FBZ0Msa0JBQWtCO0FBQy9ELE1BQU1DLHVCQUF1QjtBQUN0QixNQUFNQywyQkFBMkIsaURBQWlEO0FBQ2xGLE1BQU1DLGdEQUFnRCxpSEFBaUg7QUFDdkssTUFBTUMsZ0RBQWdELDhHQUE4RztBQUNwSyxNQUFNQyxzQkFBc0IsOEVBQThFO0FBQ2pILCtCQUErQjtBQUMvQixNQUFNQyxrQkFBa0JoQixxRUFBa0JBLENBQUM7QUFDM0MsTUFBTWlCLGdCQUFnQixHQUFtQixPQUFoQkQsaUJBQWdCO0FBQ3pDLE1BQU1FLGlDQUFpQyxHQUFpQixPQUFkRCxlQUFjO0FBQ3hELE1BQU1FLGlDQUFpQyxHQUFpQixPQUFkRixlQUFjO0FBQ2pELE1BQU1HLGdDQUFnQyxHQUFrQyxPQUEvQkYsZ0NBQStCLGlEQUErQztBQUN2SCxNQUFNRyxrQ0FBa0MsZUFBMkNWLE9BQTVCRixZQUFXLG1CQUFzQyxPQUFyQkUsc0JBQXVCO0FBQzFHLE1BQU1XLDBCQUEwQixHQUFrQyxPQUEvQkosZ0NBQStCLDJDQUF5QztBQUMzRyxNQUFNSyx3QkFBd0IsR0FBa0MsT0FBL0JMLGdDQUErQiwyQ0FBeUM7QUFDekcsTUFBTU0sa0NBQWtDLEdBQWtDLE9BQS9CTixnQ0FBK0IsOENBQTRDO0FBQ3RILE1BQU1PLDBCQUEwQixHQUFrQyxPQUEvQlAsZ0NBQStCLHdDQUFzQztBQUN4RyxNQUFNUSwrQkFBK0IsR0FBa0MsT0FBL0JSLGdDQUErQixrREFBZ0Q7QUFDdkgsTUFBTVMsaUNBQWlDLEdBQWtDLE9BQS9CVCxnQ0FBK0IscUNBQW1DO0FBQzVHLE1BQU1VLGlDQUFpQyxHQUFrQyxPQUEvQlQsZ0NBQStCLDZCQUEyQixDQUMzRyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL25hdGl2ZS9oZWxwZXJzL2NvbnN0YW50cy5qcz9lOTI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFRoaXJkd2ViQmFzZVVybCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9kb21haW5zLmpzXCI7XG5jb25zdCBBVVRIX1NIQVJFX0lEID0gMztcbmV4cG9ydCBjb25zdCBBVVRIX1NIQVJFX0lOREVYID0gQVVUSF9TSEFSRV9JRCAtIDE7XG5jb25zdCBERVZJQ0VfU0hBUkVfSUQgPSAxO1xuZXhwb3J0IGNvbnN0IERFVklDRV9TSEFSRV9JTkRFWCA9IERFVklDRV9TSEFSRV9JRCAtIDE7XG5leHBvcnQgY29uc3QgREVWSUNFX1NIQVJFX01JU1NJTkdfTUVTU0FHRSA9IFwiTWlzc2luZyBkZXZpY2Ugc2hhcmUuXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9ERVZJQ0VfU0hBUkVfTUVTU0FHRSA9IFwiSW52YWxpZCBwcml2YXRlIGtleSByZWNvbnN0cnVjdGVkIGZyb20gc2hhcmVzXCI7XG5jb25zdCBSRUNPVkVSWV9TSEFSRV9JRCA9IDI7XG5leHBvcnQgY29uc3QgUkVDT1ZFUllfU0hBUkVfSU5ERVggPSBSRUNPVkVSWV9TSEFSRV9JRCAtIDE7XG5leHBvcnQgY29uc3QgQVdTX1JFR0lPTiA9IFwidXMtd2VzdC0yXCI7XG5leHBvcnQgY29uc3QgVEhJUkRXRUJfU0VTU0lPTl9OT05DRV9IRUFERVIgPSBcIngtc2Vzc2lvbi1ub25jZVwiO1xuY29uc3QgQ09HTklUT19VU0VSX1BPT0xfSUQgPSBcInVzLXdlc3QtMl9VRndMY1pJcHFcIjtcbmV4cG9ydCBjb25zdCBDT0dOSVRPX0lERU5USVRZX1BPT0xfSUQgPSBcInVzLXdlc3QtMjoyYWQ3YWIxZS1mNDhiLTQ4YTYtYWRmYS1hYzEwOTA2ODljMjZcIjtcbmV4cG9ydCBjb25zdCBHRU5FUkFURV9SRUNPVkVSWV9QQVNTV09SRF9MQU1CREFfRlVOQ1RJT05fVjEgPSBcImFybjphd3M6bGFtYmRhOnVzLXdlc3QtMjozMjQ0NTcyNjEwOTc6ZnVuY3Rpb246cmVjb3Zlcnktc2hhcmUtcGFzc3dvcmQtR2VuZXJhdGVSZWNvdmVyeVNoYXJlUGFzc3ctYmJFNVpiVkFUb2lsXCI7XG5leHBvcnQgY29uc3QgR0VORVJBVEVfUkVDT1ZFUllfUEFTU1dPUkRfTEFNQkRBX0ZVTkNUSU9OX1YyID0gXCJhcm46YXdzOmxhbWJkYTp1cy13ZXN0LTI6MzI0NDU3MjYxMDk3OmZ1bmN0aW9uOmxhbWJkYS10aGlyZHdlYi1hdXRoLWVuYy1rZXktcHJvZC1UaGlyZHdlYkF1dGhFbmNLZXlGdW5jdGlvblwiO1xuZXhwb3J0IGNvbnN0IEVOQ0xBVkVfS01TX0tFWV9BUk4gPSBcImFybjphd3M6a21zOnVzLXdlc3QtMjozMjQ0NTcyNjEwOTc6a2V5L2NjZmI5ZWNkLWY0NWQtNGYzNy04NjRhLTI1ZmU3MmRjYjQ5ZVwiO1xuLy8gVE9ETyBhbGxvdyBvdmVycmlkaW5nIGRvbWFpblxuY29uc3QgRE9NQUlOX1VSTF8yMDIzID0gZ2V0VGhpcmR3ZWJCYXNlVXJsKFwiaW5BcHBXYWxsZXRcIik7XG5jb25zdCBCQVNFX1VSTF8yMDIzID0gYCR7RE9NQUlOX1VSTF8yMDIzfS9gO1xuY29uc3QgUk9VVEVfMjAyM18xMF8yMF9BUElfQkFTRV9QQVRIID0gYCR7QkFTRV9VUkxfMjAyM31hcGkvMjAyMy0xMC0yMGA7XG5jb25zdCBST1VURV8yMDI0XzA1XzA1X0FQSV9CQVNFX1BBVEggPSBgJHtCQVNFX1VSTF8yMDIzfWFwaS8yMDI0LTA1LTA1YDtcbmV4cG9ydCBjb25zdCBST1VURV9FTUJFRERFRF9XQUxMRVRfREVUQUlMUyA9IGAke1JPVVRFXzIwMjNfMTBfMjBfQVBJX0JBU0VfUEFUSH0vZW1iZWRkZWQtd2FsbGV0L2VtYmVkZGVkLXdhbGxldC11c2VyLWRldGFpbHNgO1xuZXhwb3J0IGNvbnN0IFJPVVRFX0NPR05JVE9fSURFTlRJVFlfUE9PTF9VUkwgPSBgY29nbml0by1pZHAuJHtBV1NfUkVHSU9OfS5hbWF6b25hd3MuY29tLyR7Q09HTklUT19VU0VSX1BPT0xfSUR9YDtcbmV4cG9ydCBjb25zdCBST1VURV9TVE9SRV9VU0VSX1NIQVJFUyA9IGAke1JPVVRFXzIwMjNfMTBfMjBfQVBJX0JBU0VfUEFUSH0vZW1iZWRkZWQtd2FsbGV0L2VtYmVkZGVkLXdhbGxldC1zaGFyZXNgO1xuZXhwb3J0IGNvbnN0IFJPVVRFX0dFVF9VU0VSX1NIQVJFUyA9IGAke1JPVVRFXzIwMjNfMTBfMjBfQVBJX0JBU0VfUEFUSH0vZW1iZWRkZWQtd2FsbGV0L2VtYmVkZGVkLXdhbGxldC1zaGFyZXNgO1xuZXhwb3J0IGNvbnN0IFJPVVRFX1ZFUklGWV9USElSRFdFQl9DTElFTlRfSUQgPSBgJHtST1VURV8yMDIzXzEwXzIwX0FQSV9CQVNFX1BBVEh9L2VtYmVkZGVkLXdhbGxldC92ZXJpZnktdGhpcmR3ZWItY2xpZW50LWlkYDtcbmV4cG9ydCBjb25zdCBST1VURV9BVVRIX0pXVF9DQUxMQkFDSyA9IGAke1JPVVRFXzIwMjNfMTBfMjBfQVBJX0JBU0VfUEFUSH0vZW1iZWRkZWQtd2FsbGV0L3ZhbGlkYXRlLWN1c3RvbS1qd3RgO1xuZXhwb3J0IGNvbnN0IFJPVVRFX0FVVEhfRU5EUE9JTlRfQ0FMTEJBQ0sgPSBgJHtST1VURV8yMDIzXzEwXzIwX0FQSV9CQVNFX1BBVEh9L2VtYmVkZGVkLXdhbGxldC92YWxpZGF0ZS1jdXN0b20tYXV0aC1lbmRwb2ludGA7XG5leHBvcnQgY29uc3QgUk9VVEVfQVVUSF9DT0dOSVRPX0lEX1RPS0VOX1YxID0gYCR7Uk9VVEVfMjAyM18xMF8yMF9BUElfQkFTRV9QQVRIfS9lbWJlZGRlZC13YWxsZXQvY29nbml0by1pZC10b2tlbmA7XG5leHBvcnQgY29uc3QgUk9VVEVfQVVUSF9DT0dOSVRPX0lEX1RPS0VOX1YyID0gYCR7Uk9VVEVfMjAyNF8wNV8wNV9BUElfQkFTRV9QQVRIfS9sb2dpbi93ZWItdG9rZW4tZXhjaGFuZ2VgO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRUaGlyZHdlYkJhc2VVcmwiLCJBVVRIX1NIQVJFX0lEIiwiQVVUSF9TSEFSRV9JTkRFWCIsIkRFVklDRV9TSEFSRV9JRCIsIkRFVklDRV9TSEFSRV9JTkRFWCIsIkRFVklDRV9TSEFSRV9NSVNTSU5HX01FU1NBR0UiLCJJTlZBTElEX0RFVklDRV9TSEFSRV9NRVNTQUdFIiwiUkVDT1ZFUllfU0hBUkVfSUQiLCJSRUNPVkVSWV9TSEFSRV9JTkRFWCIsIkFXU19SRUdJT04iLCJUSElSRFdFQl9TRVNTSU9OX05PTkNFX0hFQURFUiIsIkNPR05JVE9fVVNFUl9QT09MX0lEIiwiQ09HTklUT19JREVOVElUWV9QT09MX0lEIiwiR0VORVJBVEVfUkVDT1ZFUllfUEFTU1dPUkRfTEFNQkRBX0ZVTkNUSU9OX1YxIiwiR0VORVJBVEVfUkVDT1ZFUllfUEFTU1dPUkRfTEFNQkRBX0ZVTkNUSU9OX1YyIiwiRU5DTEFWRV9LTVNfS0VZX0FSTiIsIkRPTUFJTl9VUkxfMjAyMyIsIkJBU0VfVVJMXzIwMjMiLCJST1VURV8yMDIzXzEwXzIwX0FQSV9CQVNFX1BBVEgiLCJST1VURV8yMDI0XzA1XzA1X0FQSV9CQVNFX1BBVEgiLCJST1VURV9FTUJFRERFRF9XQUxMRVRfREVUQUlMUyIsIlJPVVRFX0NPR05JVE9fSURFTlRJVFlfUE9PTF9VUkwiLCJST1VURV9TVE9SRV9VU0VSX1NIQVJFUyIsIlJPVVRFX0dFVF9VU0VSX1NIQVJFUyIsIlJPVVRFX1ZFUklGWV9USElSRFdFQl9DTElFTlRfSUQiLCJST1VURV9BVVRIX0pXVF9DQUxMQkFDSyIsIlJPVVRFX0FVVEhfRU5EUE9JTlRfQ0FMTEJBQ0siLCJST1VURV9BVVRIX0NPR05JVE9fSURfVE9LRU5fVjEiLCJST1VURV9BVVRIX0NPR05JVE9fSURfVE9LRU5fVjIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/errors.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/errors.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorMessages: function() { return /* binding */ ErrorMessages; },\n/* harmony export */   createErrorMessage: function() { return /* binding */ createErrorMessage; }\n/* harmony export */ });\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n\nconst ErrorMessages = {\n    invalidOtp: \"Your OTP code is invalid or expired. Please request a new code or try again.\",\n    missingRecoveryCode: \"Missing encryption key for user\"\n};\nconst createErrorMessage = (message, error)=>{\n    if (error instanceof Error) {\n        return \"\".concat(message, \": \").concat(error.message);\n    }\n    return \"\".concat(message, \": \").concat((0,_utils_json_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(error));\n}; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9uYXRpdmUvaGVscGVycy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNEO0FBQy9DLE1BQU1DLGdCQUFnQjtJQUN6QkMsWUFBWTtJQUNaQyxxQkFBcUI7QUFDekIsRUFBRTtBQUNLLE1BQU1DLHFCQUFxQixDQUFDQyxTQUFTQztJQUN4QyxJQUFJQSxpQkFBaUJDLE9BQU87UUFDeEIsT0FBTyxHQUFlRCxPQUFaRCxTQUFRLE1BQWtCLE9BQWRDLE1BQU1ELE9BQU87SUFDdkM7SUFDQSxPQUFPLEdBQWVMLE9BQVpLLFNBQVEsTUFBcUIsT0FBakJMLHlEQUFTQSxDQUFDTTtBQUNwQyxFQUFFLENBQ0Ysa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9uYXRpdmUvaGVscGVycy9lcnJvcnMuanM/M2UxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdXRpbHMvanNvbi5qc1wiO1xuZXhwb3J0IGNvbnN0IEVycm9yTWVzc2FnZXMgPSB7XG4gICAgaW52YWxpZE90cDogXCJZb3VyIE9UUCBjb2RlIGlzIGludmFsaWQgb3IgZXhwaXJlZC4gUGxlYXNlIHJlcXVlc3QgYSBuZXcgY29kZSBvciB0cnkgYWdhaW4uXCIsXG4gICAgbWlzc2luZ1JlY292ZXJ5Q29kZTogXCJNaXNzaW5nIGVuY3J5cHRpb24ga2V5IGZvciB1c2VyXCIsXG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUVycm9yTWVzc2FnZSA9IChtZXNzYWdlLCBlcnJvcikgPT4ge1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiBgJHttZXNzYWdlfTogJHtlcnJvci5tZXNzYWdlfWA7XG4gICAgfVxuICAgIHJldHVybiBgJHttZXNzYWdlfTogJHtzdHJpbmdpZnkoZXJyb3IpfWA7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6WyJzdHJpbmdpZnkiLCJFcnJvck1lc3NhZ2VzIiwiaW52YWxpZE90cCIsIm1pc3NpbmdSZWNvdmVyeUNvZGUiLCJjcmVhdGVFcnJvck1lc3NhZ2UiLCJtZXNzYWdlIiwiZXJyb3IiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/native/helpers/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractLogin: function() { return /* binding */ AbstractLogin; }\n/* harmony export */ });\n/**\n * @internal\n */ class AbstractLogin {\n    /**\n     * @internal\n     */ async sendEmailLoginOtp(param) {\n        let { email } = param;\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebEmailLoginOtp\",\n            params: {\n                email\n            }\n        });\n        return result;\n    }\n    /**\n     *\n     * @internal\n     */ async sendSmsLoginOtp(param) {\n        let { phoneNumber } = param;\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebSmsLoginOtp\",\n            params: {\n                phoneNumber\n            }\n        });\n        return result;\n    }\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * @internal\n     */ constructor({ baseUrl, querier, preLogin, postLogin, client, ecosystem }){\n        Object.defineProperty(this, \"LoginQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"preLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"postLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.baseUrl = baseUrl;\n        this.LoginQuerier = querier;\n        this.preLogin = preLogin;\n        this.postLogin = postLogin;\n        this.client = client;\n        this.ecosystem = ecosystem;\n    }\n} //# sourceMappingURL=abstract-login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvYWJzdHJhY3QtbG9naW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUE7SUFpRFQ7O0tBRUMsR0FDRCxNQUFNQyxrQkFBa0IsS0FBVSxFQUFFO1lBQVosRUFBRUMsS0FBSyxFQUFHLEdBQVY7UUFDcEIsTUFBTUMsU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRUw7WUFBTTtRQUNwQjtRQUNBLE9BQU9DO0lBQ1g7SUFDQTs7O0tBR0MsR0FDRCxNQUFNSyxnQkFBZ0IsS0FBZ0IsRUFBRTtZQUFsQixFQUFFQyxXQUFXLEVBQUcsR0FBaEI7UUFDbEIsTUFBTU4sU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRUU7WUFBWTtRQUMxQjtRQUNBLE9BQU9OO0lBQ1g7SUFwRUE7OztLQUdDLEdBQ0RPLFlBQVksRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRyxDQUFFO1FBQ3ZFQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLGdCQUFnQjtZQUN4Q0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsWUFBWTtZQUNwQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsYUFBYTtZQUNyQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsVUFBVTtZQUNsQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVztZQUNuQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsYUFBYTtZQUNyQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0EsSUFBSSxDQUFDWCxPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDUCxZQUFZLEdBQUdRO1FBQ3BCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNDLFNBQVMsR0FBR0E7UUFDakIsSUFBSSxDQUFDQyxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxTQUFTLEdBQUdBO0lBQ3JCO0FBc0JKLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvYWJzdHJhY3QtbG9naW4uanM/YTM2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgQWJzdHJhY3RMb2dpbiB7XG4gICAgLyoqXG4gICAgICogVXNlZCB0byBtYW5hZ2UgdGhlIHVzZXIncyBhdXRoIHN0YXRlcy4gVGhpcyBzaG91bGQgbm90IGJlIGluc3RhbnRpYXRlZCBkaXJlY3RseS5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIHF1ZXJpZXIsIHByZUxvZ2luLCBwb3N0TG9naW4sIGNsaWVudCwgZWNvc3lzdGVtLCB9KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIkxvZ2luUXVlcmllclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwcmVMb2dpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJwb3N0TG9naW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2xpZW50XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJhc2VVcmxcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZWNvc3lzdGVtXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgICAgIHRoaXMuTG9naW5RdWVyaWVyID0gcXVlcmllcjtcbiAgICAgICAgdGhpcy5wcmVMb2dpbiA9IHByZUxvZ2luO1xuICAgICAgICB0aGlzLnBvc3RMb2dpbiA9IHBvc3RMb2dpbjtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIHRoaXMuZWNvc3lzdGVtID0gZWNvc3lzdGVtO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kRW1haWxMb2dpbk90cCh7IGVtYWlsLCB9KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuTG9naW5RdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJzZW5kVGhpcmR3ZWJFbWFpbExvZ2luT3RwXCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgZW1haWwgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgc2VuZFNtc0xvZ2luT3RwKHsgcGhvbmVOdW1iZXIsIH0pIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5Mb2dpblF1ZXJpZXIuY2FsbCh7XG4gICAgICAgICAgICBwcm9jZWR1cmVOYW1lOiBcInNlbmRUaGlyZHdlYlNtc0xvZ2luT3RwXCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgcGhvbmVOdW1iZXIgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWJzdHJhY3QtbG9naW4uanMubWFwIl0sIm5hbWVzIjpbIkFic3RyYWN0TG9naW4iLCJzZW5kRW1haWxMb2dpbk90cCIsImVtYWlsIiwicmVzdWx0IiwiTG9naW5RdWVyaWVyIiwiY2FsbCIsInByb2NlZHVyZU5hbWUiLCJwYXJhbXMiLCJzZW5kU21zTG9naW5PdHAiLCJwaG9uZU51bWJlciIsImNvbnN0cnVjdG9yIiwiYmFzZVVybCIsInF1ZXJpZXIiLCJwcmVMb2dpbiIsInBvc3RMb2dpbiIsImNsaWVudCIsImVjb3N5c3RlbSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLogin: function() { return /* binding */ BaseLogin; }\n/* harmony export */ });\n/* harmony import */ var _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\");\n\n/**\n *\n */ class BaseLogin extends _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__.AbstractLogin {\n    async authenticateWithModal() {\n        return this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: undefined,\n            showIframe: true\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithModal() {\n        await this.preLogin();\n        const result = await this.authenticateWithModal();\n        return this.postLogin(result);\n    }\n    async authenticateWithIframe(param) {\n        let { email } = param;\n        return this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: {\n                email\n            },\n            showIframe: true\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithIframe(param) {\n        let { email } = param;\n        await this.preLogin();\n        const result = await this.authenticateWithIframe({\n            email\n        });\n        return this.postLogin(result);\n    }\n    async authenticateWithCustomJwt(param) {\n        let { encryptionKey, jwt } = param;\n        if (!encryptionKey || encryptionKey.length === 0) {\n            throw new Error(\"Encryption key is required for custom jwt auth\");\n        }\n        return this.LoginQuerier.call({\n            procedureName: \"loginWithCustomJwt\",\n            params: {\n                encryptionKey,\n                jwt\n            }\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithCustomJwt(param) {\n        let { encryptionKey, jwt } = param;\n        if (!encryptionKey || encryptionKey.length === 0) {\n            throw new Error(\"Encryption key is required for custom jwt auth\");\n        }\n        await this.preLogin();\n        const result = await this.authenticateWithCustomJwt({\n            encryptionKey,\n            jwt\n        });\n        return this.postLogin(result);\n    }\n    async authenticateWithCustomAuthEndpoint(param) {\n        let { encryptionKey, payload } = param;\n        return this.LoginQuerier.call({\n            procedureName: \"loginWithCustomAuthEndpoint\",\n            params: {\n                encryptionKey,\n                payload\n            }\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithCustomAuthEndpoint(param) {\n        let { encryptionKey, payload } = param;\n        if (!encryptionKey || encryptionKey.length === 0) {\n            throw new Error(\"Encryption key is required for custom auth\");\n        }\n        await this.preLogin();\n        const result = await this.authenticateWithCustomAuthEndpoint({\n            encryptionKey,\n            payload\n        });\n        return this.postLogin(result);\n    }\n    async authenticateWithEmailOtp(param) {\n        let { email, otp, recoveryCode } = param;\n        return this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebEmailLoginOtp\",\n            params: {\n                email,\n                otp,\n                recoveryCode\n            }\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithEmailOtp(param) {\n        let { email, otp, recoveryCode } = param;\n        const result = await this.authenticateWithEmailOtp({\n            email,\n            otp,\n            recoveryCode\n        });\n        return this.postLogin(result);\n    }\n    async authenticateWithSmsOtp(param) {\n        let { phoneNumber, otp, recoveryCode } = param;\n        return this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebSmsLoginOtp\",\n            params: {\n                phoneNumber,\n                otp,\n                recoveryCode\n            }\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithSmsOtp(param) {\n        let { phoneNumber, otp, recoveryCode } = param;\n        const result = await this.authenticateWithSmsOtp({\n            phoneNumber,\n            otp,\n            recoveryCode\n        });\n        return this.postLogin(result);\n    }\n} //# sourceMappingURL=base-login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: function() { return /* binding */ Auth; }\n/* harmony export */ });\n/* harmony import */ var _core_actions_generate_wallet_enclave_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/actions/generate-wallet.enclave.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/generate-wallet.enclave.js\");\n/* harmony import */ var _core_actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/actions/get-enclave-user-status.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js\");\n/* harmony import */ var _base_login_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\");\n\n\n\n/**\n *\n */ class Auth {\n    async preLogin() {\n        await this.logout();\n    }\n    async postLogin(param) {\n        let { storedToken, walletDetails } = param;\n        if (storedToken.shouldStoreCookieString) {\n            await this.localStorage.saveAuthCookie(storedToken.cookieString);\n        }\n        const initializedUser = await this.onAuthSuccess({\n            storedToken,\n            walletDetails\n        });\n        return initializedUser;\n    }\n    async loginWithAuthToken(authToken, recoveryCode) {\n        var _user_wallets_;\n        // We don't call logout for backend auth because that is handled on the backend where the iframe isn't available to call. Moreover, logout clears the local storage which isn't applicable for backend auth.\n        if (authToken.storedToken.authProvider !== \"Backend\") {\n            await this.preLogin();\n        }\n        const user = await (0,_core_actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__.getUserStatus)({\n            authToken: authToken.storedToken.cookieString,\n            client: this.client,\n            ecosystem: this.ecosystem\n        });\n        if (!user) {\n            throw new Error(\"Cannot login, no user found for auth token\");\n        }\n        // If they're already an enclave wallet, proceed to login\n        if (user.wallets.length > 0 && ((_user_wallets_ = user.wallets[0]) === null || _user_wallets_ === void 0 ? void 0 : _user_wallets_.type) === \"enclave\") {\n            return this.postLogin({\n                storedToken: authToken.storedToken,\n                walletDetails: {\n                    walletAddress: user.wallets[0].address\n                }\n            });\n        }\n        if (user.wallets.length === 0) {\n            // If this is a new ecosystem wallet without an enclave yet, we'll generate an enclave\n            const result = await (0,_core_actions_generate_wallet_enclave_js__WEBPACK_IMPORTED_MODULE_1__.generateWallet)({\n                authToken: authToken.storedToken.cookieString,\n                client: this.client,\n                ecosystem: this.ecosystem\n            });\n            return this.postLogin({\n                storedToken: authToken.storedToken,\n                walletDetails: {\n                    walletAddress: result.address\n                }\n            });\n        }\n        // If this is an existing sharded wallet or in-app wallet, we'll login with the sharded wallet\n        const result = await this.AuthQuerier.call({\n            procedureName: \"loginWithStoredTokenDetails\",\n            params: {\n                storedToken: authToken.storedToken,\n                recoveryCode\n            }\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * Used to log the user into their thirdweb wallet on your platform via a myriad of auth providers\n     * @example\n     * ```typescript\n     * const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"YOUR_CLIENT_ID\", chain: \"Polygon\"})\n     * try {\n     *   const user = await thirdwebInAppWallet.auth.loginWithModal();\n     *   // user is now logged in\n     * } catch (e) {\n     *   // User closed modal or something else went wrong during the authentication process\n     *   console.error(e)\n     * }\n     * ```\n     * @returns `{{user: InitializedUser}}` An InitializedUser object.\n     */ async loginWithModal() {\n        return this.BaseLogin.loginWithModal();\n    }\n    async authenticateWithModal() {\n        return this.BaseLogin.authenticateWithModal();\n    }\n    /**\n     * Used to log the user into their thirdweb wallet using email OTP\n     * @example\n     * ```typescript\n     *  // Basic Flow\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  try {\n     *    // prompts user to enter the code they received\n     *    const user = await thirdwebInAppWallet.auth.loginWithThirdwebEmailOtp({ email : \"you@example.com\" });\n     *    // user is now logged in\n     *  } catch (e) {\n     *    // User closed the OTP modal or something else went wrong during the authentication process\n     *    console.error(e)\n     *  }\n     * ```\n     * @param args - args.email: We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link InAppWalletSdk.getUser} for more\n     */ async loginWithIframe(args) {\n        return this.BaseLogin.loginWithIframe(args);\n    }\n    async authenticateWithIframe(args) {\n        return this.BaseLogin.authenticateWithIframe(args);\n    }\n    /**\n     * @internal\n     */ async loginWithCustomJwt(args) {\n        return this.BaseLogin.loginWithCustomJwt(args);\n    }\n    async authenticateWithCustomJwt(args) {\n        return this.BaseLogin.authenticateWithCustomJwt(args);\n    }\n    /**\n     * @internal\n     */ async loginWithCustomAuthEndpoint(args) {\n        return this.BaseLogin.loginWithCustomAuthEndpoint(args);\n    }\n    async authenticateWithCustomAuthEndpoint(args) {\n        return this.BaseLogin.authenticateWithCustomAuthEndpoint(args);\n    }\n    /**\n     * A headless way to send the users at the passed email an OTP code.\n     * You need to then call {@link Auth.loginWithEmailOtp} in order to complete the login process\n     * @example\n     * @param param0.email\n     * ```typescript\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  // sends user an OTP code\n     * try {\n     *    await thirdwebInAppWallet.auth.sendEmailLoginOtp({ email : \"you@example.com\" });\n     * } catch(e) {\n     *    // Error Sending user's email an OTP code\n     *    console.error(e);\n     * }\n     *\n     * // Then when your user is ready to verify their OTP\n     * try {\n     *    const user = await thirdwebInAppWallet.auth.verifyEmailLoginOtp({ email: \"you@example.com\", otp: \"6-DIGIT_CODE_HERE\" });\n     * } catch(e) {\n     *    // Error verifying the OTP code\n     *    console.error(e)\n     * }\n     * ```\n     * @param param0 - param0.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{ isNewUser: boolean }}` IsNewUser indicates if the user is a new user to your platform\n     * @internal\n     */ async sendEmailLoginOtp(param) {\n        let { email } = param;\n        return this.BaseLogin.sendEmailLoginOtp({\n            email\n        });\n    }\n    /**\n     * @internal\n     */ async sendSmsLoginOtp(param) {\n        let { phoneNumber } = param;\n        return this.BaseLogin.sendSmsLoginOtp({\n            phoneNumber\n        });\n    }\n    /**\n     * Used to verify the otp that the user receives from thirdweb\n     *\n     * See {@link Auth.sendEmailLoginOtp} for how the headless call flow looks like. Simply swap out the calls to `loginWithThirdwebEmailOtp` with `verifyThirdwebEmailLoginOtp`\n     * @param args - props.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * props.otp The code that the user received in their email\n     * @returns `{{user: InitializedUser}}` An InitializedUser object containing the user's status, wallet, authDetails, and more\n     * @internal\n     */ async loginWithEmailOtp(args) {\n        await this.preLogin();\n        return this.BaseLogin.loginWithEmailOtp(args);\n    }\n    async authenticateWithEmailOtp(args) {\n        return this.BaseLogin.authenticateWithEmailOtp(args);\n    }\n    /**\n     * @internal\n     */ async loginWithSmsOtp(args) {\n        await this.preLogin();\n        return this.BaseLogin.loginWithSmsOtp(args);\n    }\n    async authenticateWithSmsOtp(args) {\n        return this.BaseLogin.authenticateWithSmsOtp(args);\n    }\n    /**\n     * Logs any existing user out of their wallet.\n     * @returns `{{success: boolean}}` true if a user is successfully logged out. false if there's no user currently logged in.\n     * @internal\n     */ async logout() {\n        const isRemoveAuthCookie = await this.localStorage.removeAuthCookie();\n        const isRemoveUserId = await this.localStorage.removeWalletUserId();\n        return {\n            success: isRemoveAuthCookie || isRemoveUserId\n        };\n    }\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * @internal\n     */ constructor({ client, querier, onAuthSuccess, ecosystem, baseUrl, localStorage }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"AuthQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onAuthSuccess\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"BaseLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.ecosystem = ecosystem;\n        this.AuthQuerier = querier;\n        this.localStorage = localStorage;\n        this.onAuthSuccess = onAuthSuccess;\n        this.BaseLogin = new _base_login_js__WEBPACK_IMPORTED_MODULE_2__.BaseLogin({\n            postLogin: async (result)=>{\n                return this.postLogin(result);\n            },\n            preLogin: async ()=>{\n                await this.preLogin();\n            },\n            ecosystem,\n            querier: querier,\n            client,\n            baseUrl\n        });\n    }\n} //# sourceMappingURL=iframe-auth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/otp.js":
/*!***************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/otp.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendOtp: function() { return /* binding */ sendOtp; },\n/* harmony export */   verifyOtp: function() { return /* binding */ verifyOtp; }\n/* harmony export */ });\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _core_authentication_getLoginPath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/authentication/getLoginPath.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/getLoginPath.js\");\n\n\n/**\n * @internal\n */ const sendOtp = async (args)=>{\n    const { client, ecosystem } = args;\n    const url = (0,_core_authentication_getLoginPath_js__WEBPACK_IMPORTED_MODULE_0__.getLoginUrl)({\n        client,\n        ecosystem,\n        authOption: args.strategy\n    });\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \"x-client-id\": client.clientId\n    };\n    if (ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id) {\n        headers[\"x-ecosystem-id\"] = ecosystem.id;\n    }\n    if (ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.partnerId) {\n        headers[\"x-ecosystem-partner-id\"] = ecosystem.partnerId;\n    }\n    const body = (()=>{\n        switch(args.strategy){\n            case \"email\":\n                return {\n                    email: args.email\n                };\n            case \"phone\":\n                return {\n                    phone: args.phoneNumber\n                };\n        }\n    })();\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers,\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(body)\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to send verification code\");\n    }\n    return await response.json();\n};\n/**\n * @internal\n */ const verifyOtp = async (args)=>{\n    const { client, ecosystem } = args;\n    const url = (0,_core_authentication_getLoginPath_js__WEBPACK_IMPORTED_MODULE_0__.getLoginCallbackUrl)({\n        authOption: args.strategy,\n        client: args.client,\n        ecosystem: args.ecosystem\n    });\n    const headers = {\n        \"Content-Type\": \"application/json\",\n        \"x-client-id\": client.clientId\n    };\n    if (ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id) {\n        headers[\"x-ecosystem-id\"] = ecosystem.id;\n    }\n    if (ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.partnerId) {\n        headers[\"x-ecosystem-partner-id\"] = ecosystem.partnerId;\n    }\n    const body = (()=>{\n        switch(args.strategy){\n            case \"email\":\n                return {\n                    email: args.email,\n                    code: args.verificationCode\n                };\n            case \"phone\":\n                return {\n                    phone: args.phoneNumber,\n                    code: args.verificationCode\n                };\n        }\n    })();\n    const response = await fetch(url, {\n        method: \"POST\",\n        headers,\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(body)\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to verify verification code\");\n    }\n    return await response.json();\n}; //# sourceMappingURL=otp.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvb3RwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUQ7QUFDd0M7QUFDakc7O0NBRUMsR0FDTSxNQUFNRyxVQUFVLE9BQU9DO0lBQzFCLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR0Y7SUFDOUIsTUFBTUcsTUFBTUwsaUZBQVdBLENBQUM7UUFBRUc7UUFBUUM7UUFBV0UsWUFBWUosS0FBS0ssUUFBUTtJQUFDO0lBQ3ZFLE1BQU1DLFVBQVU7UUFDWixnQkFBZ0I7UUFDaEIsZUFBZUwsT0FBT00sUUFBUTtJQUNsQztJQUNBLElBQUlMLHNCQUFBQSxnQ0FBQUEsVUFBV00sRUFBRSxFQUFFO1FBQ2ZGLE9BQU8sQ0FBQyxpQkFBaUIsR0FBR0osVUFBVU0sRUFBRTtJQUM1QztJQUNBLElBQUlOLHNCQUFBQSxnQ0FBQUEsVUFBV08sU0FBUyxFQUFFO1FBQ3RCSCxPQUFPLENBQUMseUJBQXlCLEdBQUdKLFVBQVVPLFNBQVM7SUFDM0Q7SUFDQSxNQUFNQyxPQUFPLENBQUM7UUFDVixPQUFRVixLQUFLSyxRQUFRO1lBQ2pCLEtBQUs7Z0JBQ0QsT0FBTztvQkFDSE0sT0FBT1gsS0FBS1csS0FBSztnQkFDckI7WUFDSixLQUFLO2dCQUNELE9BQU87b0JBQ0hDLE9BQU9aLEtBQUthLFdBQVc7Z0JBQzNCO1FBQ1I7SUFDSjtJQUNBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTVosS0FBSztRQUM5QmEsUUFBUTtRQUNSVjtRQUNBSSxNQUFNZCx5REFBU0EsQ0FBQ2M7SUFDcEI7SUFDQSxJQUFJLENBQUNJLFNBQVNHLEVBQUUsRUFBRTtRQUNkLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLE9BQU8sTUFBTUosU0FBU0ssSUFBSTtBQUM5QixFQUFFO0FBQ0Y7O0NBRUMsR0FDTSxNQUFNQyxZQUFZLE9BQU9wQjtJQUM1QixNQUFNLEVBQUVDLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdGO0lBQzlCLE1BQU1HLE1BQU1OLHlGQUFtQkEsQ0FBQztRQUM1Qk8sWUFBWUosS0FBS0ssUUFBUTtRQUN6QkosUUFBUUQsS0FBS0MsTUFBTTtRQUNuQkMsV0FBV0YsS0FBS0UsU0FBUztJQUM3QjtJQUNBLE1BQU1JLFVBQVU7UUFDWixnQkFBZ0I7UUFDaEIsZUFBZUwsT0FBT00sUUFBUTtJQUNsQztJQUNBLElBQUlMLHNCQUFBQSxnQ0FBQUEsVUFBV00sRUFBRSxFQUFFO1FBQ2ZGLE9BQU8sQ0FBQyxpQkFBaUIsR0FBR0osVUFBVU0sRUFBRTtJQUM1QztJQUNBLElBQUlOLHNCQUFBQSxnQ0FBQUEsVUFBV08sU0FBUyxFQUFFO1FBQ3RCSCxPQUFPLENBQUMseUJBQXlCLEdBQUdKLFVBQVVPLFNBQVM7SUFDM0Q7SUFDQSxNQUFNQyxPQUFPLENBQUM7UUFDVixPQUFRVixLQUFLSyxRQUFRO1lBQ2pCLEtBQUs7Z0JBQ0QsT0FBTztvQkFDSE0sT0FBT1gsS0FBS1csS0FBSztvQkFDakJVLE1BQU1yQixLQUFLc0IsZ0JBQWdCO2dCQUMvQjtZQUNKLEtBQUs7Z0JBQ0QsT0FBTztvQkFDSFYsT0FBT1osS0FBS2EsV0FBVztvQkFDdkJRLE1BQU1yQixLQUFLc0IsZ0JBQWdCO2dCQUMvQjtRQUNSO0lBQ0o7SUFDQSxNQUFNUixXQUFXLE1BQU1DLE1BQU1aLEtBQUs7UUFDOUJhLFFBQVE7UUFDUlY7UUFDQUksTUFBTWQseURBQVNBLENBQUNjO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDSSxTQUFTRyxFQUFFLEVBQUU7UUFDZCxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxPQUFPLE1BQU1KLFNBQVNLLElBQUk7QUFDOUIsRUFBRSxDQUNGLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvd2ViL2xpYi9hdXRoL290cC5qcz8yMzM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cmluZ2lmeSB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi91dGlscy9qc29uLmpzXCI7XG5pbXBvcnQgeyBnZXRMb2dpbkNhbGxiYWNrVXJsLCBnZXRMb2dpblVybCwgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9nZXRMb2dpblBhdGguanNcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBzZW5kT3RwID0gYXN5bmMgKGFyZ3MpID0+IHtcbiAgICBjb25zdCB7IGNsaWVudCwgZWNvc3lzdGVtIH0gPSBhcmdzO1xuICAgIGNvbnN0IHVybCA9IGdldExvZ2luVXJsKHsgY2xpZW50LCBlY29zeXN0ZW0sIGF1dGhPcHRpb246IGFyZ3Muc3RyYXRlZ3kgfSk7XG4gICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIFwieC1jbGllbnQtaWRcIjogY2xpZW50LmNsaWVudElkLFxuICAgIH07XG4gICAgaWYgKGVjb3N5c3RlbT8uaWQpIHtcbiAgICAgICAgaGVhZGVyc1tcIngtZWNvc3lzdGVtLWlkXCJdID0gZWNvc3lzdGVtLmlkO1xuICAgIH1cbiAgICBpZiAoZWNvc3lzdGVtPy5wYXJ0bmVySWQpIHtcbiAgICAgICAgaGVhZGVyc1tcIngtZWNvc3lzdGVtLXBhcnRuZXItaWRcIl0gPSBlY29zeXN0ZW0ucGFydG5lcklkO1xuICAgIH1cbiAgICBjb25zdCBib2R5ID0gKCgpID0+IHtcbiAgICAgICAgc3dpdGNoIChhcmdzLnN0cmF0ZWd5KSB7XG4gICAgICAgICAgICBjYXNlIFwiZW1haWxcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBlbWFpbDogYXJncy5lbWFpbCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSBcInBob25lXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgcGhvbmU6IGFyZ3MucGhvbmVOdW1iZXIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0pKCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVycyxcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KGJvZHkpLFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHNlbmQgdmVyaWZpY2F0aW9uIGNvZGVcIik7XG4gICAgfVxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XG59O1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IHZlcmlmeU90cCA9IGFzeW5jIChhcmdzKSA9PiB7XG4gICAgY29uc3QgeyBjbGllbnQsIGVjb3N5c3RlbSB9ID0gYXJncztcbiAgICBjb25zdCB1cmwgPSBnZXRMb2dpbkNhbGxiYWNrVXJsKHtcbiAgICAgICAgYXV0aE9wdGlvbjogYXJncy5zdHJhdGVneSxcbiAgICAgICAgY2xpZW50OiBhcmdzLmNsaWVudCxcbiAgICAgICAgZWNvc3lzdGVtOiBhcmdzLmVjb3N5c3RlbSxcbiAgICB9KTtcbiAgICBjb25zdCBoZWFkZXJzID0ge1xuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgXCJ4LWNsaWVudC1pZFwiOiBjbGllbnQuY2xpZW50SWQsXG4gICAgfTtcbiAgICBpZiAoZWNvc3lzdGVtPy5pZCkge1xuICAgICAgICBoZWFkZXJzW1wieC1lY29zeXN0ZW0taWRcIl0gPSBlY29zeXN0ZW0uaWQ7XG4gICAgfVxuICAgIGlmIChlY29zeXN0ZW0/LnBhcnRuZXJJZCkge1xuICAgICAgICBoZWFkZXJzW1wieC1lY29zeXN0ZW0tcGFydG5lci1pZFwiXSA9IGVjb3N5c3RlbS5wYXJ0bmVySWQ7XG4gICAgfVxuICAgIGNvbnN0IGJvZHkgPSAoKCkgPT4ge1xuICAgICAgICBzd2l0Y2ggKGFyZ3Muc3RyYXRlZ3kpIHtcbiAgICAgICAgICAgIGNhc2UgXCJlbWFpbFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiBhcmdzLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiBhcmdzLnZlcmlmaWNhdGlvbkNvZGUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgXCJwaG9uZVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHBob25lOiBhcmdzLnBob25lTnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiBhcmdzLnZlcmlmaWNhdGlvbkNvZGUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgIH0pKCk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgaGVhZGVycyxcbiAgICAgICAgYm9keTogc3RyaW5naWZ5KGJvZHkpLFxuICAgIH0pO1xuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHZlcmlmeSB2ZXJpZmljYXRpb24gY29kZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vdHAuanMubWFwIl0sIm5hbWVzIjpbInN0cmluZ2lmeSIsImdldExvZ2luQ2FsbGJhY2tVcmwiLCJnZXRMb2dpblVybCIsInNlbmRPdHAiLCJhcmdzIiwiY2xpZW50IiwiZWNvc3lzdGVtIiwidXJsIiwiYXV0aE9wdGlvbiIsInN0cmF0ZWd5IiwiaGVhZGVycyIsImNsaWVudElkIiwiaWQiLCJwYXJ0bmVySWQiLCJib2R5IiwiZW1haWwiLCJwaG9uZSIsInBob25lTnVtYmVyIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsIm9rIiwiRXJyb3IiLCJqc29uIiwidmVyaWZ5T3RwIiwiY29kZSIsInZlcmlmaWNhdGlvbkNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/otp.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/iframe-wallet.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/iframe-wallet.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IFrameWallet: function() { return /* binding */ IFrameWallet; }\n/* harmony export */ });\n/* harmony import */ var _analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../analytics/track/transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/analytics/track/transaction.js\");\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../rpc/actions/eth_sendRawTransaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/signatures/helpers/parse-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parse-typed-data.js\");\n\n\n\n\n\n\n\n\n/**\n *\n */ class IFrameWallet {\n    /**\n     * Used to set-up the user device in the case that they are using incognito\n     * @returns `{walletAddress : string }` The user's wallet details\n     * @internal\n     */ async postWalletSetUp(authResult) {\n        if (authResult.deviceShareStored) {\n            await this.localStorage.saveDeviceShare(authResult.deviceShareStored, authResult.storedToken.authDetails.userWalletId);\n        }\n    }\n    /**\n     * Gets the various status states of the user\n     * @example\n     * ```typescript\n     *  const userStatus = await Paper.getUserWalletStatus();\n     *  switch (userStatus.status) {\n     *  case UserWalletStatus.LOGGED_OUT: {\n     *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED: {\n     *    // User is logged in, but does not have a wallet associated with it\n     *    // you also have access to the user's details\n     *    userStatus.user.authDetails;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_NEW_DEVICE: {\n     *    // User is logged in and created a wallet already, but is missing the device shard\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *    // user is logged in and wallet is all set up.\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    userStatus.user.wallet;\n     *    break;\n     *  }\n     *}\n     *```\n     * @returns `{GetUserWalletStatusFnReturnType}` an object to containing various information on the user statuses\n     * @internal\n     */ async getUserWalletStatus() {\n        const userStatus = await this.walletManagerQuerier.call({\n            procedureName: \"getUserStatus\",\n            params: undefined\n        });\n        if (userStatus.status === \"Logged In, Wallet Initialized\") {\n            return {\n                status: \"Logged In, Wallet Initialized\",\n                ...userStatus.user,\n                account: await this.getAccount()\n            };\n        }\n        if (userStatus.status === \"Logged In, New Device\") {\n            return {\n                status: \"Logged In, New Device\",\n                ...userStatus.user\n            };\n        }\n        if (userStatus.status === \"Logged In, Wallet Uninitialized\") {\n            return {\n                status: \"Logged In, Wallet Uninitialized\",\n                ...userStatus.user\n            };\n        }\n        // Logged out\n        return {\n            status: userStatus.status\n        };\n    }\n    /**\n     * Returns an account that communicates with the iFrame for signing operations\n     * @internal\n     */ async getAccount() {\n        var _this_ecosystem;\n        const querier = this.walletManagerQuerier;\n        const client = this.client;\n        const partnerId = (_this_ecosystem = this.ecosystem) === null || _this_ecosystem === void 0 ? void 0 : _this_ecosystem.partnerId;\n        const { address } = await querier.call({\n            procedureName: \"getAddress\",\n            params: undefined\n        });\n        const _signTransaction = async (tx)=>{\n            var _tx_to;\n            // biome-ignore lint/suspicious/noExplicitAny: ethers tx transformation\n            const transaction = {\n                to: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                data: tx.data,\n                value: tx.value,\n                gasLimit: tx.gas,\n                nonce: tx.nonce,\n                chainId: tx.chainId\n            };\n            if (tx.maxFeePerGas) {\n                // ethers (in the iframe) rejects any type 0 trasaction with unknown keys\n                // TODO remove this once iframe is upgraded to v5\n                transaction.accessList = tx.accessList;\n                transaction.maxFeePerGas = tx.maxFeePerGas;\n                transaction.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n                transaction.type = 2;\n            } else {\n                transaction.gasPrice = tx.gasPrice;\n                transaction.type = 0;\n            }\n            const RPC_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebDomains)().rpc;\n            const { signedTransaction } = await querier.call({\n                procedureName: \"signTransaction\",\n                params: {\n                    transaction,\n                    chainId: tx.chainId,\n                    partnerId,\n                    rpcEndpoint: \"https://\".concat(tx.chainId, \".\").concat(RPC_URL)\n                }\n            });\n            return signedTransaction;\n        };\n        return {\n            address: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(address),\n            async signTransaction (tx) {\n                if (!tx.chainId) {\n                    throw new Error(\"chainId required in tx to sign\");\n                }\n                return _signTransaction({\n                    ...tx,\n                    chainId: tx.chainId\n                });\n            },\n            async sendTransaction (tx) {\n                const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_2__.getRpcClient)({\n                    client,\n                    chain: (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_3__.getCachedChain)(tx.chainId)\n                });\n                const signedTx = await _signTransaction(tx);\n                const transactionHash = await (0,_rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_4__.eth_sendRawTransaction)(rpcRequest, signedTx);\n                var _tx_to;\n                (0,_analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_5__.trackTransaction)({\n                    client,\n                    chainId: tx.chainId,\n                    walletAddress: address,\n                    walletType: \"inApp\",\n                    transactionHash,\n                    contractAddress: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                    gasPrice: tx.gasPrice\n                });\n                return {\n                    transactionHash\n                };\n            },\n            async signMessage (param) {\n                let { message } = param;\n                // in-app wallets use ethers to sign messages, which always expects a string (or bytes maybe but string is safest)\n                const messageDecoded = (()=>{\n                    if (typeof message === \"string\") {\n                        return message;\n                    }\n                    if (message.raw instanceof Uint8Array) {\n                        return message.raw;\n                    }\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_6__.hexToString)(message.raw);\n                })();\n                const { signedMessage } = await querier.call({\n                    procedureName: \"signMessage\",\n                    params: {\n                        // biome-ignore lint/suspicious/noExplicitAny: ethers tx transformation\n                        message: messageDecoded,\n                        partnerId,\n                        chainId: 1\n                    }\n                });\n                return signedMessage;\n            },\n            async signTypedData (_typedData) {\n                var _parsedTypedData_types;\n                const parsedTypedData = (0,_utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_7__.parseTypedData)(_typedData);\n                // deleting EIP712 Domain as it results in ambiguous primary type on some cases\n                // this happens when going from viem to ethers via the iframe\n                if ((_parsedTypedData_types = parsedTypedData.types) === null || _parsedTypedData_types === void 0 ? void 0 : _parsedTypedData_types.EIP712Domain) {\n                    parsedTypedData.types.EIP712Domain = undefined;\n                }\n                const domain = parsedTypedData.domain;\n                const chainId = domain === null || domain === void 0 ? void 0 : domain.chainId;\n                const verifyingContract = (domain === null || domain === void 0 ? void 0 : domain.verifyingContract) ? {\n                    verifyingContract: domain === null || domain === void 0 ? void 0 : domain.verifyingContract\n                } : {};\n                const domainData = {\n                    ...verifyingContract,\n                    name: domain === null || domain === void 0 ? void 0 : domain.name,\n                    version: domain === null || domain === void 0 ? void 0 : domain.version\n                };\n                // chain id can't be included if it wasn't explicitly specified\n                if (chainId) {\n                    domainData.chainId = chainId;\n                }\n                const RPC_URL = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_0__.getThirdwebDomains)().rpc;\n                const { signedTypedData } = await querier.call({\n                    procedureName: \"signTypedDataV4\",\n                    params: {\n                        domain: domainData,\n                        types: parsedTypedData.types,\n                        message: parsedTypedData.message,\n                        chainId: Number.parseInt(BigInt(chainId || 1).toString()),\n                        partnerId,\n                        rpcEndpoint: \"https://\".concat(chainId, \".\").concat(RPC_URL)\n                    }\n                });\n                return signedTypedData;\n            }\n        };\n    }\n    /**\n     * Not meant to be initialized directly. Call {@link initializeUser} to get an instance\n     * @internal\n     */ constructor({ client, ecosystem, querier, localStorage }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"walletManagerQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.ecosystem = ecosystem;\n        this.walletManagerQuerier = querier;\n        this.localStorage = localStorage;\n    }\n} //# sourceMappingURL=iframe-wallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/iframe-wallet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InAppWebConnector: function() { return /* binding */ InAppWebConnector; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_storage_webStorage_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../utils/storage/webStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/storage/webStorage.js\");\n/* harmony import */ var _core_actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/actions/get-enclave-user-status.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/actions/get-enclave-user-status.js\");\n/* harmony import */ var _core_authentication_authEndpoint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/authentication/authEndpoint.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/authEndpoint.js\");\n/* harmony import */ var _core_authentication_backend_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/authentication/backend.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/backend.js\");\n/* harmony import */ var _core_authentication_client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/authentication/client-scoped-storage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/client-scoped-storage.js\");\n/* harmony import */ var _core_authentication_guest_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/authentication/guest.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/guest.js\");\n/* harmony import */ var _core_authentication_jwt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/authentication/jwt.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/jwt.js\");\n/* harmony import */ var _core_authentication_linkAccount_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/authentication/linkAccount.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/linkAccount.js\");\n/* harmony import */ var _core_authentication_passkeys_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/authentication/passkeys.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/passkeys.js\");\n/* harmony import */ var _core_authentication_siwe_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/authentication/siwe.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/siwe.js\");\n/* harmony import */ var _core_wallet_enclave_wallet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/wallet/enclave-wallet.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/wallet/enclave-wallet.js\");\n/* harmony import */ var _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils/iFrameCommunication/InAppWalletIframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\");\n/* harmony import */ var _auth_iframe_auth_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./auth/iframe-auth.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/iframe-auth.js\");\n/* harmony import */ var _auth_oauth_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./auth/oauth.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/oauth.js\");\n/* harmony import */ var _auth_otp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/otp.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/otp.js\");\n/* harmony import */ var _iframe_wallet_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iframe-wallet.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/iframe-wallet.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */ class InAppWebConnector {\n    isClientIdLegacyPaper(clientId) {\n        if (clientId.indexOf(\"-\") > 0 && clientId.length === 36) {\n            return true;\n        }\n        return false;\n    }\n    async initializeWallet(authToken) {\n        var _user_wallets_;\n        const storedAuthToken = await this.storage.getAuthCookie();\n        if (!authToken && storedAuthToken === null) {\n            throw new Error(\"No auth token provided and no stored auth token found to initialize the wallet\");\n        }\n        const user = await (0,_core_actions_get_enclave_user_status_js__WEBPACK_IMPORTED_MODULE_0__.getUserStatus)({\n            authToken: authToken || storedAuthToken,\n            client: this.client,\n            ecosystem: this.ecosystem\n        });\n        if (!user) {\n            throw new Error(\"Cannot initialize wallet, no user logged in\");\n        }\n        if (user.wallets.length === 0) {\n            throw new Error(\"Cannot initialize wallet, this user does not have a wallet generated yet\");\n        }\n        if (((_user_wallets_ = user.wallets[0]) === null || _user_wallets_ === void 0 ? void 0 : _user_wallets_.type) === \"enclave\") {\n            return new _core_wallet_enclave_wallet_js__WEBPACK_IMPORTED_MODULE_1__.EnclaveWallet({\n                client: this.client,\n                ecosystem: this.ecosystem,\n                address: user.wallets[0].address,\n                storage: this.storage\n            });\n        }\n        return new _iframe_wallet_js__WEBPACK_IMPORTED_MODULE_2__.IFrameWallet({\n            client: this.client,\n            ecosystem: this.ecosystem,\n            querier: this.querier,\n            localStorage: this.storage\n        });\n    }\n    /**\n     * Gets the user if they're logged in\n     * @example\n     * ```js\n     *  const user = await thirdwebInAppWallet.getUser();\n     *  switch (user.status) {\n     *     case UserWalletStatus.LOGGED_OUT: {\n     *       // User is logged out, call one of the auth methods on thirdwebInAppWallet.auth to authenticate the user\n     *       break;\n     *     }\n     *     case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *       // user is logged in and wallet is all set up.\n     *       // You have access to:\n     *       user.status;\n     *       user.authDetails;\n     *       user.walletAddress;\n     *       user.wallet;\n     *       break;\n     *     }\n     * }\n     * ```\n     * @returns GetUser - an object to containing various information on the user statuses\n     */ async getUser() {\n        // If we don't have a wallet yet we'll create one\n        if (!this.wallet) {\n            const localAuthToken = await this.storage.getAuthCookie();\n            if (!localAuthToken) {\n                return {\n                    status: \"Logged Out\"\n                };\n            }\n            this.wallet = await this.initializeWallet(localAuthToken);\n        }\n        if (!this.wallet) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return await this.wallet.getUserWalletStatus();\n    }\n    getAccount() {\n        if (!this.wallet) {\n            throw new Error(\"Wallet not initialized\");\n        }\n        return this.wallet.getAccount();\n    }\n    async preAuthenticate(args) {\n        return (0,_auth_otp_js__WEBPACK_IMPORTED_MODULE_3__.sendOtp)({\n            ...args,\n            client: this.client,\n            ecosystem: this.ecosystem\n        });\n    }\n    authenticateWithRedirect(strategy, mode, redirectUrl) {\n        (0,_auth_oauth_js__WEBPACK_IMPORTED_MODULE_4__.loginWithOauthRedirect)({\n            authOption: strategy,\n            client: this.client,\n            ecosystem: this.ecosystem,\n            redirectUrl,\n            mode\n        });\n    }\n    async loginWithAuthToken(authResult, recoveryCode) {\n        return this.auth.loginWithAuthToken(authResult, recoveryCode);\n    }\n    /**\n     * Authenticates the user and returns the auth token, but does not instantiate their wallet\n     */ async authenticate(args) {\n        const strategy = args.strategy;\n        switch(strategy){\n            case \"email\":\n                return (0,_auth_otp_js__WEBPACK_IMPORTED_MODULE_3__.verifyOtp)({\n                    ...args,\n                    client: this.client,\n                    ecosystem: this.ecosystem\n                });\n            case \"phone\":\n                return (0,_auth_otp_js__WEBPACK_IMPORTED_MODULE_3__.verifyOtp)({\n                    ...args,\n                    client: this.client,\n                    ecosystem: this.ecosystem\n                });\n            case \"auth_endpoint\":\n                {\n                    return (0,_core_authentication_authEndpoint_js__WEBPACK_IMPORTED_MODULE_5__.authEndpoint)({\n                        payload: args.payload,\n                        client: this.client,\n                        ecosystem: this.ecosystem\n                    });\n                }\n            case \"jwt\":\n                return (0,_core_authentication_jwt_js__WEBPACK_IMPORTED_MODULE_6__.customJwt)({\n                    jwt: args.jwt,\n                    client: this.client,\n                    ecosystem: this.ecosystem\n                });\n            case \"passkey\":\n                {\n                    return this.passkeyAuth(args);\n                }\n            case \"iframe_email_verification\":\n                {\n                    return this.auth.authenticateWithIframe({\n                        email: args.email\n                    });\n                }\n            case \"iframe\":\n                {\n                    return this.auth.authenticateWithModal();\n                }\n            case \"apple\":\n            case \"facebook\":\n            case \"google\":\n            case \"telegram\":\n            case \"github\":\n            case \"twitch\":\n            case \"farcaster\":\n            case \"line\":\n            case \"x\":\n            case \"steam\":\n            case \"coinbase\":\n            case \"discord\":\n                {\n                    return (0,_auth_oauth_js__WEBPACK_IMPORTED_MODULE_4__.loginWithOauth)({\n                        authOption: strategy,\n                        client: this.client,\n                        ecosystem: this.ecosystem,\n                        closeOpenedWindow: args.closeOpenedWindow,\n                        openedWindow: args.openedWindow\n                    });\n                }\n            case \"guest\":\n                {\n                    return (0,_core_authentication_guest_js__WEBPACK_IMPORTED_MODULE_7__.guestAuthenticate)({\n                        client: this.client,\n                        ecosystem: this.ecosystem,\n                        storage: _utils_storage_webStorage_js__WEBPACK_IMPORTED_MODULE_8__.webLocalStorage\n                    });\n                }\n            case \"backend\":\n                {\n                    return (0,_core_authentication_backend_js__WEBPACK_IMPORTED_MODULE_9__.backendAuthenticate)({\n                        client: this.client,\n                        walletSecret: args.walletSecret,\n                        ecosystem: this.ecosystem\n                    });\n                }\n            case \"wallet\":\n                {\n                    return (0,_core_authentication_siwe_js__WEBPACK_IMPORTED_MODULE_10__.siweAuthenticate)({\n                        ecosystem: this.ecosystem,\n                        client: this.client,\n                        wallet: args.wallet,\n                        chain: args.chain\n                    });\n                }\n        }\n    }\n    /**\n     * Authenticates the user then instantiates their wallet using the resulting auth token\n     */ async connect(args) {\n        const strategy = args.strategy;\n        switch(strategy){\n            case \"auth_endpoint\":\n            case \"jwt\":\n                {\n                    const authToken = await this.authenticate(args);\n                    return await this.loginWithAuthToken(authToken, args.encryptionKey);\n                }\n            case \"iframe_email_verification\":\n                {\n                    return this.auth.loginWithIframe({\n                        email: args.email\n                    });\n                }\n            case \"iframe\":\n                {\n                    return this.auth.loginWithModal();\n                }\n            case \"passkey\":\n                {\n                    const authToken = await this.passkeyAuth(args);\n                    return this.loginWithAuthToken(authToken);\n                }\n            case \"backend\":\n            case \"phone\":\n            case \"email\":\n            case \"wallet\":\n            case \"apple\":\n            case \"facebook\":\n            case \"google\":\n            case \"farcaster\":\n            case \"telegram\":\n            case \"github\":\n            case \"line\":\n            case \"x\":\n            case \"guest\":\n            case \"coinbase\":\n            case \"twitch\":\n            case \"steam\":\n            case \"discord\":\n                {\n                    const authToken = await this.authenticate(args);\n                    return await this.auth.loginWithAuthToken(authToken);\n                }\n            default:\n                assertUnreachable(strategy);\n        }\n    }\n    async logout() {\n        return await this.auth.logout();\n    }\n    async passkeyAuth(args) {\n        const { PasskeyWebClient } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./auth/passkeys.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js\"));\n        const { passkeyName, storeLastUsedPasskey = true } = args;\n        const passkeyClient = new PasskeyWebClient();\n        const storage = this.storage;\n        if (args.type === \"sign-up\") {\n            var _this_passkeyDomain, _this_passkeyDomain1;\n            return (0,_core_authentication_passkeys_js__WEBPACK_IMPORTED_MODULE_11__.registerPasskey)({\n                client: this.client,\n                ecosystem: this.ecosystem,\n                username: passkeyName,\n                passkeyClient,\n                storage: storeLastUsedPasskey ? storage : undefined,\n                rp: {\n                    id: (_this_passkeyDomain = this.passkeyDomain) !== null && _this_passkeyDomain !== void 0 ? _this_passkeyDomain : window.location.hostname,\n                    name: (_this_passkeyDomain1 = this.passkeyDomain) !== null && _this_passkeyDomain1 !== void 0 ? _this_passkeyDomain1 : window.document.title\n                }\n            });\n        }\n        var _this_passkeyDomain2, _this_passkeyDomain3;\n        return (0,_core_authentication_passkeys_js__WEBPACK_IMPORTED_MODULE_11__.loginWithPasskey)({\n            client: this.client,\n            ecosystem: this.ecosystem,\n            passkeyClient,\n            storage: storeLastUsedPasskey ? storage : undefined,\n            rp: {\n                id: (_this_passkeyDomain2 = this.passkeyDomain) !== null && _this_passkeyDomain2 !== void 0 ? _this_passkeyDomain2 : window.location.hostname,\n                name: (_this_passkeyDomain3 = this.passkeyDomain) !== null && _this_passkeyDomain3 !== void 0 ? _this_passkeyDomain3 : window.document.title\n            }\n        });\n    }\n    async linkProfile(args) {\n        const { storedToken } = await this.authenticate(args);\n        return await (0,_core_authentication_linkAccount_js__WEBPACK_IMPORTED_MODULE_12__.linkAccount)({\n            client: args.client,\n            tokenToLink: storedToken.cookieString,\n            storage: this.storage,\n            ecosystem: args.ecosystem || this.ecosystem\n        });\n    }\n    async unlinkProfile(profile) {\n        return await (0,_core_authentication_linkAccount_js__WEBPACK_IMPORTED_MODULE_12__.unlinkAccount)({\n            client: this.client,\n            storage: this.storage,\n            ecosystem: this.ecosystem,\n            profileToUnlink: profile\n        });\n    }\n    async getProfiles() {\n        return (0,_core_authentication_linkAccount_js__WEBPACK_IMPORTED_MODULE_12__.getLinkedProfilesInternal)({\n            client: this.client,\n            ecosystem: this.ecosystem,\n            storage: this.storage\n        });\n    }\n    /**\n     * @example\n     * `const thirdwebInAppWallet = new InAppWalletSdk({ clientId: \"\", chain: \"Goerli\" });`\n     * @internal\n     */ constructor({ client, onAuthSuccess, ecosystem, passkeyDomain }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"querier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"storage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wallet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Used to manage the Auth state of the user.\n         */ Object.defineProperty(this, \"auth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"passkeyDomain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.isClientIdLegacyPaper(client.clientId)) {\n            throw new Error(\"You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page\");\n        }\n        const baseUrl = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_13__.getThirdwebBaseUrl)(\"inAppWallet\");\n        this.client = client;\n        this.ecosystem = ecosystem;\n        this.passkeyDomain = passkeyDomain;\n        this.storage = new _core_authentication_client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_14__.ClientScopedStorage({\n            storage: _utils_storage_webStorage_js__WEBPACK_IMPORTED_MODULE_8__.webLocalStorage,\n            clientId: client.clientId,\n            ecosystem: ecosystem\n        });\n        this.querier = new _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_15__.InAppWalletIframeCommunicator({\n            clientId: client.clientId,\n            ecosystem,\n            baseUrl\n        });\n        this.auth = new _auth_iframe_auth_js__WEBPACK_IMPORTED_MODULE_16__.Auth({\n            client,\n            querier: this.querier,\n            baseUrl,\n            localStorage: this.storage,\n            ecosystem,\n            onAuthSuccess: async (authResult)=>{\n                onAuthSuccess === null || onAuthSuccess === void 0 ? void 0 : onAuthSuccess(authResult);\n                if (authResult.storedToken.authDetails.walletType === \"sharded\") {\n                    // If this is an existing sharded ecosystem wallet, we'll need to migrate\n                    const result = await this.querier.call({\n                        procedureName: \"migrateFromShardToEnclave\",\n                        params: {\n                            storedToken: authResult.storedToken\n                        }\n                    });\n                    if (!result) {\n                        console.warn(\"Failed to migrate from sharded to enclave wallet, continuing with sharded wallet\");\n                    }\n                }\n                this.wallet = await this.initializeWallet(authResult.storedToken.cookieString);\n                if (!this.wallet) {\n                    throw new Error(\"Failed to initialize wallet\");\n                }\n                const deviceShareStored = \"deviceShareStored\" in authResult.walletDetails ? authResult.walletDetails.deviceShareStored : undefined;\n                await this.wallet.postWalletSetUp({\n                    storedToken: authResult.storedToken,\n                    deviceShareStored\n                });\n                if (this.wallet instanceof _iframe_wallet_js__WEBPACK_IMPORTED_MODULE_2__.IFrameWallet) {\n                    await this.querier.call({\n                        procedureName: \"initIframe\",\n                        params: {\n                            partnerId: ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.partnerId,\n                            ecosystemId: ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id,\n                            clientId: this.client.clientId,\n                            // For enclave wallets we won't have a device share\n                            deviceShareStored: \"deviceShareStored\" in authResult.walletDetails ? authResult.walletDetails.deviceShareStored : null,\n                            walletUserId: authResult.storedToken.authDetails.userWalletId,\n                            authCookie: authResult.storedToken.cookieString\n                        }\n                    });\n                }\n                return {\n                    user: {\n                        status: \"Logged In, Wallet Initialized\",\n                        authDetails: authResult.storedToken.authDetails,\n                        account: await this.wallet.getAccount(),\n                        walletAddress: authResult.walletDetails.walletAddress\n                    }\n                };\n            }\n        });\n    }\n}\nfunction assertUnreachable(x, message) {\n    throw new Error(message !== null && message !== void 0 ? message : \"Invalid param: \".concat(x));\n} //# sourceMappingURL=web-connector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IframeCommunicator: function() { return /* binding */ IframeCommunicator; }\n/* harmony export */ });\n/* harmony import */ var _utils_sleep_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/sleep.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/sleep.js\");\n\nconst iframeBaseStyle = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    colorScheme: \"light\",\n    position: \"fixed\",\n    top: \"0px\",\n    right: \"0px\",\n    zIndex: \"2147483646\",\n    display: \"none\",\n    pointerEvents: \"all\"\n};\n// Global var to help track iframe state\nconst isIframeLoaded = new Map();\n/**\n * @internal\n */ // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\nclass IframeCommunicator {\n    // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n    async onIframeLoadedInitVariables() {\n        var _this_ecosystem, _this_ecosystem1;\n        return {\n            authCookie: await this.localStorage.getAuthCookie(),\n            deviceShareStored: await this.localStorage.getDeviceShare(),\n            walletUserId: await this.localStorage.getWalletUserId(),\n            clientId: this.clientId,\n            partnerId: (_this_ecosystem = this.ecosystem) === null || _this_ecosystem === void 0 ? void 0 : _this_ecosystem.partnerId,\n            ecosystemId: (_this_ecosystem1 = this.ecosystem) === null || _this_ecosystem1 === void 0 ? void 0 : _this_ecosystem1.id\n        };\n    }\n    /**\n     * @internal\n     */ onIframeLoadHandler(iframe, onIframeInitialize) {\n        return async ()=>{\n            var _iframe_contentWindow;\n            const channel = new MessageChannel();\n            const promise = new Promise((res, rej)=>{\n                // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                channel.port1.onmessage = (event)=>{\n                    const { data } = event;\n                    channel.port1.close();\n                    if (!data.success) {\n                        rej(new Error(data.error));\n                    }\n                    isIframeLoaded.set(iframe.src, true);\n                    if (onIframeInitialize) {\n                        onIframeInitialize();\n                    }\n                    res(true);\n                };\n            });\n            iframe === null || iframe === void 0 ? void 0 : (_iframe_contentWindow = iframe.contentWindow) === null || _iframe_contentWindow === void 0 ? void 0 : _iframe_contentWindow.postMessage({\n                eventType: \"initIframe\",\n                data: await this.onIframeLoadedInitVariables()\n            }, this.iframeBaseUrl, [\n                channel.port2\n            ]);\n            await promise;\n        };\n    }\n    /**\n     * @internal\n     */ async call(param) {\n        let { procedureName, params, showIframe = false } = param;\n        var _this_iframe_contentWindow;\n        if (!this.iframe) {\n            throw new Error(\"Iframe not found. You are likely calling this from the backend where the DOM is not available.\");\n        }\n        while(!isIframeLoaded.get(this.iframe.src)){\n            await (0,_utils_sleep_js__WEBPACK_IMPORTED_MODULE_0__.sleep)(this.POLLING_INTERVAL_SECONDS * 1000);\n        }\n        if (showIframe) {\n            this.iframe.style.display = \"block\";\n            // magic number to let the display render before performing the animation of the modal in\n            await (0,_utils_sleep_js__WEBPACK_IMPORTED_MODULE_0__.sleep)(0.005 * 1000);\n        }\n        const channel = new MessageChannel();\n        const promise = new Promise((res, rej)=>{\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            channel.port1.onmessage = async (event)=>{\n                const { data } = event;\n                channel.port1.close();\n                if (showIframe) {\n                    // magic number to let modal fade out before hiding it\n                    await (0,_utils_sleep_js__WEBPACK_IMPORTED_MODULE_0__.sleep)(0.1 * 1000);\n                    if (this.iframe) {\n                        this.iframe.style.display = \"none\";\n                    }\n                }\n                if (!data.success) {\n                    rej(new Error(data.error));\n                } else {\n                    res(data.data);\n                }\n            };\n        });\n        (_this_iframe_contentWindow = this.iframe.contentWindow) === null || _this_iframe_contentWindow === void 0 ? void 0 : _this_iframe_contentWindow.postMessage({\n            eventType: procedureName,\n            // Pass the initialization data on every request in case the iframe storage was reset (can happen in some environments such as iOS PWAs)\n            data: {\n                ...params,\n                ...await this.onIframeLoadedInitVariables()\n            }\n        }, this.iframeBaseUrl, [\n            channel.port2\n        ]);\n        return promise;\n    }\n    /**\n     * This has to be called by any iframe that will be removed from the DOM.\n     * Use to make sure that we reset the global loaded state of the particular iframe.src\n     * @internal\n     */ destroy() {\n        if (this.iframe) {\n            isIframeLoaded.delete(this.iframe.src);\n        }\n    }\n    /**\n     * @internal\n     */ constructor({ link, baseUrl, iframeId, container, onIframeInitialize, localStorage, clientId, ecosystem }){\n        Object.defineProperty(this, \"iframe\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"POLLING_INTERVAL_SECONDS\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1.4\n        });\n        Object.defineProperty(this, \"iframeBaseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ecosystem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.localStorage = localStorage;\n        this.clientId = clientId;\n        this.ecosystem = ecosystem;\n        this.iframeBaseUrl = baseUrl;\n        if (typeof document === \"undefined\") {\n            return;\n        }\n        container = container !== null && container !== void 0 ? container : document.body;\n        // Creating the IFrame element for communication\n        let iframe = document.getElementById(iframeId);\n        const hrefLink = new URL(link);\n        // TODO (ew) - bring back version tracking\n        // const sdkVersion = process.env.THIRDWEB_EWS_SDK_VERSION;\n        // if (!sdkVersion) {\n        //   throw new Error(\"Missing THIRDWEB_EWS_SDK_VERSION env var\");\n        // }\n        // hrefLink.searchParams.set(\"sdkVersion\", sdkVersion);\n        if (!iframe || iframe.src !== hrefLink.href) {\n            // ! Do not update the hrefLink here or it'll cause multiple re-renders\n            iframe = document.createElement(\"iframe\");\n            const mergedIframeStyles = {\n                ...iframeBaseStyle\n            };\n            Object.assign(iframe.style, mergedIframeStyles);\n            iframe.setAttribute(\"id\", iframeId);\n            iframe.setAttribute(\"fetchpriority\", \"high\");\n            container.appendChild(iframe);\n            iframe.src = hrefLink.href;\n            // iframe.setAttribute(\"data-version\", sdkVersion);\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            const onIframeLoaded = (event)=>{\n                if (event.data.eventType === \"ewsIframeLoaded\") {\n                    window.removeEventListener(\"message\", onIframeLoaded);\n                    if (!iframe) {\n                        console.warn(\"thirdweb iFrame not found\");\n                        return;\n                    }\n                    this.onIframeLoadHandler(iframe, onIframeInitialize)();\n                }\n            };\n            window.addEventListener(\"message\", onIframeLoaded);\n        }\n        this.iframe = iframe;\n    }\n} //# sourceMappingURL=IframeCommunicator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvdXRpbHMvaUZyYW1lQ29tbXVuaWNhdGlvbi9JZnJhbWVDb21tdW5pY2F0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDdEQsTUFBTUMsa0JBQWtCO0lBQ3BCQyxRQUFRO0lBQ1JDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxpQkFBaUI7SUFDakJDLGFBQWE7SUFDYkMsVUFBVTtJQUNWQyxLQUFLO0lBQ0xDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLGVBQWU7QUFDbkI7QUFDQSx3Q0FBd0M7QUFDeEMsTUFBTUMsaUJBQWlCLElBQUlDO0FBQzNCOztDQUVDLEdBQ0QsOERBQThEO0FBQ3ZELE1BQU1DO0lBcUZULDhEQUE4RDtJQUM5RCxNQUFNQyw4QkFBOEI7WUFNakIsaUJBQ0U7UUFOakIsT0FBTztZQUNIQyxZQUFZLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLGFBQWE7WUFDakRDLG1CQUFtQixNQUFNLElBQUksQ0FBQ0YsWUFBWSxDQUFDRyxjQUFjO1lBQ3pEQyxjQUFjLE1BQU0sSUFBSSxDQUFDSixZQUFZLENBQUNLLGVBQWU7WUFDckRDLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCQyxTQUFTLEdBQUUsc0JBQUksQ0FBQ0MsU0FBUyxjQUFkLHNEQUFnQkQsU0FBUztZQUNwQ0UsV0FBVyxHQUFFLHVCQUFJLENBQUNELFNBQVMsY0FBZCx3REFBZ0JFLEVBQUU7UUFDbkM7SUFDSjtJQUNBOztLQUVDLEdBQ0RDLG9CQUFvQkMsTUFBTSxFQUFFQyxrQkFBa0IsRUFBRTtRQUM1QyxPQUFPO2dCQWlCSEQ7WUFoQkEsTUFBTUUsVUFBVSxJQUFJQztZQUNwQixNQUFNQyxVQUFVLElBQUlDLFFBQVEsQ0FBQ0MsS0FBS0M7Z0JBQzlCLDhEQUE4RDtnQkFDOURMLFFBQVFNLEtBQUssQ0FBQ0MsU0FBUyxHQUFHLENBQUNDO29CQUN2QixNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHRDtvQkFDakJSLFFBQVFNLEtBQUssQ0FBQ0ksS0FBSztvQkFDbkIsSUFBSSxDQUFDRCxLQUFLRSxPQUFPLEVBQUU7d0JBQ2ZOLElBQUksSUFBSU8sTUFBTUgsS0FBS0ksS0FBSztvQkFDNUI7b0JBQ0FoQyxlQUFlaUMsR0FBRyxDQUFDaEIsT0FBT2lCLEdBQUcsRUFBRTtvQkFDL0IsSUFBSWhCLG9CQUFvQjt3QkFDcEJBO29CQUNKO29CQUNBSyxJQUFJO2dCQUNSO1lBQ0o7WUFDQU4sbUJBQUFBLDhCQUFBQSx3QkFBQUEsT0FBUWtCLGFBQWEsY0FBckJsQiw0Q0FBQUEsc0JBQXVCbUIsV0FBVyxDQUFDO2dCQUMvQkMsV0FBVztnQkFDWFQsTUFBTSxNQUFNLElBQUksQ0FBQ3pCLDJCQUEyQjtZQUNoRCxHQUFHLElBQUksQ0FBQ21DLGFBQWEsRUFBRTtnQkFBQ25CLFFBQVFvQixLQUFLO2FBQUM7WUFDdEMsTUFBTWxCO1FBQ1Y7SUFDSjtJQUNBOztLQUVDLEdBQ0QsTUFBTW1CLEtBQUssS0FBOEMsRUFBRTtZQUFoRCxFQUFFQyxhQUFhLEVBQUVDLE1BQU0sRUFBRUMsYUFBYSxLQUFLLEVBQUcsR0FBOUM7WUFpQ1A7UUFoQ0EsSUFBSSxDQUFDLElBQUksQ0FBQzFCLE1BQU0sRUFBRTtZQUNkLE1BQU0sSUFBSWMsTUFBTTtRQUNwQjtRQUNBLE1BQU8sQ0FBQy9CLGVBQWU0QyxHQUFHLENBQUMsSUFBSSxDQUFDM0IsTUFBTSxDQUFDaUIsR0FBRyxFQUFHO1lBQ3pDLE1BQU0vQyxzREFBS0EsQ0FBQyxJQUFJLENBQUMwRCx3QkFBd0IsR0FBRztRQUNoRDtRQUNBLElBQUlGLFlBQVk7WUFDWixJQUFJLENBQUMxQixNQUFNLENBQUM2QixLQUFLLENBQUNoRCxPQUFPLEdBQUc7WUFDNUIseUZBQXlGO1lBQ3pGLE1BQU1YLHNEQUFLQSxDQUFDLFFBQVE7UUFDeEI7UUFDQSxNQUFNZ0MsVUFBVSxJQUFJQztRQUNwQixNQUFNQyxVQUFVLElBQUlDLFFBQVEsQ0FBQ0MsS0FBS0M7WUFDOUIsOERBQThEO1lBQzlETCxRQUFRTSxLQUFLLENBQUNDLFNBQVMsR0FBRyxPQUFPQztnQkFDN0IsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR0Q7Z0JBQ2pCUixRQUFRTSxLQUFLLENBQUNJLEtBQUs7Z0JBQ25CLElBQUljLFlBQVk7b0JBQ1osc0RBQXNEO29CQUN0RCxNQUFNeEQsc0RBQUtBLENBQUMsTUFBTTtvQkFDbEIsSUFBSSxJQUFJLENBQUM4QixNQUFNLEVBQUU7d0JBQ2IsSUFBSSxDQUFDQSxNQUFNLENBQUM2QixLQUFLLENBQUNoRCxPQUFPLEdBQUc7b0JBQ2hDO2dCQUNKO2dCQUNBLElBQUksQ0FBQzhCLEtBQUtFLE9BQU8sRUFBRTtvQkFDZk4sSUFBSSxJQUFJTyxNQUFNSCxLQUFLSSxLQUFLO2dCQUM1QixPQUNLO29CQUNEVCxJQUFJSyxLQUFLQSxJQUFJO2dCQUNqQjtZQUNKO1FBQ0o7U0FDQSxpQ0FBSSxDQUFDWCxNQUFNLENBQUNrQixhQUFhLGNBQXpCLDRFQUEyQkMsV0FBVyxDQUFDO1lBQ25DQyxXQUFXSTtZQUNYLHdJQUF3STtZQUN4SWIsTUFBTTtnQkFDRixHQUFHYyxNQUFNO2dCQUNULEdBQUksTUFBTSxJQUFJLENBQUN2QywyQkFBMkIsRUFBRTtZQUNoRDtRQUNKLEdBQUcsSUFBSSxDQUFDbUMsYUFBYSxFQUFFO1lBQUNuQixRQUFRb0IsS0FBSztTQUFDO1FBQ3RDLE9BQU9sQjtJQUNYO0lBQ0E7Ozs7S0FJQyxHQUNEMEIsVUFBVTtRQUNOLElBQUksSUFBSSxDQUFDOUIsTUFBTSxFQUFFO1lBQ2JqQixlQUFlZ0QsTUFBTSxDQUFDLElBQUksQ0FBQy9CLE1BQU0sQ0FBQ2lCLEdBQUc7UUFDekM7SUFDSjtJQWxMQTs7S0FFQyxHQUNEZSxZQUFZLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRW5DLGtCQUFrQixFQUFFYixZQUFZLEVBQUVNLFFBQVEsRUFBRUUsU0FBUyxFQUFHLENBQUU7UUFDeEd5QyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVU7WUFDbENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBTCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLDRCQUE0QjtZQUNwREMsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztRQUNYO1FBQ0FMLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsaUJBQWlCO1lBQ3pDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxnQkFBZ0I7WUFDeENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBTCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFlBQVk7WUFDcENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBTCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLGFBQWE7WUFDckNDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBLElBQUksQ0FBQ3RELFlBQVksR0FBR0E7UUFDcEIsSUFBSSxDQUFDTSxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0UsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUN5QixhQUFhLEdBQUdhO1FBQ3JCLElBQUksT0FBT1MsYUFBYSxhQUFhO1lBQ2pDO1FBQ0o7UUFDQVAsWUFBWUEsc0JBQUFBLHVCQUFBQSxZQUFhTyxTQUFTQyxJQUFJO1FBQ3RDLGdEQUFnRDtRQUNoRCxJQUFJNUMsU0FBUzJDLFNBQVNFLGNBQWMsQ0FBQ1Y7UUFDckMsTUFBTVcsV0FBVyxJQUFJQyxJQUFJZDtRQUN6QiwwQ0FBMEM7UUFDMUMsMkRBQTJEO1FBQzNELHFCQUFxQjtRQUNyQixpRUFBaUU7UUFDakUsSUFBSTtRQUNKLHVEQUF1RDtRQUN2RCxJQUFJLENBQUNqQyxVQUFVQSxPQUFPaUIsR0FBRyxLQUFLNkIsU0FBU0UsSUFBSSxFQUFFO1lBQ3pDLHVFQUF1RTtZQUN2RWhELFNBQVMyQyxTQUFTTSxhQUFhLENBQUM7WUFDaEMsTUFBTUMscUJBQXFCO2dCQUN2QixHQUFHL0UsZUFBZTtZQUN0QjtZQUNBa0UsT0FBT2MsTUFBTSxDQUFDbkQsT0FBTzZCLEtBQUssRUFBRXFCO1lBQzVCbEQsT0FBT29ELFlBQVksQ0FBQyxNQUFNakI7WUFDMUJuQyxPQUFPb0QsWUFBWSxDQUFDLGlCQUFpQjtZQUNyQ2hCLFVBQVVpQixXQUFXLENBQUNyRDtZQUN0QkEsT0FBT2lCLEdBQUcsR0FBRzZCLFNBQVNFLElBQUk7WUFDMUIsbURBQW1EO1lBQ25ELDhEQUE4RDtZQUM5RCxNQUFNTSxpQkFBaUIsQ0FBQzVDO2dCQUNwQixJQUFJQSxNQUFNQyxJQUFJLENBQUNTLFNBQVMsS0FBSyxtQkFBbUI7b0JBQzVDbUMsT0FBT0MsbUJBQW1CLENBQUMsV0FBV0Y7b0JBQ3RDLElBQUksQ0FBQ3RELFFBQVE7d0JBQ1R5RCxRQUFRQyxJQUFJLENBQUM7d0JBQ2I7b0JBQ0o7b0JBQ0EsSUFBSSxDQUFDM0QsbUJBQW1CLENBQUNDLFFBQVFDO2dCQUNyQztZQUNKO1lBQ0FzRCxPQUFPSSxnQkFBZ0IsQ0FBQyxXQUFXTDtRQUN2QztRQUNBLElBQUksQ0FBQ3RELE1BQU0sR0FBR0E7SUFDbEI7QUFnR0osRUFDQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL3dlYi91dGlscy9pRnJhbWVDb21tdW5pY2F0aW9uL0lmcmFtZUNvbW11bmljYXRvci5qcz80NjU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNsZWVwIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL3NsZWVwLmpzXCI7XG5jb25zdCBpZnJhbWVCYXNlU3R5bGUgPSB7XG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICBjb2xvclNjaGVtZTogXCJsaWdodFwiLFxuICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgdG9wOiBcIjBweFwiLFxuICAgIHJpZ2h0OiBcIjBweFwiLFxuICAgIHpJbmRleDogXCIyMTQ3NDgzNjQ2XCIsXG4gICAgZGlzcGxheTogXCJub25lXCIsXG4gICAgcG9pbnRlckV2ZW50czogXCJhbGxcIixcbn07XG4vLyBHbG9iYWwgdmFyIHRvIGhlbHAgdHJhY2sgaWZyYW1lIHN0YXRlXG5jb25zdCBpc0lmcmFtZUxvYWRlZCA9IG5ldyBNYXAoKTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbi8vIGJpb21lLWlnbm9yZSBsaW50L3N1c3BpY2lvdXMvbm9FeHBsaWNpdEFueTogVE9ETzogZml4IGxhdGVyXG5leHBvcnQgY2xhc3MgSWZyYW1lQ29tbXVuaWNhdG9yIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih7IGxpbmssIGJhc2VVcmwsIGlmcmFtZUlkLCBjb250YWluZXIsIG9uSWZyYW1lSW5pdGlhbGl6ZSwgbG9jYWxTdG9yYWdlLCBjbGllbnRJZCwgZWNvc3lzdGVtLCB9KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImlmcmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJQT0xMSU5HX0lOVEVSVkFMX1NFQ09ORFNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDEuNFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaWZyYW1lQmFzZVVybFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsb2NhbFN0b3JhZ2VcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2xpZW50SWRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiZWNvc3lzdGVtXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubG9jYWxTdG9yYWdlID0gbG9jYWxTdG9yYWdlO1xuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgICAgIHRoaXMuZWNvc3lzdGVtID0gZWNvc3lzdGVtO1xuICAgICAgICB0aGlzLmlmcmFtZUJhc2VVcmwgPSBiYXNlVXJsO1xuICAgICAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29udGFpbmVyID0gY29udGFpbmVyID8/IGRvY3VtZW50LmJvZHk7XG4gICAgICAgIC8vIENyZWF0aW5nIHRoZSBJRnJhbWUgZWxlbWVudCBmb3IgY29tbXVuaWNhdGlvblxuICAgICAgICBsZXQgaWZyYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWZyYW1lSWQpO1xuICAgICAgICBjb25zdCBocmVmTGluayA9IG5ldyBVUkwobGluayk7XG4gICAgICAgIC8vIFRPRE8gKGV3KSAtIGJyaW5nIGJhY2sgdmVyc2lvbiB0cmFja2luZ1xuICAgICAgICAvLyBjb25zdCBzZGtWZXJzaW9uID0gcHJvY2Vzcy5lbnYuVEhJUkRXRUJfRVdTX1NES19WRVJTSU9OO1xuICAgICAgICAvLyBpZiAoIXNka1ZlcnNpb24pIHtcbiAgICAgICAgLy8gICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIFRISVJEV0VCX0VXU19TREtfVkVSU0lPTiBlbnYgdmFyXCIpO1xuICAgICAgICAvLyB9XG4gICAgICAgIC8vIGhyZWZMaW5rLnNlYXJjaFBhcmFtcy5zZXQoXCJzZGtWZXJzaW9uXCIsIHNka1ZlcnNpb24pO1xuICAgICAgICBpZiAoIWlmcmFtZSB8fCBpZnJhbWUuc3JjICE9PSBocmVmTGluay5ocmVmKSB7XG4gICAgICAgICAgICAvLyAhIERvIG5vdCB1cGRhdGUgdGhlIGhyZWZMaW5rIGhlcmUgb3IgaXQnbGwgY2F1c2UgbXVsdGlwbGUgcmUtcmVuZGVyc1xuICAgICAgICAgICAgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlZElmcmFtZVN0eWxlcyA9IHtcbiAgICAgICAgICAgICAgICAuLi5pZnJhbWVCYXNlU3R5bGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihpZnJhbWUuc3R5bGUsIG1lcmdlZElmcmFtZVN0eWxlcyk7XG4gICAgICAgICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwiaWRcIiwgaWZyYW1lSWQpO1xuICAgICAgICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcImZldGNocHJpb3JpdHlcIiwgXCJoaWdoXCIpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gICAgICAgICAgICBpZnJhbWUuc3JjID0gaHJlZkxpbmsuaHJlZjtcbiAgICAgICAgICAgIC8vIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXZlcnNpb25cIiwgc2RrVmVyc2lvbik7XG4gICAgICAgICAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IFRPRE86IGZpeCBsYXRlclxuICAgICAgICAgICAgY29uc3Qgb25JZnJhbWVMb2FkZWQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZGF0YS5ldmVudFR5cGUgPT09IFwiZXdzSWZyYW1lTG9hZGVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG9uSWZyYW1lTG9hZGVkKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpZnJhbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcInRoaXJkd2ViIGlGcmFtZSBub3QgZm91bmRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbklmcmFtZUxvYWRIYW5kbGVyKGlmcmFtZSwgb25JZnJhbWVJbml0aWFsaXplKSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgb25JZnJhbWVMb2FkZWQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaWZyYW1lID0gaWZyYW1lO1xuICAgIH1cbiAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IFRPRE86IGZpeCBsYXRlclxuICAgIGFzeW5jIG9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF1dGhDb29raWU6IGF3YWl0IHRoaXMubG9jYWxTdG9yYWdlLmdldEF1dGhDb29raWUoKSxcbiAgICAgICAgICAgIGRldmljZVNoYXJlU3RvcmVkOiBhd2FpdCB0aGlzLmxvY2FsU3RvcmFnZS5nZXREZXZpY2VTaGFyZSgpLFxuICAgICAgICAgICAgd2FsbGV0VXNlcklkOiBhd2FpdCB0aGlzLmxvY2FsU3RvcmFnZS5nZXRXYWxsZXRVc2VySWQoKSxcbiAgICAgICAgICAgIGNsaWVudElkOiB0aGlzLmNsaWVudElkLFxuICAgICAgICAgICAgcGFydG5lcklkOiB0aGlzLmVjb3N5c3RlbT8ucGFydG5lcklkLFxuICAgICAgICAgICAgZWNvc3lzdGVtSWQ6IHRoaXMuZWNvc3lzdGVtPy5pZCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgb25JZnJhbWVMb2FkSGFuZGxlcihpZnJhbWUsIG9uSWZyYW1lSW5pdGlhbGl6ZSkge1xuICAgICAgICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGJpb21lLWlnbm9yZSBsaW50L3N1c3BpY2lvdXMvbm9FeHBsaWNpdEFueTogVE9ETzogZml4IGxhdGVyXG4gICAgICAgICAgICAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBldmVudDtcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbC5wb3J0MS5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqKG5ldyBFcnJvcihkYXRhLmVycm9yKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaXNJZnJhbWVMb2FkZWQuc2V0KGlmcmFtZS5zcmMsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAob25JZnJhbWVJbml0aWFsaXplKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbklmcmFtZUluaXRpYWxpemUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXModHJ1ZSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWZyYW1lPy5jb250ZW50V2luZG93Py5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgZXZlbnRUeXBlOiBcImluaXRJZnJhbWVcIixcbiAgICAgICAgICAgICAgICBkYXRhOiBhd2FpdCB0aGlzLm9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpLFxuICAgICAgICAgICAgfSwgdGhpcy5pZnJhbWVCYXNlVXJsLCBbY2hhbm5lbC5wb3J0Ml0pO1xuICAgICAgICAgICAgYXdhaXQgcHJvbWlzZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgY2FsbCh7IHByb2NlZHVyZU5hbWUsIHBhcmFtcywgc2hvd0lmcmFtZSA9IGZhbHNlLCB9KSB7XG4gICAgICAgIGlmICghdGhpcy5pZnJhbWUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIklmcmFtZSBub3QgZm91bmQuIFlvdSBhcmUgbGlrZWx5IGNhbGxpbmcgdGhpcyBmcm9tIHRoZSBiYWNrZW5kIHdoZXJlIHRoZSBET00gaXMgbm90IGF2YWlsYWJsZS5cIik7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKCFpc0lmcmFtZUxvYWRlZC5nZXQodGhpcy5pZnJhbWUuc3JjKSkge1xuICAgICAgICAgICAgYXdhaXQgc2xlZXAodGhpcy5QT0xMSU5HX0lOVEVSVkFMX1NFQ09ORFMgKiAxMDAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2hvd0lmcmFtZSkge1xuICAgICAgICAgICAgdGhpcy5pZnJhbWUuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgIC8vIG1hZ2ljIG51bWJlciB0byBsZXQgdGhlIGRpc3BsYXkgcmVuZGVyIGJlZm9yZSBwZXJmb3JtaW5nIHRoZSBhbmltYXRpb24gb2YgdGhlIG1vZGFsIGluXG4gICAgICAgICAgICBhd2FpdCBzbGVlcCgwLjAwNSAqIDEwMDApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgICAgICAgICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBUT0RPOiBmaXggbGF0ZXJcbiAgICAgICAgICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBldmVudDtcbiAgICAgICAgICAgICAgICBjaGFubmVsLnBvcnQxLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgaWYgKHNob3dJZnJhbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gbWFnaWMgbnVtYmVyIHRvIGxldCBtb2RhbCBmYWRlIG91dCBiZWZvcmUgaGlkaW5nIGl0XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHNsZWVwKDAuMSAqIDEwMDApO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pZnJhbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICByZWoobmV3IEVycm9yKGRhdGEuZXJyb3IpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcyhkYXRhLmRhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmlmcmFtZS5jb250ZW50V2luZG93Py5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICBldmVudFR5cGU6IHByb2NlZHVyZU5hbWUsXG4gICAgICAgICAgICAvLyBQYXNzIHRoZSBpbml0aWFsaXphdGlvbiBkYXRhIG9uIGV2ZXJ5IHJlcXVlc3QgaW4gY2FzZSB0aGUgaWZyYW1lIHN0b3JhZ2Ugd2FzIHJlc2V0IChjYW4gaGFwcGVuIGluIHNvbWUgZW52aXJvbm1lbnRzIHN1Y2ggYXMgaU9TIFBXQXMpXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgLi4ucGFyYW1zLFxuICAgICAgICAgICAgICAgIC4uLihhd2FpdCB0aGlzLm9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sIHRoaXMuaWZyYW1lQmFzZVVybCwgW2NoYW5uZWwucG9ydDJdKTtcbiAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgaGFzIHRvIGJlIGNhbGxlZCBieSBhbnkgaWZyYW1lIHRoYXQgd2lsbCBiZSByZW1vdmVkIGZyb20gdGhlIERPTS5cbiAgICAgKiBVc2UgdG8gbWFrZSBzdXJlIHRoYXQgd2UgcmVzZXQgdGhlIGdsb2JhbCBsb2FkZWQgc3RhdGUgb2YgdGhlIHBhcnRpY3VsYXIgaWZyYW1lLnNyY1xuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIGlmICh0aGlzLmlmcmFtZSkge1xuICAgICAgICAgICAgaXNJZnJhbWVMb2FkZWQuZGVsZXRlKHRoaXMuaWZyYW1lLnNyYyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JZnJhbWVDb21tdW5pY2F0b3IuanMubWFwIl0sIm5hbWVzIjpbInNsZWVwIiwiaWZyYW1lQmFzZVN0eWxlIiwiaGVpZ2h0Iiwid2lkdGgiLCJib3JkZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvclNjaGVtZSIsInBvc2l0aW9uIiwidG9wIiwicmlnaHQiLCJ6SW5kZXgiLCJkaXNwbGF5IiwicG9pbnRlckV2ZW50cyIsImlzSWZyYW1lTG9hZGVkIiwiTWFwIiwiSWZyYW1lQ29tbXVuaWNhdG9yIiwib25JZnJhbWVMb2FkZWRJbml0VmFyaWFibGVzIiwiYXV0aENvb2tpZSIsImxvY2FsU3RvcmFnZSIsImdldEF1dGhDb29raWUiLCJkZXZpY2VTaGFyZVN0b3JlZCIsImdldERldmljZVNoYXJlIiwid2FsbGV0VXNlcklkIiwiZ2V0V2FsbGV0VXNlcklkIiwiY2xpZW50SWQiLCJwYXJ0bmVySWQiLCJlY29zeXN0ZW0iLCJlY29zeXN0ZW1JZCIsImlkIiwib25JZnJhbWVMb2FkSGFuZGxlciIsImlmcmFtZSIsIm9uSWZyYW1lSW5pdGlhbGl6ZSIsImNoYW5uZWwiLCJNZXNzYWdlQ2hhbm5lbCIsInByb21pc2UiLCJQcm9taXNlIiwicmVzIiwicmVqIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJldmVudCIsImRhdGEiLCJjbG9zZSIsInN1Y2Nlc3MiLCJFcnJvciIsImVycm9yIiwic2V0Iiwic3JjIiwiY29udGVudFdpbmRvdyIsInBvc3RNZXNzYWdlIiwiZXZlbnRUeXBlIiwiaWZyYW1lQmFzZVVybCIsInBvcnQyIiwiY2FsbCIsInByb2NlZHVyZU5hbWUiLCJwYXJhbXMiLCJzaG93SWZyYW1lIiwiZ2V0IiwiUE9MTElOR19JTlRFUlZBTF9TRUNPTkRTIiwic3R5bGUiLCJkZXN0cm95IiwiZGVsZXRlIiwiY29uc3RydWN0b3IiLCJsaW5rIiwiYmFzZVVybCIsImlmcmFtZUlkIiwiY29udGFpbmVyIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsImRvY3VtZW50IiwiYm9keSIsImdldEVsZW1lbnRCeUlkIiwiaHJlZkxpbmsiLCJVUkwiLCJocmVmIiwiY3JlYXRlRWxlbWVudCIsIm1lcmdlZElmcmFtZVN0eWxlcyIsImFzc2lnbiIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwib25JZnJhbWVMb2FkZWQiLCJ3aW5kb3ciLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY29uc29sZSIsIndhcm4iLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InAppWalletIframeCommunicator: function() { return /* binding */ InAppWalletIframeCommunicator; }\n/* harmony export */ });\n/* harmony import */ var _utils_storage_webStorage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../utils/storage/webStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/storage/webStorage.js\");\n/* harmony import */ var _core_authentication_client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/authentication/client-scoped-storage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/client-scoped-storage.js\");\n/* harmony import */ var _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/constants/settings.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js\");\n/* harmony import */ var _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\");\n\n\n\n\n/**\n * @internal\n */ class InAppWalletIframeCommunicator extends _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__.IframeCommunicator {\n    /**\n     * @internal\n     */ constructor({ clientId, baseUrl, ecosystem }){\n        super({\n            iframeId: IN_APP_WALLET_IFRAME_ID + ((ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id) || \"\"),\n            link: createInAppWalletIframeLink({\n                clientId,\n                path: _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_1__.IN_APP_WALLET_PATH,\n                ecosystem,\n                baseUrl\n            }).href,\n            baseUrl,\n            container: typeof document === \"undefined\" ? undefined : document.body,\n            localStorage: new _core_authentication_client_scoped_storage_js__WEBPACK_IMPORTED_MODULE_2__.ClientScopedStorage({\n                storage: _utils_storage_webStorage_js__WEBPACK_IMPORTED_MODULE_3__.webLocalStorage,\n                clientId,\n                ecosystem\n            }),\n            clientId,\n            ecosystem\n        });\n        this.clientId = clientId;\n        this.ecosystem = ecosystem;\n    }\n}\n// This is the URL and ID tag of the iFrame that we communicate with\n/**\n * @internal\n */ function createInAppWalletIframeLink(param) {\n    let { clientId, baseUrl, path, ecosystem, queryParams } = param;\n    const inAppWalletUrl = new URL(\"\".concat(path), baseUrl);\n    if (queryParams) {\n        for (const queryKey of Object.keys(queryParams)){\n            var _queryParams_queryKey;\n            inAppWalletUrl.searchParams.set(queryKey, ((_queryParams_queryKey = queryParams[queryKey]) === null || _queryParams_queryKey === void 0 ? void 0 : _queryParams_queryKey.toString()) || \"\");\n        }\n    }\n    inAppWalletUrl.searchParams.set(\"clientId\", clientId);\n    if ((ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.partnerId) !== undefined) {\n        inAppWalletUrl.searchParams.set(\"partnerId\", ecosystem.partnerId);\n    }\n    if ((ecosystem === null || ecosystem === void 0 ? void 0 : ecosystem.id) !== undefined) {\n        inAppWalletUrl.searchParams.set(\"ecosystemId\", ecosystem.id);\n    }\n    return inAppWalletUrl;\n}\nconst IN_APP_WALLET_IFRAME_ID = \"thirdweb-in-app-wallet-iframe\"; //# sourceMappingURL=InAppWalletIframeCommunicator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvdXRpbHMvaUZyYW1lQ29tbXVuaWNhdGlvbi9JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RTtBQUNlO0FBQ25CO0FBQ1o7QUFDN0Q7O0NBRUMsR0FDTSxNQUFNSSxzQ0FBc0NELHNFQUFrQkE7SUFDakU7O0tBRUMsR0FDREUsWUFBWSxFQUFFQyxRQUFRLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFHLENBQUU7UUFDM0MsS0FBSyxDQUFDO1lBQ0ZDLFVBQVVDLDBCQUEyQkYsQ0FBQUEsQ0FBQUEsc0JBQUFBLGdDQUFBQSxVQUFXRyxFQUFFLEtBQUksRUFBQztZQUN2REMsTUFBTUMsNEJBQTRCO2dCQUM5QlA7Z0JBQ0FRLE1BQU1aLDJFQUFrQkE7Z0JBQ3hCTTtnQkFDQUQ7WUFDSixHQUFHUSxJQUFJO1lBQ1BSO1lBQ0FTLFdBQVcsT0FBT0MsYUFBYSxjQUFjQyxZQUFZRCxTQUFTRSxJQUFJO1lBQ3RFQyxjQUFjLElBQUluQiw4RkFBbUJBLENBQUM7Z0JBQ2xDb0IsU0FBU3JCLHlFQUFlQTtnQkFDeEJNO2dCQUNBRTtZQUNKO1lBQ0FGO1lBQ0FFO1FBQ0o7UUFDQSxJQUFJLENBQUNGLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDRSxTQUFTLEdBQUdBO0lBQ3JCO0FBQ0o7QUFDQSxvRUFBb0U7QUFDcEU7O0NBRUMsR0FDRCxTQUFTSyw0QkFBNEIsS0FBb0Q7UUFBcEQsRUFBRVAsUUFBUSxFQUFFQyxPQUFPLEVBQUVPLElBQUksRUFBRU4sU0FBUyxFQUFFYyxXQUFXLEVBQUcsR0FBcEQ7SUFDakMsTUFBTUMsaUJBQWlCLElBQUlDLElBQUksR0FBUSxPQUFMVixPQUFRUDtJQUMxQyxJQUFJZSxhQUFhO1FBQ2IsS0FBSyxNQUFNRyxZQUFZQyxPQUFPQyxJQUFJLENBQUNMLGFBQWM7Z0JBQ0hBO1lBQTFDQyxlQUFlSyxZQUFZLENBQUNDLEdBQUcsQ0FBQ0osVUFBVUgsRUFBQUEsd0JBQUFBLFdBQVcsQ0FBQ0csU0FBUyxjQUFyQkgsNENBQUFBLHNCQUF1QlEsUUFBUSxPQUFNO1FBQ25GO0lBQ0o7SUFDQVAsZUFBZUssWUFBWSxDQUFDQyxHQUFHLENBQUMsWUFBWXZCO0lBQzVDLElBQUlFLENBQUFBLHNCQUFBQSxnQ0FBQUEsVUFBV3VCLFNBQVMsTUFBS2IsV0FBVztRQUNwQ0ssZUFBZUssWUFBWSxDQUFDQyxHQUFHLENBQUMsYUFBYXJCLFVBQVV1QixTQUFTO0lBQ3BFO0lBQ0EsSUFBSXZCLENBQUFBLHNCQUFBQSxnQ0FBQUEsVUFBV0csRUFBRSxNQUFLTyxXQUFXO1FBQzdCSyxlQUFlSyxZQUFZLENBQUNDLEdBQUcsQ0FBQyxlQUFlckIsVUFBVUcsRUFBRTtJQUMvRDtJQUNBLE9BQU9ZO0FBQ1g7QUFDQSxNQUFNYiwwQkFBMEIsaUNBQ2hDLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvd2ViL3V0aWxzL2lGcmFtZUNvbW11bmljYXRpb24vSW5BcHBXYWxsZXRJZnJhbWVDb21tdW5pY2F0b3IuanM/YjJlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3ZWJMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdXRpbHMvc3RvcmFnZS93ZWJTdG9yYWdlLmpzXCI7XG5pbXBvcnQgeyBDbGllbnRTY29wZWRTdG9yYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vY2xpZW50LXNjb3BlZC1zdG9yYWdlLmpzXCI7XG5pbXBvcnQgeyBJTl9BUFBfV0FMTEVUX1BBVEggfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9jb25zdGFudHMvc2V0dGluZ3MuanNcIjtcbmltcG9ydCB7IElmcmFtZUNvbW11bmljYXRvciB9IGZyb20gXCIuL0lmcmFtZUNvbW11bmljYXRvci5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIEluQXBwV2FsbGV0SWZyYW1lQ29tbXVuaWNhdG9yIGV4dGVuZHMgSWZyYW1lQ29tbXVuaWNhdG9yIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih7IGNsaWVudElkLCBiYXNlVXJsLCBlY29zeXN0ZW0sIH0pIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgaWZyYW1lSWQ6IElOX0FQUF9XQUxMRVRfSUZSQU1FX0lEICsgKGVjb3N5c3RlbT8uaWQgfHwgXCJcIiksXG4gICAgICAgICAgICBsaW5rOiBjcmVhdGVJbkFwcFdhbGxldElmcmFtZUxpbmsoe1xuICAgICAgICAgICAgICAgIGNsaWVudElkLFxuICAgICAgICAgICAgICAgIHBhdGg6IElOX0FQUF9XQUxMRVRfUEFUSCxcbiAgICAgICAgICAgICAgICBlY29zeXN0ZW0sXG4gICAgICAgICAgICAgICAgYmFzZVVybCxcbiAgICAgICAgICAgIH0pLmhyZWYsXG4gICAgICAgICAgICBiYXNlVXJsLFxuICAgICAgICAgICAgY29udGFpbmVyOiB0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIgPyB1bmRlZmluZWQgOiBkb2N1bWVudC5ib2R5LFxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlOiBuZXcgQ2xpZW50U2NvcGVkU3RvcmFnZSh7XG4gICAgICAgICAgICAgICAgc3RvcmFnZTogd2ViTG9jYWxTdG9yYWdlLFxuICAgICAgICAgICAgICAgIGNsaWVudElkLFxuICAgICAgICAgICAgICAgIGVjb3N5c3RlbSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgY2xpZW50SWQsXG4gICAgICAgICAgICBlY29zeXN0ZW0sXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgICAgIHRoaXMuZWNvc3lzdGVtID0gZWNvc3lzdGVtO1xuICAgIH1cbn1cbi8vIFRoaXMgaXMgdGhlIFVSTCBhbmQgSUQgdGFnIG9mIHRoZSBpRnJhbWUgdGhhdCB3ZSBjb21tdW5pY2F0ZSB3aXRoXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBjcmVhdGVJbkFwcFdhbGxldElmcmFtZUxpbmsoeyBjbGllbnRJZCwgYmFzZVVybCwgcGF0aCwgZWNvc3lzdGVtLCBxdWVyeVBhcmFtcywgfSkge1xuICAgIGNvbnN0IGluQXBwV2FsbGV0VXJsID0gbmV3IFVSTChgJHtwYXRofWAsIGJhc2VVcmwpO1xuICAgIGlmIChxdWVyeVBhcmFtcykge1xuICAgICAgICBmb3IgKGNvbnN0IHF1ZXJ5S2V5IG9mIE9iamVjdC5rZXlzKHF1ZXJ5UGFyYW1zKSkge1xuICAgICAgICAgICAgaW5BcHBXYWxsZXRVcmwuc2VhcmNoUGFyYW1zLnNldChxdWVyeUtleSwgcXVlcnlQYXJhbXNbcXVlcnlLZXldPy50b1N0cmluZygpIHx8IFwiXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluQXBwV2FsbGV0VXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJjbGllbnRJZFwiLCBjbGllbnRJZCk7XG4gICAgaWYgKGVjb3N5c3RlbT8ucGFydG5lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgaW5BcHBXYWxsZXRVcmwuc2VhcmNoUGFyYW1zLnNldChcInBhcnRuZXJJZFwiLCBlY29zeXN0ZW0ucGFydG5lcklkKTtcbiAgICB9XG4gICAgaWYgKGVjb3N5c3RlbT8uaWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpbkFwcFdhbGxldFVybC5zZWFyY2hQYXJhbXMuc2V0KFwiZWNvc3lzdGVtSWRcIiwgZWNvc3lzdGVtLmlkKTtcbiAgICB9XG4gICAgcmV0dXJuIGluQXBwV2FsbGV0VXJsO1xufVxuY29uc3QgSU5fQVBQX1dBTExFVF9JRlJBTUVfSUQgPSBcInRoaXJkd2ViLWluLWFwcC13YWxsZXQtaWZyYW1lXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcy5tYXAiXSwibmFtZXMiOlsid2ViTG9jYWxTdG9yYWdlIiwiQ2xpZW50U2NvcGVkU3RvcmFnZSIsIklOX0FQUF9XQUxMRVRfUEFUSCIsIklmcmFtZUNvbW11bmljYXRvciIsIkluQXBwV2FsbGV0SWZyYW1lQ29tbXVuaWNhdG9yIiwiY29uc3RydWN0b3IiLCJjbGllbnRJZCIsImJhc2VVcmwiLCJlY29zeXN0ZW0iLCJpZnJhbWVJZCIsIklOX0FQUF9XQUxMRVRfSUZSQU1FX0lEIiwiaWQiLCJsaW5rIiwiY3JlYXRlSW5BcHBXYWxsZXRJZnJhbWVMaW5rIiwicGF0aCIsImhyZWYiLCJjb250YWluZXIiLCJkb2N1bWVudCIsInVuZGVmaW5lZCIsImJvZHkiLCJsb2NhbFN0b3JhZ2UiLCJzdG9yYWdlIiwicXVlcnlQYXJhbXMiLCJpbkFwcFdhbGxldFVybCIsIlVSTCIsInF1ZXJ5S2V5IiwiT2JqZWN0Iiwia2V5cyIsInNlYXJjaFBhcmFtcyIsInNldCIsInRvU3RyaW5nIiwicGFydG5lcklkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\n"));

/***/ })

}]);