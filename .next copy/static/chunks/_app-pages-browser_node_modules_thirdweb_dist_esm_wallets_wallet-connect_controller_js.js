"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_wallet-connect_controller_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoConnectWC: function() { return /* binding */ autoConnectWC; },\n/* harmony export */   connectWC: function() { return /* binding */ connectWC; },\n/* harmony export */   isWalletConnect: function() { return /* binding */ isWalletConnect; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var _analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../analytics/track/transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/analytics/track/transaction.js\");\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/signatures/helpers/parse-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parse-typed-data.js\");\n/* harmony import */ var _utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/storage/walletStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/storage/walletStorage.js\");\n/* harmony import */ var _utils_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/url.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/url.js\");\n/* harmony import */ var _generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__generated__/getWalletInfo.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/__generated__/getWalletInfo.js\");\n/* harmony import */ var _utils_chains_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/chains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/chains.js\");\n/* harmony import */ var _utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/defaultDappMetadata.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/defaultDappMetadata.js\");\n/* harmony import */ var _utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/normalizeChainId.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/constants.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nconst defaultShowQrModal = true;\nconst storageKeys = {\n    requestedChains: \"tw.wc.requestedChains\",\n    lastUsedChainId: \"tw.wc.lastUsedChainId\"\n};\n/**\n * Checks if the provided wallet is a Wallet Connect wallet.\n *\n * @param wallet - The wallet to check.\n * @returns True if the wallet is a Wallet Connect wallet, false otherwise.\n */ function isWalletConnect(wallet) {\n    return wallet.id === \"walletConnect\";\n}\n/**\n * @internal\n */ async function connectWC(options, emitter, walletId, storage, sessionHandler) {\n    const provider = await initProvider(options, walletId, sessionHandler);\n    const wcOptions = options.walletConnect;\n    let { onDisplayUri } = wcOptions || {};\n    // use default sessionHandler unless onDisplayUri is explicitly provided\n    if (!onDisplayUri && sessionHandler) {\n        const walletInfo = await (0,_generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__.getWalletInfo)(walletId);\n        const deeplinkHandler = (uri)=>{\n            const appUrl = walletInfo.mobile.native || walletInfo.mobile.universal;\n            if (!appUrl) {\n                // generic wc uri\n                sessionHandler(uri);\n                return;\n            }\n            const fullUrl = (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_1__.formatWalletConnectUrl)(appUrl, uri).redirect;\n            sessionHandler(fullUrl);\n        };\n        onDisplayUri = deeplinkHandler;\n    }\n    if (onDisplayUri) {\n        provider.events.addListener(\"display_uri\", onDisplayUri);\n    }\n    let optionalChains = wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.optionalChains;\n    let chainToRequest = options.chain;\n    // ignore the given options chains - and set the safe supported chains\n    if (walletId === \"global.safe\") {\n        optionalChains = chainsToRequestForSafe.map(_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain);\n        if (chainToRequest && !optionalChains.includes(chainToRequest)) {\n            chainToRequest = undefined;\n        }\n    }\n    const { rpcMap, requiredChain, optionalChains: chainsToRequest } = getChainsToRequest({\n        client: options.client,\n        chain: chainToRequest,\n        optionalChains: optionalChains\n    });\n    if (provider.session) {\n        await provider.connect({\n            ...(wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.pairingTopic) ? {\n                pairingTopic: wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.pairingTopic\n            } : {},\n            optionalChains: chainsToRequest,\n            chains: requiredChain ? [\n                requiredChain.id\n            ] : undefined,\n            rpcMap: rpcMap\n        });\n    }\n    setRequestedChainsIds(chainsToRequest, storage);\n    // If session exists and chains are authorized, enable provider for required chain\n    const addresses = await provider.enable();\n    const address = addresses[0];\n    if (!address) {\n        throw new Error(\"No accounts found on provider.\");\n    }\n    const providerChainId = (0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(provider.chainId);\n    const chain = options.chain && options.chain.id === providerChainId ? options.chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(providerChainId);\n    if (options) {\n        var _options_walletConnect, _options_walletConnect1;\n        const savedParams = {\n            optionalChains: (_options_walletConnect = options.walletConnect) === null || _options_walletConnect === void 0 ? void 0 : _options_walletConnect.optionalChains,\n            chain: options.chain,\n            pairingTopic: (_options_walletConnect1 = options.walletConnect) === null || _options_walletConnect1 === void 0 ? void 0 : _options_walletConnect1.pairingTopic\n        };\n        if (storage) {\n            (0,_utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__.saveConnectParamsToStorage)(storage, walletId, savedParams);\n        }\n    }\n    if (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.onDisplayUri) {\n        provider.events.removeListener(\"display_uri\", wcOptions.onDisplayUri);\n    }\n    return onConnect(address, chain, provider, emitter, storage, options.client);\n}\n/**\n * Auto connect to already connected wallet connect session.\n * @internal\n */ async function autoConnectWC(options, emitter, walletId, storage, sessionHandler) {\n    const savedConnectParams = storage ? await (0,_utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__.getSavedConnectParamsFromStorage)(storage, walletId) : null;\n    const provider = await initProvider(savedConnectParams ? {\n        chain: savedConnectParams.chain,\n        client: options.client,\n        walletConnect: {\n            pairingTopic: savedConnectParams.pairingTopic,\n            optionalChains: savedConnectParams.optionalChains\n        }\n    } : {\n        client: options.client,\n        walletConnect: {}\n    }, walletId, sessionHandler, true);\n    const address = provider.accounts[0];\n    if (!address) {\n        throw new Error(\"No accounts found on provider.\");\n    }\n    const providerChainId = (0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(provider.chainId);\n    const chain = options.chain && options.chain.id === providerChainId ? options.chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(providerChainId);\n    return onConnect(address, chain, provider, emitter, storage, options.client);\n}\n// Connection utils -----------------------------------------------------------------------------------------------\nasync function initProvider(options, walletId, sessionRequestHandler) {\n    let isAutoConnect = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n    var _wcOptions_appMetadata, _wcOptions_appMetadata1, _wcOptions_appMetadata2, _wcOptions_appMetadata3;\n    const walletInfo = await (0,_generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__.getWalletInfo)(walletId);\n    const wcOptions = options.walletConnect;\n    const { EthereumProvider, OPTIONAL_EVENTS, OPTIONAL_METHODS } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_walletconnect_ethereum-provider_dist_index_es_js\").then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/ethereum-provider */ \"(app-pages-browser)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\"));\n    let optionalChains = wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.optionalChains;\n    let chainToRequest = options.chain;\n    // ignore the given options chains - and set the safe supported chains\n    if (walletId === \"global.safe\") {\n        optionalChains = chainsToRequestForSafe.map(_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain);\n        if (chainToRequest && !optionalChains.includes(chainToRequest)) {\n            chainToRequest = undefined;\n        }\n    }\n    const { rpcMap, requiredChain, optionalChains: chainsToRequest } = getChainsToRequest({\n        client: options.client,\n        chain: chainToRequest,\n        optionalChains: optionalChains\n    });\n    const provider = await EthereumProvider.init({\n        showQrModal: (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.showQrModal) === undefined ? sessionRequestHandler ? false : defaultShowQrModal : wcOptions.showQrModal,\n        projectId: (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.projectId) || _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_PROJECT_ID,\n        optionalMethods: OPTIONAL_METHODS,\n        optionalEvents: OPTIONAL_EVENTS,\n        optionalChains: chainsToRequest,\n        chains: requiredChain ? [\n            requiredChain.id\n        ] : undefined,\n        metadata: {\n            name: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata = wcOptions.appMetadata) === null || _wcOptions_appMetadata === void 0 ? void 0 : _wcOptions_appMetadata.name) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().name,\n            description: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata1 = wcOptions.appMetadata) === null || _wcOptions_appMetadata1 === void 0 ? void 0 : _wcOptions_appMetadata1.description) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().description,\n            url: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata2 = wcOptions.appMetadata) === null || _wcOptions_appMetadata2 === void 0 ? void 0 : _wcOptions_appMetadata2.url) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().url,\n            icons: [\n                (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata3 = wcOptions.appMetadata) === null || _wcOptions_appMetadata3 === void 0 ? void 0 : _wcOptions_appMetadata3.logoUrl) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().logoUrl\n            ]\n        },\n        rpcMap: rpcMap,\n        qrModalOptions: wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.qrModalOptions,\n        disableProviderPing: true\n    });\n    provider.events.setMaxListeners(Number.POSITIVE_INFINITY);\n    // disconnect the provider if chains are stale when (if not auto connecting)\n    if (!isAutoConnect) {\n        // const isStale = await isChainsStale(provider, chainsToRequest);\n        if (provider.session) {\n            await provider.disconnect();\n        }\n    }\n    if (walletId !== \"walletConnect\") {\n        async function handleSessionRequest() {\n            var _provider_session_peer_metadata_redirect, _provider_session_peer_metadata, _provider_session_peer, _provider_session;\n            const walletLinkToOpen = ((_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_peer = _provider_session.peer) === null || _provider_session_peer === void 0 ? void 0 : (_provider_session_peer_metadata = _provider_session_peer.metadata) === null || _provider_session_peer_metadata === void 0 ? void 0 : (_provider_session_peer_metadata_redirect = _provider_session_peer_metadata.redirect) === null || _provider_session_peer_metadata_redirect === void 0 ? void 0 : _provider_session_peer_metadata_redirect.native) || walletInfo.mobile.native || walletInfo.mobile.universal;\n            if (sessionRequestHandler && walletLinkToOpen) {\n                // TODO: propagate error when this fails\n                await sessionRequestHandler(walletLinkToOpen);\n            }\n        }\n        provider.signer.client.on(\"session_request_sent\", handleSessionRequest);\n        provider.events.addListener(\"disconnect\", ()=>{\n            provider.signer.client.off(\"session_request_sent\", handleSessionRequest);\n        });\n    }\n    return provider;\n}\nfunction createAccount(param) {\n    let { provider, address, client } = param;\n    const account = {\n        address: address,\n        async sendTransaction (tx) {\n            const transactionHash = await provider.request({\n                method: \"eth_sendTransaction\",\n                params: [\n                    {\n                        gas: tx.gas ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(tx.gas) : undefined,\n                        value: tx.value ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(tx.value) : undefined,\n                        from: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(address),\n                        to: tx.to,\n                        data: tx.data\n                    }\n                ]\n            });\n            var _tx_to;\n            (0,_analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_9__.trackTransaction)({\n                client: client,\n                walletAddress: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(address),\n                walletType: \"walletConnect\",\n                transactionHash,\n                chainId: tx.chainId,\n                contractAddress: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                gasPrice: tx.gasPrice\n            });\n            return {\n                transactionHash\n            };\n        },\n        async signMessage (param) {\n            let { message } = param;\n            const messageToSign = (()=>{\n                if (typeof message === \"string\") {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.stringToHex)(message);\n                }\n                if (message.raw instanceof Uint8Array) {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToHex)(message.raw);\n                }\n                return message.raw;\n            })();\n            return provider.request({\n                method: \"personal_sign\",\n                params: [\n                    messageToSign,\n                    this.address\n                ]\n            });\n        },\n        async signTypedData (_data) {\n            const data = (0,_utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__.parseTypedData)(_data);\n            const { domain, message, primaryType } = data;\n            const types = {\n                EIP712Domain: (0,viem__WEBPACK_IMPORTED_MODULE_11__.getTypesForEIP712Domain)({\n                    domain\n                }),\n                ...data.types\n            };\n            // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n            // as we can't statically check this with TypeScript.\n            (0,viem__WEBPACK_IMPORTED_MODULE_11__.validateTypedData)({\n                domain,\n                message,\n                primaryType,\n                types\n            });\n            const typedData = (0,viem__WEBPACK_IMPORTED_MODULE_11__.serializeTypedData)({\n                domain: domain !== null && domain !== void 0 ? domain : {},\n                message,\n                primaryType,\n                types\n            });\n            return await provider.request({\n                method: \"eth_signTypedData_v4\",\n                params: [\n                    this.address,\n                    typedData\n                ]\n            });\n        }\n    };\n    return account;\n}\nfunction onConnect(address, chain, provider, emitter, storage, client) {\n    const account = createAccount({\n        provider,\n        address,\n        client\n    });\n    async function disconnect() {\n        provider.removeListener(\"accountsChanged\", onAccountsChanged);\n        provider.removeListener(\"chainChanged\", onChainChanged);\n        provider.removeListener(\"disconnect\", onDisconnect);\n        await provider.disconnect();\n    }\n    function onDisconnect() {\n        setRequestedChainsIds([], storage);\n        storage === null || storage === void 0 ? void 0 : storage.removeItem(storageKeys.lastUsedChainId);\n        disconnect();\n        emitter.emit(\"disconnect\", undefined);\n    }\n    function onAccountsChanged(accounts) {\n        if (accounts[0]) {\n            const newAccount = createAccount({\n                provider,\n                address: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(accounts[0]),\n                client\n            });\n            emitter.emit(\"accountChanged\", newAccount);\n            emitter.emit(\"accountsChanged\", accounts);\n        } else {\n            onDisconnect();\n        }\n    }\n    function onChainChanged(newChainId) {\n        const newChain = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)((0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(newChainId));\n        emitter.emit(\"chainChanged\", newChain);\n        storage === null || storage === void 0 ? void 0 : storage.setItem(storageKeys.lastUsedChainId, String(newChainId));\n    }\n    provider.on(\"accountsChanged\", onAccountsChanged);\n    provider.on(\"chainChanged\", onChainChanged);\n    provider.on(\"disconnect\", onDisconnect);\n    provider.on(\"session_delete\", onDisconnect);\n    return [\n        account,\n        chain,\n        disconnect,\n        (newChain)=>switchChainWC(provider, newChain, storage)\n    ];\n}\n// Storage utils  -----------------------------------------------------------------------------------------------\nfunction getNamespaceMethods(provider) {\n    var _provider_session_namespaces_NAMESPACE, _provider_session;\n    return ((_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE = _provider_session.namespaces[_constants_js__WEBPACK_IMPORTED_MODULE_5__.NAMESPACE]) === null || _provider_session_namespaces_NAMESPACE === void 0 ? void 0 : _provider_session_namespaces_NAMESPACE.methods) || [];\n}\nfunction getNamespaceChainsIds(provider) {\n    var _provider_session_namespaces_NAMESPACE_chains, _provider_session_namespaces_NAMESPACE, _provider_session;\n    const chainIds = (_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE = _provider_session.namespaces[_constants_js__WEBPACK_IMPORTED_MODULE_5__.NAMESPACE]) === null || _provider_session_namespaces_NAMESPACE === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE_chains = _provider_session_namespaces_NAMESPACE.chains) === null || _provider_session_namespaces_NAMESPACE_chains === void 0 ? void 0 : _provider_session_namespaces_NAMESPACE_chains.map((chain)=>Number.parseInt(chain.split(\":\")[1] || \"\"));\n    return chainIds !== null && chainIds !== void 0 ? chainIds : [];\n}\nasync function switchChainWC(provider, chain, storage) {\n    const chainId = chain.id;\n    try {\n        const namespaceChains = getNamespaceChainsIds(provider);\n        const namespaceMethods = getNamespaceMethods(provider);\n        const isChainApproved = namespaceChains.includes(chainId);\n        if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n            var _chain_blockExplorers, _apiChain_explorers;\n            const apiChain = await (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getChainMetadata)(chain);\n            const blockExplorerUrls = [\n                ...new Set([\n                    ...((_chain_blockExplorers = chain.blockExplorers) === null || _chain_blockExplorers === void 0 ? void 0 : _chain_blockExplorers.map((x)=>x.url)) || [],\n                    ...((_apiChain_explorers = apiChain.explorers) === null || _apiChain_explorers === void 0 ? void 0 : _apiChain_explorers.map((x)=>x.url)) || []\n                ])\n            ];\n            await provider.request({\n                method: ADD_ETH_CHAIN_METHOD,\n                params: [\n                    {\n                        chainId: (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(apiChain.chainId),\n                        chainName: apiChain.name,\n                        nativeCurrency: apiChain.nativeCurrency,\n                        rpcUrls: (0,_utils_chains_js__WEBPACK_IMPORTED_MODULE_12__.getValidPublicRPCUrl)(apiChain),\n                        blockExplorerUrls: blockExplorerUrls.length > 0 ? blockExplorerUrls : undefined\n                    }\n                ]\n            });\n            const requestedChains = await getRequestedChainsIds(storage);\n            requestedChains.push(chainId);\n            setRequestedChainsIds(requestedChains, storage);\n        }\n        await provider.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId)\n                }\n            ]\n        });\n    } catch (error) {\n        const message = typeof error === \"string\" ? error : error === null || error === void 0 ? void 0 : error.message;\n        if (/user rejected request/i.test(message)) {\n            throw new viem__WEBPACK_IMPORTED_MODULE_13__.UserRejectedRequestError(error);\n        }\n        throw new viem__WEBPACK_IMPORTED_MODULE_13__.SwitchChainError(error);\n    }\n}\n/**\n * Set the requested chains to the storage.\n * @internal\n */ function setRequestedChainsIds(chains, storage) {\n    storage === null || storage === void 0 ? void 0 : storage.setItem(storageKeys.requestedChains, (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_14__.stringify)(chains));\n}\n/**\n * Get the last requested chains from the storage.\n * @internal\n */ async function getRequestedChainsIds(storage) {\n    const data = await storage.getItem(storageKeys.requestedChains);\n    return data ? JSON.parse(data) : [];\n}\nfunction getChainsToRequest(options) {\n    const rpcMap = {};\n    if (options.chain) {\n        rpcMap[options.chain.id] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getRpcUrlForChain)({\n            chain: options.chain,\n            client: options.client\n        });\n    }\n    // limit optional chains to 10\n    const optionalChains = ((options === null || options === void 0 ? void 0 : options.optionalChains) || []).slice(0, 10);\n    for (const chain of optionalChains){\n        rpcMap[chain.id] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getRpcUrlForChain)({\n            chain: chain,\n            client: options.client\n        });\n    }\n    if (!options.chain && optionalChains.length === 0) {\n        rpcMap[1] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(1).rpc;\n    }\n    return {\n        rpcMap,\n        requiredChain: options.chain ? options.chain : undefined,\n        optionalChains: optionalChains.length > 0 ? optionalChains.map((x)=>x.id) : [\n            1\n        ]\n    };\n}\nconst chainsToRequestForSafe = [\n    1,\n    11155111,\n    42161,\n    43114,\n    8453,\n    1313161554,\n    84532,\n    56,\n    42220,\n    100,\n    10,\n    137,\n    1101,\n    324,\n    534352\n]; //# sourceMappingURL=controller.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/request.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/errors/request.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRequestError: function() { return /* binding */ HttpRequestError; },\n/* harmony export */   RpcRequestError: function() { return /* binding */ RpcRequestError; },\n/* harmony export */   SocketClosedError: function() { return /* binding */ SocketClosedError; },\n/* harmony export */   TimeoutError: function() { return /* binding */ TimeoutError; },\n/* harmony export */   WebSocketRequestError: function() { return /* binding */ WebSocketRequestError; }\n/* harmony export */ });\n/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/stringify.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/stringify.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/base.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js\");\n\n\n\nclass HttpRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, cause, details, headers, status, url }){\n        super(\"HTTP request failed.\", {\n            cause,\n            details,\n            metaMessages: [\n                status && \"Status: \".concat(status),\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                body && \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ].filter(Boolean),\n            name: \"HttpRequestError\"\n        });\n        Object.defineProperty(this, \"body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.url = url;\n    }\n}\nclass WebSocketRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, cause, details, url }){\n        super(\"WebSocket request failed.\", {\n            cause,\n            details,\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                body && \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ].filter(Boolean),\n            name: \"WebSocketRequestError\"\n        });\n    }\n}\nclass RpcRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, error, url }){\n        super(\"RPC Request failed.\", {\n            cause: error,\n            details: error.message,\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ],\n            name: \"RpcRequestError\"\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.code = error.code;\n    }\n}\nclass SocketClosedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ url } = {}){\n        super(\"The socket has been closed.\", {\n            metaMessages: [\n                url && \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url))\n            ].filter(Boolean),\n            name: \"SocketClosedError\"\n        });\n    }\n}\nclass TimeoutError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, url }){\n        super(\"The request took too long to respond.\", {\n            details: \"The request timed out.\",\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ],\n            name: \"TimeoutError\"\n        });\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDWjtBQUNGO0FBQzdCLE1BQU1HLHlCQUF5QkYsK0NBQVNBO0lBQzNDRyxZQUFZLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxHQUFHLEVBQUcsQ0FBRTtRQUN6RCxLQUFLLENBQUMsd0JBQXdCO1lBQzFCSjtZQUNBQztZQUNBSSxjQUFjO2dCQUNWRixVQUFVLFdBQWtCLE9BQVBBO2dCQUNwQixRQUFtQixPQUFaUCxpREFBTUEsQ0FBQ1E7Z0JBQ2ZMLFFBQVEsaUJBQWlDLE9BQWhCTCw4REFBU0EsQ0FBQ0s7YUFDdEMsQ0FBQ08sTUFBTSxDQUFDQztZQUNUQyxNQUFNO1FBQ1Y7UUFDQUMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxXQUFXO1lBQ25DQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxVQUFVO1lBQ2xDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxPQUFPO1lBQy9CQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQSxJQUFJLENBQUNmLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNHLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0E7SUFDZjtBQUNKO0FBQ08sTUFBTVcsOEJBQThCcEIsK0NBQVNBO0lBQ2hERyxZQUFZLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVHLEdBQUcsRUFBRyxDQUFFO1FBQ3hDLEtBQUssQ0FBQyw2QkFBNkI7WUFDL0JKO1lBQ0FDO1lBQ0FJLGNBQWM7Z0JBQ1QsUUFBbUIsT0FBWlQsaURBQU1BLENBQUNRO2dCQUNmTCxRQUFRLGlCQUFpQyxPQUFoQkwsOERBQVNBLENBQUNLO2FBQ3RDLENBQUNPLE1BQU0sQ0FBQ0M7WUFDVEMsTUFBTTtRQUNWO0lBQ0o7QUFDSjtBQUNPLE1BQU1RLHdCQUF3QnJCLCtDQUFTQTtJQUMxQ0csWUFBWSxFQUFFQyxJQUFJLEVBQUVrQixLQUFLLEVBQUViLEdBQUcsRUFBRyxDQUFFO1FBQy9CLEtBQUssQ0FBQyx1QkFBdUI7WUFDekJKLE9BQU9pQjtZQUNQaEIsU0FBU2dCLE1BQU1DLE9BQU87WUFDdEJiLGNBQWM7Z0JBQUUsUUFBbUIsT0FBWlQsaURBQU1BLENBQUNRO2dCQUFTLGlCQUFnQyxPQUFoQlYsOERBQVNBLENBQUNLO2FBQVE7WUFDekVTLE1BQU07UUFDVjtRQUNBQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBLElBQUksQ0FBQ0ssSUFBSSxHQUFHRixNQUFNRSxJQUFJO0lBQzFCO0FBQ0o7QUFDTyxNQUFNQywwQkFBMEJ6QiwrQ0FBU0E7SUFDNUNHLFlBQVksRUFBRU0sR0FBRyxFQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUU7UUFDdkIsS0FBSyxDQUFDLCtCQUErQjtZQUNqQ0MsY0FBYztnQkFBQ0QsT0FBTyxRQUFvQixPQUFaUixpREFBTUEsQ0FBQ1E7YUFBTyxDQUFDRSxNQUFNLENBQUNDO1lBQ3BEQyxNQUFNO1FBQ1Y7SUFDSjtBQUNKO0FBQ08sTUFBTWEscUJBQXFCMUIsK0NBQVNBO0lBQ3ZDRyxZQUFZLEVBQUVDLElBQUksRUFBRUssR0FBRyxFQUFHLENBQUU7UUFDeEIsS0FBSyxDQUFDLHlDQUF5QztZQUMzQ0gsU0FBUztZQUNUSSxjQUFjO2dCQUFFLFFBQW1CLE9BQVpULGlEQUFNQSxDQUFDUTtnQkFBUyxpQkFBZ0MsT0FBaEJWLDhEQUFTQSxDQUFDSzthQUFRO1lBQ3pFUyxNQUFNO1FBQ1Y7SUFDSjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3JlcXVlc3QuanM/NDJlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tICcuLi91dGlscy9zdHJpbmdpZnkuanMnO1xuaW1wb3J0IHsgQmFzZUVycm9yIH0gZnJvbSAnLi9iYXNlLmpzJztcbmltcG9ydCB7IGdldFVybCB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGNsYXNzIEh0dHBSZXF1ZXN0RXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYm9keSwgY2F1c2UsIGRldGFpbHMsIGhlYWRlcnMsIHN0YXR1cywgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdIVFRQIHJlcXVlc3QgZmFpbGVkLicsIHtcbiAgICAgICAgICAgIGNhdXNlLFxuICAgICAgICAgICAgZGV0YWlscyxcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW1xuICAgICAgICAgICAgICAgIHN0YXR1cyAmJiBgU3RhdHVzOiAke3N0YXR1c31gLFxuICAgICAgICAgICAgICAgIGBVUkw6ICR7Z2V0VXJsKHVybCl9YCxcbiAgICAgICAgICAgICAgICBib2R5ICYmIGBSZXF1ZXN0IGJvZHk6ICR7c3RyaW5naWZ5KGJvZHkpfWAsXG4gICAgICAgICAgICBdLmZpbHRlcihCb29sZWFuKSxcbiAgICAgICAgICAgIG5hbWU6ICdIdHRwUmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJvZHlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdGF0dXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidXJsXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYm9keSA9IGJvZHk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgV2ViU29ja2V0UmVxdWVzdEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGJvZHksIGNhdXNlLCBkZXRhaWxzLCB1cmwsIH0pIHtcbiAgICAgICAgc3VwZXIoJ1dlYlNvY2tldCByZXF1ZXN0IGZhaWxlZC4nLCB7XG4gICAgICAgICAgICBjYXVzZSxcbiAgICAgICAgICAgIGRldGFpbHMsXG4gICAgICAgICAgICBtZXRhTWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICBgVVJMOiAke2dldFVybCh1cmwpfWAsXG4gICAgICAgICAgICAgICAgYm9keSAmJiBgUmVxdWVzdCBib2R5OiAke3N0cmluZ2lmeShib2R5KX1gLFxuICAgICAgICAgICAgXS5maWx0ZXIoQm9vbGVhbiksXG4gICAgICAgICAgICBuYW1lOiAnV2ViU29ja2V0UmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJwY1JlcXVlc3RFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBib2R5LCBlcnJvciwgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdSUEMgUmVxdWVzdCBmYWlsZWQuJywge1xuICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW2BVUkw6ICR7Z2V0VXJsKHVybCl9YCwgYFJlcXVlc3QgYm9keTogJHtzdHJpbmdpZnkoYm9keSl9YF0sXG4gICAgICAgICAgICBuYW1lOiAnUnBjUmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvZGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb2RlID0gZXJyb3IuY29kZTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgU29ja2V0Q2xvc2VkRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgdXJsLCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoJ1RoZSBzb2NrZXQgaGFzIGJlZW4gY2xvc2VkLicsIHtcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW3VybCAmJiBgVVJMOiAke2dldFVybCh1cmwpfWBdLmZpbHRlcihCb29sZWFuKSxcbiAgICAgICAgICAgIG5hbWU6ICdTb2NrZXRDbG9zZWRFcnJvcicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYm9keSwgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdUaGUgcmVxdWVzdCB0b29rIHRvbyBsb25nIHRvIHJlc3BvbmQuJywge1xuICAgICAgICAgICAgZGV0YWlsczogJ1RoZSByZXF1ZXN0IHRpbWVkIG91dC4nLFxuICAgICAgICAgICAgbWV0YU1lc3NhZ2VzOiBbYFVSTDogJHtnZXRVcmwodXJsKX1gLCBgUmVxdWVzdCBib2R5OiAke3N0cmluZ2lmeShib2R5KX1gXSxcbiAgICAgICAgICAgIG5hbWU6ICdUaW1lb3V0RXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJzdHJpbmdpZnkiLCJCYXNlRXJyb3IiLCJnZXRVcmwiLCJIdHRwUmVxdWVzdEVycm9yIiwiY29uc3RydWN0b3IiLCJib2R5IiwiY2F1c2UiLCJkZXRhaWxzIiwiaGVhZGVycyIsInN0YXR1cyIsInVybCIsIm1ldGFNZXNzYWdlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJuYW1lIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIldlYlNvY2tldFJlcXVlc3RFcnJvciIsIlJwY1JlcXVlc3RFcnJvciIsImVycm9yIiwibWVzc2FnZSIsImNvZGUiLCJTb2NrZXRDbG9zZWRFcnJvciIsIlRpbWVvdXRFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/request.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/rpc.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainDisconnectedError: function() { return /* binding */ ChainDisconnectedError; },\n/* harmony export */   InternalRpcError: function() { return /* binding */ InternalRpcError; },\n/* harmony export */   InvalidInputRpcError: function() { return /* binding */ InvalidInputRpcError; },\n/* harmony export */   InvalidParamsRpcError: function() { return /* binding */ InvalidParamsRpcError; },\n/* harmony export */   InvalidRequestRpcError: function() { return /* binding */ InvalidRequestRpcError; },\n/* harmony export */   JsonRpcVersionUnsupportedError: function() { return /* binding */ JsonRpcVersionUnsupportedError; },\n/* harmony export */   LimitExceededRpcError: function() { return /* binding */ LimitExceededRpcError; },\n/* harmony export */   MethodNotFoundRpcError: function() { return /* binding */ MethodNotFoundRpcError; },\n/* harmony export */   MethodNotSupportedRpcError: function() { return /* binding */ MethodNotSupportedRpcError; },\n/* harmony export */   ParseRpcError: function() { return /* binding */ ParseRpcError; },\n/* harmony export */   ProviderDisconnectedError: function() { return /* binding */ ProviderDisconnectedError; },\n/* harmony export */   ProviderRpcError: function() { return /* binding */ ProviderRpcError; },\n/* harmony export */   ResourceNotFoundRpcError: function() { return /* binding */ ResourceNotFoundRpcError; },\n/* harmony export */   ResourceUnavailableRpcError: function() { return /* binding */ ResourceUnavailableRpcError; },\n/* harmony export */   RpcError: function() { return /* binding */ RpcError; },\n/* harmony export */   SwitchChainError: function() { return /* binding */ SwitchChainError; },\n/* harmony export */   TransactionRejectedRpcError: function() { return /* binding */ TransactionRejectedRpcError; },\n/* harmony export */   UnauthorizedProviderError: function() { return /* binding */ UnauthorizedProviderError; },\n/* harmony export */   UnknownRpcError: function() { return /* binding */ UnknownRpcError; },\n/* harmony export */   UnsupportedProviderMethodError: function() { return /* binding */ UnsupportedProviderMethodError; },\n/* harmony export */   UserRejectedRequestError: function() { return /* binding */ UserRejectedRequestError; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/base.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/request.js\");\n\n\nconst unknownErrorCode = -1;\nclass RpcError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(cause, { code, docsPath, metaMessages, name, shortMessage }){\n        super(shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: metaMessages || (cause === null || cause === void 0 ? void 0 : cause.metaMessages),\n            name: name || \"RpcError\"\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name || cause.name;\n        this.code = cause instanceof _request_js__WEBPACK_IMPORTED_MODULE_1__.RpcRequestError ? cause.code : code !== null && code !== void 0 ? code : unknownErrorCode;\n    }\n}\nclass ProviderRpcError extends RpcError {\n    constructor(cause, options){\n        super(cause, options);\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = options.data;\n    }\n}\nclass ParseRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ParseRpcError.code,\n            name: \"ParseRpcError\",\n            shortMessage: \"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\"\n        });\n    }\n}\nObject.defineProperty(ParseRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32700\n});\nclass InvalidRequestRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidRequestRpcError.code,\n            name: \"InvalidRequestRpcError\",\n            shortMessage: \"JSON is not a valid request object.\"\n        });\n    }\n}\nObject.defineProperty(InvalidRequestRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32600\n});\nclass MethodNotFoundRpcError extends RpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: MethodNotFoundRpcError.code,\n            name: \"MethodNotFoundRpcError\",\n            shortMessage: \"The method\".concat(method ? ' \"'.concat(method, '\"') : \"\", \" does not exist / is not available.\")\n        });\n    }\n}\nObject.defineProperty(MethodNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32601\n});\nclass InvalidParamsRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidParamsRpcError.code,\n            name: \"InvalidParamsRpcError\",\n            shortMessage: [\n                \"Invalid parameters were provided to the RPC method.\",\n                \"Double check you have provided the correct parameters.\"\n            ].join(\"\\n\")\n        });\n    }\n}\nObject.defineProperty(InvalidParamsRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nclass InternalRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InternalRpcError.code,\n            name: \"InternalRpcError\",\n            shortMessage: \"An internal error was received.\"\n        });\n    }\n}\nObject.defineProperty(InternalRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32603\n});\nclass InvalidInputRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidInputRpcError.code,\n            name: \"InvalidInputRpcError\",\n            shortMessage: [\n                \"Missing or invalid parameters.\",\n                \"Double check you have provided the correct parameters.\"\n            ].join(\"\\n\")\n        });\n    }\n}\nObject.defineProperty(InvalidInputRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32000\n});\nclass ResourceNotFoundRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ResourceNotFoundRpcError.code,\n            name: \"ResourceNotFoundRpcError\",\n            shortMessage: \"Requested resource not found.\"\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ResourceNotFoundRpcError\"\n        });\n    }\n}\nObject.defineProperty(ResourceNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32001\n});\nclass ResourceUnavailableRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ResourceUnavailableRpcError.code,\n            name: \"ResourceUnavailableRpcError\",\n            shortMessage: \"Requested resource not available.\"\n        });\n    }\n}\nObject.defineProperty(ResourceUnavailableRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32002\n});\nclass TransactionRejectedRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: TransactionRejectedRpcError.code,\n            name: \"TransactionRejectedRpcError\",\n            shortMessage: \"Transaction creation failed.\"\n        });\n    }\n}\nObject.defineProperty(TransactionRejectedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32003\n});\nclass MethodNotSupportedRpcError extends RpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: MethodNotSupportedRpcError.code,\n            name: \"MethodNotSupportedRpcError\",\n            shortMessage: \"Method\".concat(method ? ' \"'.concat(method, '\"') : \"\", \" is not implemented.\")\n        });\n    }\n}\nObject.defineProperty(MethodNotSupportedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32004\n});\nclass LimitExceededRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: LimitExceededRpcError.code,\n            name: \"LimitExceededRpcError\",\n            shortMessage: \"Request exceeds defined limit.\"\n        });\n    }\n}\nObject.defineProperty(LimitExceededRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32005\n});\nclass JsonRpcVersionUnsupportedError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: JsonRpcVersionUnsupportedError.code,\n            name: \"JsonRpcVersionUnsupportedError\",\n            shortMessage: \"Version of JSON-RPC protocol is not supported.\"\n        });\n    }\n}\nObject.defineProperty(JsonRpcVersionUnsupportedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32006\n});\nclass UserRejectedRequestError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: UserRejectedRequestError.code,\n            name: \"UserRejectedRequestError\",\n            shortMessage: \"User rejected the request.\"\n        });\n    }\n}\nObject.defineProperty(UserRejectedRequestError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4001\n});\nclass UnauthorizedProviderError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: UnauthorizedProviderError.code,\n            name: \"UnauthorizedProviderError\",\n            shortMessage: \"The requested method and/or account has not been authorized by the user.\"\n        });\n    }\n}\nObject.defineProperty(UnauthorizedProviderError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4100\n});\nclass UnsupportedProviderMethodError extends ProviderRpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: UnsupportedProviderMethodError.code,\n            name: \"UnsupportedProviderMethodError\",\n            shortMessage: \"The Provider does not support the requested method\".concat(method ? ' \" '.concat(method, '\"') : \"\", \".\")\n        });\n    }\n}\nObject.defineProperty(UnsupportedProviderMethodError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4200\n});\nclass ProviderDisconnectedError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: ProviderDisconnectedError.code,\n            name: \"ProviderDisconnectedError\",\n            shortMessage: \"The Provider is disconnected from all chains.\"\n        });\n    }\n}\nObject.defineProperty(ProviderDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4900\n});\nclass ChainDisconnectedError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: ChainDisconnectedError.code,\n            name: \"ChainDisconnectedError\",\n            shortMessage: \"The Provider is not connected to the requested chain.\"\n        });\n    }\n}\nObject.defineProperty(ChainDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4901\n});\nclass SwitchChainError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: SwitchChainError.code,\n            name: \"SwitchChainError\",\n            shortMessage: \"An error occurred when attempting to switch chain.\"\n        });\n    }\n}\nObject.defineProperty(SwitchChainError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4902\n});\nclass UnknownRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            name: \"UnknownRpcError\",\n            shortMessage: \"An unknown RPC error occurred.\"\n        });\n    }\n} //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3JwYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNTO0FBQy9DLE1BQU1FLG1CQUFtQixDQUFDO0FBQ25CLE1BQU1DLGlCQUFpQkgsK0NBQVNBO0lBQ25DSSxZQUFZQyxLQUFLLEVBQUUsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLFlBQVksRUFBRUMsSUFBSSxFQUFFQyxZQUFZLEVBQUcsQ0FBRTtRQUN0RSxLQUFLLENBQUNBLGNBQWM7WUFDaEJMO1lBQ0FFO1lBQ0FDLGNBQWNBLGlCQUFnQkgsa0JBQUFBLDRCQUFBQSxNQUFPRyxZQUFZO1lBQ2pEQyxNQUFNQSxRQUFRO1FBQ2xCO1FBQ0FFLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsUUFBUTtZQUNoQ0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTyxLQUFLO1FBQ2hCO1FBQ0EsSUFBSSxDQUFDUCxJQUFJLEdBQUdBLFFBQVFKLE1BQU1JLElBQUk7UUFDOUIsSUFBSSxDQUFDSCxJQUFJLEdBQUlELGlCQUFpQkosd0RBQWVBLEdBQUdJLE1BQU1DLElBQUksR0FBSUEsaUJBQUFBLGtCQUFBQSxPQUFRSjtJQUMxRTtBQUNKO0FBQ08sTUFBTWUseUJBQXlCZDtJQUNsQ0MsWUFBWUMsS0FBSyxFQUFFYSxPQUFPLENBQUU7UUFDeEIsS0FBSyxDQUFDYixPQUFPYTtRQUNiUCxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBLElBQUksQ0FBQ0csSUFBSSxHQUFHRCxRQUFRQyxJQUFJO0lBQzVCO0FBQ0o7QUFDTyxNQUFNQyxzQkFBc0JqQjtJQUMvQkMsWUFBWUMsS0FBSyxDQUFFO1FBQ2YsS0FBSyxDQUFDQSxPQUFPO1lBQ1RDLE1BQU1j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Q2RDLFVBQVU7SUFDVkMsT0FBTztBQUNYO0FBQ08sTUFBTXFCLGtDQUFrQ3BCO0lBQzNDYixZQUFZQyxLQUFLLENBQUU7UUFDZixLQUFLLENBQUNBLE9BQU87WUFDVEMsTUFBTStCLDBCQUEwQi9CLElBQUk7WUFDcENHLE1BQU07WUFDTkMsY0FBYztRQUNsQjtJQUNKO0FBQ0o7QUFDQUMsT0FBT0MsY0FBYyxDQUFDeUIsMkJBQTJCLFFBQVE7SUFDckR4QixZQUFZO0lBQ1pDLGNBQWM7SUFDZEMsVUFBVTtJQUNWQyxPQUFPO0FBQ1g7QUFDTyxNQUFNc0IsK0JBQStCckI7SUFDeENiLFlBQVlDLEtBQUssQ0FBRTtRQUNmLEtBQUssQ0FBQ0EsT0FBTztZQUNUQyxNQUFNZ0MsdUJBQXVCaEMsSUFBSTtZQUNqQ0csTUFBTTtZQUNOQyxjQUFjO1FBQ2xCO0lBQ0o7QUFDSjtBQUNBQyxPQUFPQyxjQUFjLENBQUMwQix3QkFBd0IsUUFBUTtJQUNsRHpCLFlBQVk7SUFDWkMsY0FBYztJQUNkQyxVQUFVO0lBQ1ZDLE9BQU87QUFDWDtBQUNPLE1BQU11Qix5QkFBeUJ0QjtJQUNsQ2IsWUFBWUMsS0FBSyxDQUFFO1FBQ2YsS0FBSyxDQUFDQSxPQUFPO1lBQ1RDLE1BQU1pQyxpQkFBaUJqQyxJQUFJO1lBQzNCRyxNQUFNO1lBQ05DLGNBQWM7UUFDbEI7SUFDSjtBQUNKO0FBQ0FDLE9BQU9DLGNBQWMsQ0FBQzJCLGtCQUFrQixRQUFRO0lBQzVDMUIsWUFBWTtJQUNaQyxjQUFjO0lBQ2RDLFVBQVU7SUFDVkMsT0FBTztBQUNYO0FBQ08sTUFBTXdCLHdCQUF3QnJDO0lBQ2pDQyxZQUFZQyxLQUFLLENBQUU7UUFDZixLQUFLLENBQUNBLE9BQU87WUFDVEksTUFBTTtZQUNOQyxjQUFjO1FBQ2xCO0lBQ0o7QUFDSixFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL2Vycm9ycy9ycGMuanM/ZmU4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRXJyb3IgfSBmcm9tICcuL2Jhc2UuanMnO1xuaW1wb3J0IHsgUnBjUmVxdWVzdEVycm9yIH0gZnJvbSAnLi9yZXF1ZXN0LmpzJztcbmNvbnN0IHVua25vd25FcnJvckNvZGUgPSAtMTtcbmV4cG9ydCBjbGFzcyBScGNFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UsIHsgY29kZSwgZG9jc1BhdGgsIG1ldGFNZXNzYWdlcywgbmFtZSwgc2hvcnRNZXNzYWdlLCB9KSB7XG4gICAgICAgIHN1cGVyKHNob3J0TWVzc2FnZSwge1xuICAgICAgICAgICAgY2F1c2UsXG4gICAgICAgICAgICBkb2NzUGF0aCxcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogbWV0YU1lc3NhZ2VzIHx8IGNhdXNlPy5tZXRhTWVzc2FnZXMsXG4gICAgICAgICAgICBuYW1lOiBuYW1lIHx8ICdScGNFcnJvcicsXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjb2RlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWUgfHwgY2F1c2UubmFtZTtcbiAgICAgICAgdGhpcy5jb2RlID0gKGNhdXNlIGluc3RhbmNlb2YgUnBjUmVxdWVzdEVycm9yID8gY2F1c2UuY29kZSA6IChjb2RlID8/IHVua25vd25FcnJvckNvZGUpKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUHJvdmlkZXJScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihjYXVzZSwgb3B0aW9ucyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRhdGFcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5kYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBQYXJzZVJwY0Vycm9yIGV4dGVuZHMgUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBQYXJzZVJwY0Vycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnUGFyc2VScGNFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdJbnZhbGlkIEpTT04gd2FzIHJlY2VpdmVkIGJ5IHRoZSBzZXJ2ZXIuIEFuIGVycm9yIG9jY3VycmVkIG9uIHRoZSBzZXJ2ZXIgd2hpbGUgcGFyc2luZyB0aGUgSlNPTiB0ZXh0LicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShQYXJzZVJwY0Vycm9yLCBcImNvZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAtMzI3MDBcbn0pO1xuZXhwb3J0IGNsYXNzIEludmFsaWRSZXF1ZXN0UnBjRXJyb3IgZXh0ZW5kcyBScGNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UpIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IEludmFsaWRSZXF1ZXN0UnBjRXJyb3IuY29kZSxcbiAgICAgICAgICAgIG5hbWU6ICdJbnZhbGlkUmVxdWVzdFJwY0Vycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogJ0pTT04gaXMgbm90IGEgdmFsaWQgcmVxdWVzdCBvYmplY3QuJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEludmFsaWRSZXF1ZXN0UnBjRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IC0zMjYwMFxufSk7XG5leHBvcnQgY2xhc3MgTWV0aG9kTm90Rm91bmRScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSwgeyBtZXRob2QgfSA9IHt9KSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBNZXRob2ROb3RGb3VuZFJwY0Vycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnTWV0aG9kTm90Rm91bmRScGNFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6IGBUaGUgbWV0aG9kJHttZXRob2QgPyBgIFwiJHttZXRob2R9XCJgIDogJyd9IGRvZXMgbm90IGV4aXN0IC8gaXMgbm90IGF2YWlsYWJsZS5gLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoTWV0aG9kTm90Rm91bmRScGNFcnJvciwgXCJjb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogLTMyNjAxXG59KTtcbmV4cG9ydCBjbGFzcyBJbnZhbGlkUGFyYW1zUnBjRXJyb3IgZXh0ZW5kcyBScGNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UpIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IEludmFsaWRQYXJhbXNScGNFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ0ludmFsaWRQYXJhbXNScGNFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6IFtcbiAgICAgICAgICAgICAgICAnSW52YWxpZCBwYXJhbWV0ZXJzIHdlcmUgcHJvdmlkZWQgdG8gdGhlIFJQQyBtZXRob2QuJyxcbiAgICAgICAgICAgICAgICAnRG91YmxlIGNoZWNrIHlvdSBoYXZlIHByb3ZpZGVkIHRoZSBjb3JyZWN0IHBhcmFtZXRlcnMuJyxcbiAgICAgICAgICAgIF0uam9pbignXFxuJyksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbnZhbGlkUGFyYW1zUnBjRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IC0zMjYwMlxufSk7XG5leHBvcnQgY2xhc3MgSW50ZXJuYWxScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgICAgICBzdXBlcihjYXVzZSwge1xuICAgICAgICAgICAgY29kZTogSW50ZXJuYWxScGNFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ0ludGVybmFsUnBjRXJyb3InLFxuICAgICAgICAgICAgc2hvcnRNZXNzYWdlOiAnQW4gaW50ZXJuYWwgZXJyb3Igd2FzIHJlY2VpdmVkLicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbnRlcm5hbFJwY0Vycm9yLCBcImNvZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAtMzI2MDNcbn0pO1xuZXhwb3J0IGNsYXNzIEludmFsaWRJbnB1dFJwY0Vycm9yIGV4dGVuZHMgUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBJbnZhbGlkSW5wdXRScGNFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ0ludmFsaWRJbnB1dFJwY0Vycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogW1xuICAgICAgICAgICAgICAgICdNaXNzaW5nIG9yIGludmFsaWQgcGFyYW1ldGVycy4nLFxuICAgICAgICAgICAgICAgICdEb3VibGUgY2hlY2sgeW91IGhhdmUgcHJvdmlkZWQgdGhlIGNvcnJlY3QgcGFyYW1ldGVycy4nLFxuICAgICAgICAgICAgXS5qb2luKCdcXG4nKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEludmFsaWRJbnB1dFJwY0Vycm9yLCBcImNvZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAtMzIwMDBcbn0pO1xuZXhwb3J0IGNsYXNzIFJlc291cmNlTm90Rm91bmRScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgICAgICBzdXBlcihjYXVzZSwge1xuICAgICAgICAgICAgY29kZTogUmVzb3VyY2VOb3RGb3VuZFJwY0Vycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnUmVzb3VyY2VOb3RGb3VuZFJwY0Vycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogJ1JlcXVlc3RlZCByZXNvdXJjZSBub3QgZm91bmQuJyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6ICdSZXNvdXJjZU5vdEZvdW5kUnBjRXJyb3InXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZXNvdXJjZU5vdEZvdW5kUnBjRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IC0zMjAwMVxufSk7XG5leHBvcnQgY2xhc3MgUmVzb3VyY2VVbmF2YWlsYWJsZVJwY0Vycm9yIGV4dGVuZHMgUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBSZXNvdXJjZVVuYXZhaWxhYmxlUnBjRXJyb3IuY29kZSxcbiAgICAgICAgICAgIG5hbWU6ICdSZXNvdXJjZVVuYXZhaWxhYmxlUnBjRXJyb3InLFxuICAgICAgICAgICAgc2hvcnRNZXNzYWdlOiAnUmVxdWVzdGVkIHJlc291cmNlIG5vdCBhdmFpbGFibGUuJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlc291cmNlVW5hdmFpbGFibGVScGNFcnJvciwgXCJjb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogLTMyMDAyXG59KTtcbmV4cG9ydCBjbGFzcyBUcmFuc2FjdGlvblJlamVjdGVkUnBjRXJyb3IgZXh0ZW5kcyBScGNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UpIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IFRyYW5zYWN0aW9uUmVqZWN0ZWRScGNFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ1RyYW5zYWN0aW9uUmVqZWN0ZWRScGNFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdUcmFuc2FjdGlvbiBjcmVhdGlvbiBmYWlsZWQuJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFRyYW5zYWN0aW9uUmVqZWN0ZWRScGNFcnJvciwgXCJjb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogLTMyMDAzXG59KTtcbmV4cG9ydCBjbGFzcyBNZXRob2ROb3RTdXBwb3J0ZWRScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSwgeyBtZXRob2QgfSA9IHt9KSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBNZXRob2ROb3RTdXBwb3J0ZWRScGNFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ01ldGhvZE5vdFN1cHBvcnRlZFJwY0Vycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogYE1ldGhvZCR7bWV0aG9kID8gYCBcIiR7bWV0aG9kfVwiYCA6ICcnfSBpcyBub3QgaW1wbGVtZW50ZWQuYCxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KE1ldGhvZE5vdFN1cHBvcnRlZFJwY0Vycm9yLCBcImNvZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiAtMzIwMDRcbn0pO1xuZXhwb3J0IGNsYXNzIExpbWl0RXhjZWVkZWRScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgICAgICBzdXBlcihjYXVzZSwge1xuICAgICAgICAgICAgY29kZTogTGltaXRFeGNlZWRlZFJwY0Vycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnTGltaXRFeGNlZWRlZFJwY0Vycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogJ1JlcXVlc3QgZXhjZWVkcyBkZWZpbmVkIGxpbWl0LicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShMaW1pdEV4Y2VlZGVkUnBjRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IC0zMjAwNVxufSk7XG5leHBvcnQgY2xhc3MgSnNvblJwY1ZlcnNpb25VbnN1cHBvcnRlZEVycm9yIGV4dGVuZHMgUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBKc29uUnBjVmVyc2lvblVuc3VwcG9ydGVkRXJyb3IuY29kZSxcbiAgICAgICAgICAgIG5hbWU6ICdKc29uUnBjVmVyc2lvblVuc3VwcG9ydGVkRXJyb3InLFxuICAgICAgICAgICAgc2hvcnRNZXNzYWdlOiAnVmVyc2lvbiBvZiBKU09OLVJQQyBwcm90b2NvbCBpcyBub3Qgc3VwcG9ydGVkLicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShKc29uUnBjVmVyc2lvblVuc3VwcG9ydGVkRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IC0zMjAwNlxufSk7XG5leHBvcnQgY2xhc3MgVXNlclJlamVjdGVkUmVxdWVzdEVycm9yIGV4dGVuZHMgUHJvdmlkZXJScGNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UpIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IFVzZXJSZWplY3RlZFJlcXVlc3RFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ1VzZXJSZWplY3RlZFJlcXVlc3RFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdVc2VyIHJlamVjdGVkIHRoZSByZXF1ZXN0LicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShVc2VyUmVqZWN0ZWRSZXF1ZXN0RXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IDQwMDFcbn0pO1xuZXhwb3J0IGNsYXNzIFVuYXV0aG9yaXplZFByb3ZpZGVyRXJyb3IgZXh0ZW5kcyBQcm92aWRlclJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgICAgICBzdXBlcihjYXVzZSwge1xuICAgICAgICAgICAgY29kZTogVW5hdXRob3JpemVkUHJvdmlkZXJFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ1VuYXV0aG9yaXplZFByb3ZpZGVyRXJyb3InLFxuICAgICAgICAgICAgc2hvcnRNZXNzYWdlOiAnVGhlIHJlcXVlc3RlZCBtZXRob2QgYW5kL29yIGFjY291bnQgaGFzIG5vdCBiZWVuIGF1dGhvcml6ZWQgYnkgdGhlIHVzZXIuJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVuYXV0aG9yaXplZFByb3ZpZGVyRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IDQxMDBcbn0pO1xuZXhwb3J0IGNsYXNzIFVuc3VwcG9ydGVkUHJvdmlkZXJNZXRob2RFcnJvciBleHRlbmRzIFByb3ZpZGVyUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlLCB7IG1ldGhvZCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IFVuc3VwcG9ydGVkUHJvdmlkZXJNZXRob2RFcnJvci5jb2RlLFxuICAgICAgICAgICAgbmFtZTogJ1Vuc3VwcG9ydGVkUHJvdmlkZXJNZXRob2RFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6IGBUaGUgUHJvdmlkZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgcmVxdWVzdGVkIG1ldGhvZCR7bWV0aG9kID8gYCBcIiAke21ldGhvZH1cImAgOiAnJ30uYCxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFVuc3VwcG9ydGVkUHJvdmlkZXJNZXRob2RFcnJvciwgXCJjb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogNDIwMFxufSk7XG5leHBvcnQgY2xhc3MgUHJvdmlkZXJEaXNjb25uZWN0ZWRFcnJvciBleHRlbmRzIFByb3ZpZGVyUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBQcm92aWRlckRpc2Nvbm5lY3RlZEVycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnUHJvdmlkZXJEaXNjb25uZWN0ZWRFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdUaGUgUHJvdmlkZXIgaXMgZGlzY29ubmVjdGVkIGZyb20gYWxsIGNoYWlucy4nLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoUHJvdmlkZXJEaXNjb25uZWN0ZWRFcnJvciwgXCJjb2RlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogNDkwMFxufSk7XG5leHBvcnQgY2xhc3MgQ2hhaW5EaXNjb25uZWN0ZWRFcnJvciBleHRlbmRzIFByb3ZpZGVyUnBjRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNhdXNlKSB7XG4gICAgICAgIHN1cGVyKGNhdXNlLCB7XG4gICAgICAgICAgICBjb2RlOiBDaGFpbkRpc2Nvbm5lY3RlZEVycm9yLmNvZGUsXG4gICAgICAgICAgICBuYW1lOiAnQ2hhaW5EaXNjb25uZWN0ZWRFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdUaGUgUHJvdmlkZXIgaXMgbm90IGNvbm5lY3RlZCB0byB0aGUgcmVxdWVzdGVkIGNoYWluLicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShDaGFpbkRpc2Nvbm5lY3RlZEVycm9yLCBcImNvZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiA0OTAxXG59KTtcbmV4cG9ydCBjbGFzcyBTd2l0Y2hDaGFpbkVycm9yIGV4dGVuZHMgUHJvdmlkZXJScGNFcnJvciB7XG4gICAgY29uc3RydWN0b3IoY2F1c2UpIHtcbiAgICAgICAgc3VwZXIoY2F1c2UsIHtcbiAgICAgICAgICAgIGNvZGU6IFN3aXRjaENoYWluRXJyb3IuY29kZSxcbiAgICAgICAgICAgIG5hbWU6ICdTd2l0Y2hDaGFpbkVycm9yJyxcbiAgICAgICAgICAgIHNob3J0TWVzc2FnZTogJ0FuIGVycm9yIG9jY3VycmVkIHdoZW4gYXR0ZW1wdGluZyB0byBzd2l0Y2ggY2hhaW4uJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KFN3aXRjaENoYWluRXJyb3IsIFwiY29kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgdmFsdWU6IDQ5MDJcbn0pO1xuZXhwb3J0IGNsYXNzIFVua25vd25ScGNFcnJvciBleHRlbmRzIFJwY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihjYXVzZSkge1xuICAgICAgICBzdXBlcihjYXVzZSwge1xuICAgICAgICAgICAgbmFtZTogJ1Vua25vd25ScGNFcnJvcicsXG4gICAgICAgICAgICBzaG9ydE1lc3NhZ2U6ICdBbiB1bmtub3duIFJQQyBlcnJvciBvY2N1cnJlZC4nLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ycGMuanMubWFwIl0sIm5hbWVzIjpbIkJhc2VFcnJvciIsIlJwY1JlcXVlc3RFcnJvciIsInVua25vd25FcnJvckNvZGUiLCJScGNFcnJvciIsImNvbnN0cnVjdG9yIiwiY2F1c2UiLCJjb2RlIiwiZG9jc1BhdGgiLCJtZXRhTWVzc2FnZXMiLCJuYW1lIiwic2hvcnRNZXNzYWdlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIlByb3ZpZGVyUnBjRXJyb3IiLCJvcHRpb25zIiwiZGF0YSIsIlBhcnNlUnBjRXJyb3IiLCJJbnZhbGlkUmVxdWVzdFJwY0Vycm9yIiwiTWV0aG9kTm90Rm91bmRScGNFcnJvciIsIm1ldGhvZCIsIkludmFsaWRQYXJhbXNScGNFcnJvciIsImpvaW4iLCJJbnRlcm5hbFJwY0Vycm9yIiwiSW52YWxpZElucHV0UnBjRXJyb3IiLCJSZXNvdXJjZU5vdEZvdW5kUnBjRXJyb3IiLCJSZXNvdXJjZVVuYXZhaWxhYmxlUnBjRXJyb3IiLCJUcmFuc2FjdGlvblJlamVjdGVkUnBjRXJyb3IiLCJNZXRob2ROb3RTdXBwb3J0ZWRScGNFcnJvciIsIkxpbWl0RXhjZWVkZWRScGNFcnJvciIsIkpzb25ScGNWZXJzaW9uVW5zdXBwb3J0ZWRFcnJvciIsIlVzZXJSZWplY3RlZFJlcXVlc3RFcnJvciIsIlVuYXV0aG9yaXplZFByb3ZpZGVyRXJyb3IiLCJVbnN1cHBvcnRlZFByb3ZpZGVyTWV0aG9kRXJyb3IiLCJQcm92aWRlckRpc2Nvbm5lY3RlZEVycm9yIiwiQ2hhaW5EaXNjb25uZWN0ZWRFcnJvciIsIlN3aXRjaENoYWluRXJyb3IiLCJVbmtub3duUnBjRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/utils.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getContractAddress: function() { return /* binding */ getContractAddress; },\n/* harmony export */   getUrl: function() { return /* binding */ getUrl; }\n/* harmony export */ });\nconst getContractAddress = (address)=>address;\nconst getUrl = (url)=>url; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEscUJBQXFCLENBQUNDLFVBQVlBLFFBQVE7QUFDaEQsTUFBTUMsU0FBUyxDQUFDQyxNQUFRQSxJQUFJLENBQ25DLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL2Vycm9ycy91dGlscy5qcz84NDI3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnZXRDb250cmFjdEFkZHJlc3MgPSAoYWRkcmVzcykgPT4gYWRkcmVzcztcbmV4cG9ydCBjb25zdCBnZXRVcmwgPSAodXJsKSA9PiB1cmw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q29udHJhY3RBZGRyZXNzIiwiYWRkcmVzcyIsImdldFVybCIsInVybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js\n"));

/***/ })

}]);